var COMPILED = false;
var goog = goog || {};
goog.global = this;
goog.DEBUG = true;
goog.LOCALE = "en";
goog.evalWorksForGlobals_ = null;
goog.provide = function(name) {
  if(!COMPILED) {
    if(goog.getObjectByName(name) && !goog.implicitNamespaces_[name]) {
      throw Error('Namespace "' + name + '" already declared.');
    }
    var namespace = name;
    while(namespace = namespace.substring(0, namespace.lastIndexOf("."))) {
      goog.implicitNamespaces_[namespace] = true
    }
  }
  goog.exportPath_(name)
};
goog.setTestOnly = function(opt_message) {
  if(COMPILED && !goog.DEBUG) {
    opt_message = opt_message || "";
    throw Error("Importing test-only code into non-debug environment" + opt_message ? ": " + opt_message : ".");
  }
};
if(!COMPILED) {
  goog.implicitNamespaces_ = {}
}
goog.exportPath_ = function(name, opt_object, opt_objectToExportTo) {
  var parts = name.split(".");
  var cur = opt_objectToExportTo || goog.global;
  if(!(parts[0] in cur) && cur.execScript) {
    cur.execScript("var " + parts[0])
  }
  for(var part;parts.length && (part = parts.shift());) {
    if(!parts.length && goog.isDef(opt_object)) {
      cur[part] = opt_object
    }else {
      if(cur[part]) {
        cur = cur[part]
      }else {
        cur = cur[part] = {}
      }
    }
  }
};
goog.getObjectByName = function(name, opt_obj) {
  var parts = name.split(".");
  var cur = opt_obj || goog.global;
  for(var part;part = parts.shift();) {
    if(goog.isDefAndNotNull(cur[part])) {
      cur = cur[part]
    }else {
      return null
    }
  }
  return cur
};
goog.globalize = function(obj, opt_global) {
  var global = opt_global || goog.global;
  for(var x in obj) {
    global[x] = obj[x]
  }
};
goog.addDependency = function(relPath, provides, requires) {
  if(!COMPILED) {
    var provide, require;
    var path = relPath.replace(/\\/g, "/");
    var deps = goog.dependencies_;
    for(var i = 0;provide = provides[i];i++) {
      deps.nameToPath[provide] = path;
      if(!(path in deps.pathToNames)) {
        deps.pathToNames[path] = {}
      }
      deps.pathToNames[path][provide] = true
    }
    for(var j = 0;require = requires[j];j++) {
      if(!(path in deps.requires)) {
        deps.requires[path] = {}
      }
      deps.requires[path][require] = true
    }
  }
};
goog.require = function(rule) {
  if(!COMPILED) {
    if(goog.getObjectByName(rule)) {
      return
    }
    var path = goog.getPathFromDeps_(rule);
    if(path) {
      goog.included_[path] = true;
      goog.writeScripts_()
    }else {
      var errorMessage = "goog.require could not find: " + rule;
      if(goog.global.console) {
        goog.global.console["error"](errorMessage)
      }
      throw Error(errorMessage);
    }
  }
};
goog.basePath = "";
goog.global.CLOSURE_BASE_PATH;
goog.global.CLOSURE_NO_DEPS;
goog.global.CLOSURE_IMPORT_SCRIPT;
goog.nullFunction = function() {
};
goog.identityFunction = function(var_args) {
  return arguments[0]
};
goog.abstractMethod = function() {
  throw Error("unimplemented abstract method");
};
goog.addSingletonGetter = function(ctor) {
  ctor.getInstance = function() {
    return ctor.instance_ || (ctor.instance_ = new ctor)
  }
};
if(!COMPILED) {
  goog.included_ = {};
  goog.dependencies_ = {pathToNames:{}, nameToPath:{}, requires:{}, visited:{}, written:{}};
  goog.inHtmlDocument_ = function() {
    var doc = goog.global.document;
    return typeof doc != "undefined" && "write" in doc
  };
  goog.findBasePath_ = function() {
    if(goog.global.CLOSURE_BASE_PATH) {
      goog.basePath = goog.global.CLOSURE_BASE_PATH;
      return
    }else {
      if(!goog.inHtmlDocument_()) {
        return
      }
    }
    var doc = goog.global.document;
    var scripts = doc.getElementsByTagName("script");
    for(var i = scripts.length - 1;i >= 0;--i) {
      var src = scripts[i].src;
      var qmark = src.lastIndexOf("?");
      var l = qmark == -1 ? src.length : qmark;
      if(src.substr(l - 7, 7) == "base.js") {
        goog.basePath = src.substr(0, l - 7);
        return
      }
    }
  };
  goog.importScript_ = function(src) {
    var importScript = goog.global.CLOSURE_IMPORT_SCRIPT || goog.writeScriptTag_;
    if(!goog.dependencies_.written[src] && importScript(src)) {
      goog.dependencies_.written[src] = true
    }
  };
  goog.writeScriptTag_ = function(src) {
    if(goog.inHtmlDocument_()) {
      var doc = goog.global.document;
      doc.write('<script type="text/javascript" src="' + src + '"></' + "script>");
      return true
    }else {
      return false
    }
  };
  goog.writeScripts_ = function() {
    var scripts = [];
    var seenScript = {};
    var deps = goog.dependencies_;
    function visitNode(path) {
      if(path in deps.written) {
        return
      }
      if(path in deps.visited) {
        if(!(path in seenScript)) {
          seenScript[path] = true;
          scripts.push(path)
        }
        return
      }
      deps.visited[path] = true;
      if(path in deps.requires) {
        for(var requireName in deps.requires[path]) {
          if(requireName in deps.nameToPath) {
            visitNode(deps.nameToPath[requireName])
          }else {
            if(!goog.getObjectByName(requireName)) {
              throw Error("Undefined nameToPath for " + requireName);
            }
          }
        }
      }
      if(!(path in seenScript)) {
        seenScript[path] = true;
        scripts.push(path)
      }
    }
    for(var path in goog.included_) {
      if(!deps.written[path]) {
        visitNode(path)
      }
    }
    for(var i = 0;i < scripts.length;i++) {
      if(scripts[i]) {
        goog.importScript_(goog.basePath + scripts[i])
      }else {
        throw Error("Undefined script input");
      }
    }
  };
  goog.getPathFromDeps_ = function(rule) {
    if(rule in goog.dependencies_.nameToPath) {
      return goog.dependencies_.nameToPath[rule]
    }else {
      return null
    }
  };
  goog.findBasePath_();
  if(!goog.global.CLOSURE_NO_DEPS) {
    goog.importScript_(goog.basePath + "deps.js")
  }
}
goog.typeOf = function(value) {
  var s = typeof value;
  if(s == "object") {
    if(value) {
      if(value instanceof Array) {
        return"array"
      }else {
        if(value instanceof Object) {
          return s
        }
      }
      var className = Object.prototype.toString.call(value);
      if(className == "[object Window]") {
        return"object"
      }
      if(className == "[object Array]" || typeof value.length == "number" && typeof value.splice != "undefined" && typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("splice")) {
        return"array"
      }
      if(className == "[object Function]" || typeof value.call != "undefined" && typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("call")) {
        return"function"
      }
    }else {
      return"null"
    }
  }else {
    if(s == "function" && typeof value.call == "undefined") {
      return"object"
    }
  }
  return s
};
goog.propertyIsEnumerableCustom_ = function(object, propName) {
  if(propName in object) {
    for(var key in object) {
      if(key == propName && Object.prototype.hasOwnProperty.call(object, propName)) {
        return true
      }
    }
  }
  return false
};
goog.propertyIsEnumerable_ = function(object, propName) {
  if(object instanceof Object) {
    return Object.prototype.propertyIsEnumerable.call(object, propName)
  }else {
    return goog.propertyIsEnumerableCustom_(object, propName)
  }
};
goog.isDef = function(val) {
  return val !== undefined
};
goog.isNull = function(val) {
  return val === null
};
goog.isDefAndNotNull = function(val) {
  return val != null
};
goog.isArray = function(val) {
  return goog.typeOf(val) == "array"
};
goog.isArrayLike = function(val) {
  var type = goog.typeOf(val);
  return type == "array" || type == "object" && typeof val.length == "number"
};
goog.isDateLike = function(val) {
  return goog.isObject(val) && typeof val.getFullYear == "function"
};
goog.isString = function(val) {
  return typeof val == "string"
};
goog.isBoolean = function(val) {
  return typeof val == "boolean"
};
goog.isNumber = function(val) {
  return typeof val == "number"
};
goog.isFunction = function(val) {
  return goog.typeOf(val) == "function"
};
goog.isObject = function(val) {
  var type = goog.typeOf(val);
  return type == "object" || type == "array" || type == "function"
};
goog.getUid = function(obj) {
  return obj[goog.UID_PROPERTY_] || (obj[goog.UID_PROPERTY_] = ++goog.uidCounter_)
};
goog.removeUid = function(obj) {
  if("removeAttribute" in obj) {
    obj.removeAttribute(goog.UID_PROPERTY_)
  }
  try {
    delete obj[goog.UID_PROPERTY_]
  }catch(ex) {
  }
};
goog.UID_PROPERTY_ = "closure_uid_" + Math.floor(Math.random() * 2147483648).toString(36);
goog.uidCounter_ = 0;
goog.getHashCode = goog.getUid;
goog.removeHashCode = goog.removeUid;
goog.cloneObject = function(obj) {
  var type = goog.typeOf(obj);
  if(type == "object" || type == "array") {
    if(obj.clone) {
      return obj.clone()
    }
    var clone = type == "array" ? [] : {};
    for(var key in obj) {
      clone[key] = goog.cloneObject(obj[key])
    }
    return clone
  }
  return obj
};
Object.prototype.clone;
goog.bindNative_ = function(fn, selfObj, var_args) {
  return fn.call.apply(fn.bind, arguments)
};
goog.bindJs_ = function(fn, selfObj, var_args) {
  var context = selfObj || goog.global;
  if(arguments.length > 2) {
    var boundArgs = Array.prototype.slice.call(arguments, 2);
    return function() {
      var newArgs = Array.prototype.slice.call(arguments);
      Array.prototype.unshift.apply(newArgs, boundArgs);
      return fn.apply(context, newArgs)
    }
  }else {
    return function() {
      return fn.apply(context, arguments)
    }
  }
};
goog.bind = function(fn, selfObj, var_args) {
  if(Function.prototype.bind && Function.prototype.bind.toString().indexOf("native code") != -1) {
    goog.bind = goog.bindNative_
  }else {
    goog.bind = goog.bindJs_
  }
  return goog.bind.apply(null, arguments)
};
goog.partial = function(fn, var_args) {
  var args = Array.prototype.slice.call(arguments, 1);
  return function() {
    var newArgs = Array.prototype.slice.call(arguments);
    newArgs.unshift.apply(newArgs, args);
    return fn.apply(this, newArgs)
  }
};
goog.mixin = function(target, source) {
  for(var x in source) {
    target[x] = source[x]
  }
};
goog.now = Date.now || function() {
  return+new Date
};
goog.globalEval = function(script) {
  if(goog.global.execScript) {
    goog.global.execScript(script, "JavaScript")
  }else {
    if(goog.global.eval) {
      if(goog.evalWorksForGlobals_ == null) {
        goog.global.eval("var _et_ = 1;");
        if(typeof goog.global["_et_"] != "undefined") {
          delete goog.global["_et_"];
          goog.evalWorksForGlobals_ = true
        }else {
          goog.evalWorksForGlobals_ = false
        }
      }
      if(goog.evalWorksForGlobals_) {
        goog.global.eval(script)
      }else {
        var doc = goog.global.document;
        var scriptElt = doc.createElement("script");
        scriptElt.type = "text/javascript";
        scriptElt.defer = false;
        scriptElt.appendChild(doc.createTextNode(script));
        doc.body.appendChild(scriptElt);
        doc.body.removeChild(scriptElt)
      }
    }else {
      throw Error("goog.globalEval not available");
    }
  }
};
goog.cssNameMapping_;
goog.cssNameMappingStyle_;
goog.getCssName = function(className, opt_modifier) {
  var getMapping = function(cssName) {
    return goog.cssNameMapping_[cssName] || cssName
  };
  var renameByParts = function(cssName) {
    var parts = cssName.split("-");
    var mapped = [];
    for(var i = 0;i < parts.length;i++) {
      mapped.push(getMapping(parts[i]))
    }
    return mapped.join("-")
  };
  var rename;
  if(goog.cssNameMapping_) {
    rename = goog.cssNameMappingStyle_ == "BY_WHOLE" ? getMapping : renameByParts
  }else {
    rename = function(a) {
      return a
    }
  }
  if(opt_modifier) {
    return className + "-" + rename(opt_modifier)
  }else {
    return rename(className)
  }
};
goog.setCssNameMapping = function(mapping, style) {
  goog.cssNameMapping_ = mapping;
  goog.cssNameMappingStyle_ = style
};
goog.getMsg = function(str, opt_values) {
  var values = opt_values || {};
  for(var key in values) {
    var value = ("" + values[key]).replace(/\$/g, "$$$$");
    str = str.replace(new RegExp("\\{\\$" + key + "\\}", "gi"), value)
  }
  return str
};
goog.exportSymbol = function(publicPath, object, opt_objectToExportTo) {
  goog.exportPath_(publicPath, object, opt_objectToExportTo)
};
goog.exportProperty = function(object, publicName, symbol) {
  object[publicName] = symbol
};
goog.inherits = function(childCtor, parentCtor) {
  function tempCtor() {
  }
  tempCtor.prototype = parentCtor.prototype;
  childCtor.superClass_ = parentCtor.prototype;
  childCtor.prototype = new tempCtor;
  childCtor.prototype.constructor = childCtor
};
goog.base = function(me, opt_methodName, var_args) {
  var caller = arguments.callee.caller;
  if(caller.superClass_) {
    return caller.superClass_.constructor.apply(me, Array.prototype.slice.call(arguments, 1))
  }
  var args = Array.prototype.slice.call(arguments, 2);
  var foundCaller = false;
  for(var ctor = me.constructor;ctor;ctor = ctor.superClass_ && ctor.superClass_.constructor) {
    if(ctor.prototype[opt_methodName] === caller) {
      foundCaller = true
    }else {
      if(foundCaller) {
        return ctor.prototype[opt_methodName].apply(me, args)
      }
    }
  }
  if(me[opt_methodName] === caller) {
    return me.constructor.prototype[opt_methodName].apply(me, args)
  }else {
    throw Error("goog.base called from a method of one name " + "to a method of a different name");
  }
};
goog.scope = function(fn) {
  fn.call(goog.global)
};
goog.provide("goog.debug.Error");
goog.debug.Error = function(opt_msg) {
  this.stack = (new Error).stack || "";
  if(opt_msg) {
    this.message = String(opt_msg)
  }
};
goog.inherits(goog.debug.Error, Error);
goog.debug.Error.prototype.name = "CustomError";
goog.provide("goog.string");
goog.provide("goog.string.Unicode");
goog.string.Unicode = {NBSP:"\u00a0"};
goog.string.startsWith = function(str, prefix) {
  return str.lastIndexOf(prefix, 0) == 0
};
goog.string.endsWith = function(str, suffix) {
  var l = str.length - suffix.length;
  return l >= 0 && str.indexOf(suffix, l) == l
};
goog.string.caseInsensitiveStartsWith = function(str, prefix) {
  return goog.string.caseInsensitiveCompare(prefix, str.substr(0, prefix.length)) == 0
};
goog.string.caseInsensitiveEndsWith = function(str, suffix) {
  return goog.string.caseInsensitiveCompare(suffix, str.substr(str.length - suffix.length, suffix.length)) == 0
};
goog.string.subs = function(str, var_args) {
  for(var i = 1;i < arguments.length;i++) {
    var replacement = String(arguments[i]).replace(/\$/g, "$$$$");
    str = str.replace(/\%s/, replacement)
  }
  return str
};
goog.string.collapseWhitespace = function(str) {
  return str.replace(/[\s\xa0]+/g, " ").replace(/^\s+|\s+$/g, "")
};
goog.string.isEmpty = function(str) {
  return/^[\s\xa0]*$/.test(str)
};
goog.string.isEmptySafe = function(str) {
  return goog.string.isEmpty(goog.string.makeSafe(str))
};
goog.string.isBreakingWhitespace = function(str) {
  return!/[^\t\n\r ]/.test(str)
};
goog.string.isAlpha = function(str) {
  return!/[^a-zA-Z]/.test(str)
};
goog.string.isNumeric = function(str) {
  return!/[^0-9]/.test(str)
};
goog.string.isAlphaNumeric = function(str) {
  return!/[^a-zA-Z0-9]/.test(str)
};
goog.string.isSpace = function(ch) {
  return ch == " "
};
goog.string.isUnicodeChar = function(ch) {
  return ch.length == 1 && ch >= " " && ch <= "~" || ch >= "\u0080" && ch <= "\ufffd"
};
goog.string.stripNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)+/g, " ")
};
goog.string.canonicalizeNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)/g, "\n")
};
goog.string.normalizeWhitespace = function(str) {
  return str.replace(/\xa0|\s/g, " ")
};
goog.string.normalizeSpaces = function(str) {
  return str.replace(/\xa0|[ \t]+/g, " ")
};
goog.string.trim = function(str) {
  return str.replace(/^[\s\xa0]+|[\s\xa0]+$/g, "")
};
goog.string.trimLeft = function(str) {
  return str.replace(/^[\s\xa0]+/, "")
};
goog.string.trimRight = function(str) {
  return str.replace(/[\s\xa0]+$/, "")
};
goog.string.caseInsensitiveCompare = function(str1, str2) {
  var test1 = String(str1).toLowerCase();
  var test2 = String(str2).toLowerCase();
  if(test1 < test2) {
    return-1
  }else {
    if(test1 == test2) {
      return 0
    }else {
      return 1
    }
  }
};
goog.string.numerateCompareRegExp_ = /(\.\d+)|(\d+)|(\D+)/g;
goog.string.numerateCompare = function(str1, str2) {
  if(str1 == str2) {
    return 0
  }
  if(!str1) {
    return-1
  }
  if(!str2) {
    return 1
  }
  var tokens1 = str1.toLowerCase().match(goog.string.numerateCompareRegExp_);
  var tokens2 = str2.toLowerCase().match(goog.string.numerateCompareRegExp_);
  var count = Math.min(tokens1.length, tokens2.length);
  for(var i = 0;i < count;i++) {
    var a = tokens1[i];
    var b = tokens2[i];
    if(a != b) {
      var num1 = parseInt(a, 10);
      if(!isNaN(num1)) {
        var num2 = parseInt(b, 10);
        if(!isNaN(num2) && num1 - num2) {
          return num1 - num2
        }
      }
      return a < b ? -1 : 1
    }
  }
  if(tokens1.length != tokens2.length) {
    return tokens1.length - tokens2.length
  }
  return str1 < str2 ? -1 : 1
};
goog.string.encodeUriRegExp_ = /^[a-zA-Z0-9\-_.!~*'()]*$/;
goog.string.urlEncode = function(str) {
  str = String(str);
  if(!goog.string.encodeUriRegExp_.test(str)) {
    return encodeURIComponent(str)
  }
  return str
};
goog.string.urlDecode = function(str) {
  return decodeURIComponent(str.replace(/\+/g, " "))
};
goog.string.newLineToBr = function(str, opt_xml) {
  return str.replace(/(\r\n|\r|\n)/g, opt_xml ? "<br />" : "<br>")
};
goog.string.htmlEscape = function(str, opt_isLikelyToContainHtmlChars) {
  if(opt_isLikelyToContainHtmlChars) {
    return str.replace(goog.string.amperRe_, "&amp;").replace(goog.string.ltRe_, "&lt;").replace(goog.string.gtRe_, "&gt;").replace(goog.string.quotRe_, "&quot;")
  }else {
    if(!goog.string.allRe_.test(str)) {
      return str
    }
    if(str.indexOf("&") != -1) {
      str = str.replace(goog.string.amperRe_, "&amp;")
    }
    if(str.indexOf("<") != -1) {
      str = str.replace(goog.string.ltRe_, "&lt;")
    }
    if(str.indexOf(">") != -1) {
      str = str.replace(goog.string.gtRe_, "&gt;")
    }
    if(str.indexOf('"') != -1) {
      str = str.replace(goog.string.quotRe_, "&quot;")
    }
    return str
  }
};
goog.string.amperRe_ = /&/g;
goog.string.ltRe_ = /</g;
goog.string.gtRe_ = />/g;
goog.string.quotRe_ = /\"/g;
goog.string.allRe_ = /[&<>\"]/;
goog.string.unescapeEntities = function(str) {
  if(goog.string.contains(str, "&")) {
    if("document" in goog.global && !goog.string.contains(str, "<")) {
      return goog.string.unescapeEntitiesUsingDom_(str)
    }else {
      return goog.string.unescapePureXmlEntities_(str)
    }
  }
  return str
};
goog.string.unescapeEntitiesUsingDom_ = function(str) {
  var el = goog.global["document"]["createElement"]("div");
  el["innerHTML"] = "<pre>x" + str + "</pre>";
  if(el["firstChild"][goog.string.NORMALIZE_FN_]) {
    el["firstChild"][goog.string.NORMALIZE_FN_]()
  }
  str = el["firstChild"]["firstChild"]["nodeValue"].slice(1);
  el["innerHTML"] = "";
  return goog.string.canonicalizeNewlines(str)
};
goog.string.unescapePureXmlEntities_ = function(str) {
  return str.replace(/&([^;]+);/g, function(s, entity) {
    switch(entity) {
      case "amp":
        return"&";
      case "lt":
        return"<";
      case "gt":
        return">";
      case "quot":
        return'"';
      default:
        if(entity.charAt(0) == "#") {
          var n = Number("0" + entity.substr(1));
          if(!isNaN(n)) {
            return String.fromCharCode(n)
          }
        }
        return s
    }
  })
};
goog.string.NORMALIZE_FN_ = "normalize";
goog.string.whitespaceEscape = function(str, opt_xml) {
  return goog.string.newLineToBr(str.replace(/  /g, " &#160;"), opt_xml)
};
goog.string.stripQuotes = function(str, quoteChars) {
  var length = quoteChars.length;
  for(var i = 0;i < length;i++) {
    var quoteChar = length == 1 ? quoteChars : quoteChars.charAt(i);
    if(str.charAt(0) == quoteChar && str.charAt(str.length - 1) == quoteChar) {
      return str.substring(1, str.length - 1)
    }
  }
  return str
};
goog.string.truncate = function(str, chars, opt_protectEscapedCharacters) {
  if(opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str)
  }
  if(str.length > chars) {
    str = str.substring(0, chars - 3) + "..."
  }
  if(opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str)
  }
  return str
};
goog.string.truncateMiddle = function(str, chars, opt_protectEscapedCharacters, opt_trailingChars) {
  if(opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str)
  }
  if(opt_trailingChars) {
    if(opt_trailingChars > chars) {
      opt_trailingChars = chars
    }
    var endPoint = str.length - opt_trailingChars;
    var startPoint = chars - opt_trailingChars;
    str = str.substring(0, startPoint) + "..." + str.substring(endPoint)
  }else {
    if(str.length > chars) {
      var half = Math.floor(chars / 2);
      var endPos = str.length - half;
      half += chars % 2;
      str = str.substring(0, half) + "..." + str.substring(endPos)
    }
  }
  if(opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str)
  }
  return str
};
goog.string.specialEscapeChars_ = {"\x00":"\\0", "\u0008":"\\b", "\u000c":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t", "\x0B":"\\x0B", '"':'\\"', "\\":"\\\\"};
goog.string.jsEscapeCache_ = {"'":"\\'"};
goog.string.quote = function(s) {
  s = String(s);
  if(s.quote) {
    return s.quote()
  }else {
    var sb = ['"'];
    for(var i = 0;i < s.length;i++) {
      var ch = s.charAt(i);
      var cc = ch.charCodeAt(0);
      sb[i + 1] = goog.string.specialEscapeChars_[ch] || (cc > 31 && cc < 127 ? ch : goog.string.escapeChar(ch))
    }
    sb.push('"');
    return sb.join("")
  }
};
goog.string.escapeString = function(str) {
  var sb = [];
  for(var i = 0;i < str.length;i++) {
    sb[i] = goog.string.escapeChar(str.charAt(i))
  }
  return sb.join("")
};
goog.string.escapeChar = function(c) {
  if(c in goog.string.jsEscapeCache_) {
    return goog.string.jsEscapeCache_[c]
  }
  if(c in goog.string.specialEscapeChars_) {
    return goog.string.jsEscapeCache_[c] = goog.string.specialEscapeChars_[c]
  }
  var rv = c;
  var cc = c.charCodeAt(0);
  if(cc > 31 && cc < 127) {
    rv = c
  }else {
    if(cc < 256) {
      rv = "\\x";
      if(cc < 16 || cc > 256) {
        rv += "0"
      }
    }else {
      rv = "\\u";
      if(cc < 4096) {
        rv += "0"
      }
    }
    rv += cc.toString(16).toUpperCase()
  }
  return goog.string.jsEscapeCache_[c] = rv
};
goog.string.toMap = function(s) {
  var rv = {};
  for(var i = 0;i < s.length;i++) {
    rv[s.charAt(i)] = true
  }
  return rv
};
goog.string.contains = function(s, ss) {
  return s.indexOf(ss) != -1
};
goog.string.removeAt = function(s, index, stringLength) {
  var resultStr = s;
  if(index >= 0 && index < s.length && stringLength > 0) {
    resultStr = s.substr(0, index) + s.substr(index + stringLength, s.length - index - stringLength)
  }
  return resultStr
};
goog.string.remove = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "");
  return s.replace(re, "")
};
goog.string.removeAll = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "g");
  return s.replace(re, "")
};
goog.string.regExpEscape = function(s) {
  return String(s).replace(/([-()\[\]{}+?*.$\^|,:#<!\\])/g, "\\$1").replace(/\x08/g, "\\x08")
};
goog.string.repeat = function(string, length) {
  return(new Array(length + 1)).join(string)
};
goog.string.padNumber = function(num, length, opt_precision) {
  var s = goog.isDef(opt_precision) ? num.toFixed(opt_precision) : String(num);
  var index = s.indexOf(".");
  if(index == -1) {
    index = s.length
  }
  return goog.string.repeat("0", Math.max(0, length - index)) + s
};
goog.string.makeSafe = function(obj) {
  return obj == null ? "" : String(obj)
};
goog.string.buildString = function(var_args) {
  return Array.prototype.join.call(arguments, "")
};
goog.string.getRandomString = function() {
  var x = 2147483648;
  return Math.floor(Math.random() * x).toString(36) + Math.abs(Math.floor(Math.random() * x) ^ goog.now()).toString(36)
};
goog.string.compareVersions = function(version1, version2) {
  var order = 0;
  var v1Subs = goog.string.trim(String(version1)).split(".");
  var v2Subs = goog.string.trim(String(version2)).split(".");
  var subCount = Math.max(v1Subs.length, v2Subs.length);
  for(var subIdx = 0;order == 0 && subIdx < subCount;subIdx++) {
    var v1Sub = v1Subs[subIdx] || "";
    var v2Sub = v2Subs[subIdx] || "";
    var v1CompParser = new RegExp("(\\d*)(\\D*)", "g");
    var v2CompParser = new RegExp("(\\d*)(\\D*)", "g");
    do {
      var v1Comp = v1CompParser.exec(v1Sub) || ["", "", ""];
      var v2Comp = v2CompParser.exec(v2Sub) || ["", "", ""];
      if(v1Comp[0].length == 0 && v2Comp[0].length == 0) {
        break
      }
      var v1CompNum = v1Comp[1].length == 0 ? 0 : parseInt(v1Comp[1], 10);
      var v2CompNum = v2Comp[1].length == 0 ? 0 : parseInt(v2Comp[1], 10);
      order = goog.string.compareElements_(v1CompNum, v2CompNum) || goog.string.compareElements_(v1Comp[2].length == 0, v2Comp[2].length == 0) || goog.string.compareElements_(v1Comp[2], v2Comp[2])
    }while(order == 0)
  }
  return order
};
goog.string.compareElements_ = function(left, right) {
  if(left < right) {
    return-1
  }else {
    if(left > right) {
      return 1
    }
  }
  return 0
};
goog.string.HASHCODE_MAX_ = 4294967296;
goog.string.hashCode = function(str) {
  var result = 0;
  for(var i = 0;i < str.length;++i) {
    result = 31 * result + str.charCodeAt(i);
    result %= goog.string.HASHCODE_MAX_
  }
  return result
};
goog.string.uniqueStringCounter_ = Math.random() * 2147483648 | 0;
goog.string.createUniqueString = function() {
  return"goog_" + goog.string.uniqueStringCounter_++
};
goog.string.toNumber = function(str) {
  var num = Number(str);
  if(num == 0 && goog.string.isEmpty(str)) {
    return NaN
  }
  return num
};
goog.string.toCamelCaseCache_ = {};
goog.string.toCamelCase = function(str) {
  return goog.string.toCamelCaseCache_[str] || (goog.string.toCamelCaseCache_[str] = String(str).replace(/\-([a-z])/g, function(all, match) {
    return match.toUpperCase()
  }))
};
goog.string.toSelectorCaseCache_ = {};
goog.string.toSelectorCase = function(str) {
  return goog.string.toSelectorCaseCache_[str] || (goog.string.toSelectorCaseCache_[str] = String(str).replace(/([A-Z])/g, "-$1").toLowerCase())
};
goog.provide("goog.asserts");
goog.provide("goog.asserts.AssertionError");
goog.require("goog.debug.Error");
goog.require("goog.string");
goog.asserts.ENABLE_ASSERTS = goog.DEBUG;
goog.asserts.AssertionError = function(messagePattern, messageArgs) {
  messageArgs.unshift(messagePattern);
  goog.debug.Error.call(this, goog.string.subs.apply(null, messageArgs));
  messageArgs.shift();
  this.messagePattern = messagePattern
};
goog.inherits(goog.asserts.AssertionError, goog.debug.Error);
goog.asserts.AssertionError.prototype.name = "AssertionError";
goog.asserts.doAssertFailure_ = function(defaultMessage, defaultArgs, givenMessage, givenArgs) {
  var message = "Assertion failed";
  if(givenMessage) {
    message += ": " + givenMessage;
    var args = givenArgs
  }else {
    if(defaultMessage) {
      message += ": " + defaultMessage;
      args = defaultArgs
    }
  }
  throw new goog.asserts.AssertionError("" + message, args || []);
};
goog.asserts.assert = function(condition, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !condition) {
    goog.asserts.doAssertFailure_("", null, opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return condition
};
goog.asserts.fail = function(opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS) {
    throw new goog.asserts.AssertionError("Failure" + (opt_message ? ": " + opt_message : ""), Array.prototype.slice.call(arguments, 1));
  }
};
goog.asserts.assertNumber = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isNumber(value)) {
    goog.asserts.doAssertFailure_("Expected number but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return value
};
goog.asserts.assertString = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isString(value)) {
    goog.asserts.doAssertFailure_("Expected string but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return value
};
goog.asserts.assertFunction = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isFunction(value)) {
    goog.asserts.doAssertFailure_("Expected function but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return value
};
goog.asserts.assertObject = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isObject(value)) {
    goog.asserts.doAssertFailure_("Expected object but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return value
};
goog.asserts.assertArray = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isArray(value)) {
    goog.asserts.doAssertFailure_("Expected array but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return value
};
goog.asserts.assertBoolean = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isBoolean(value)) {
    goog.asserts.doAssertFailure_("Expected boolean but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return value
};
goog.asserts.assertInstanceof = function(value, type, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !(value instanceof type)) {
    goog.asserts.doAssertFailure_("instanceof check failed.", null, opt_message, Array.prototype.slice.call(arguments, 3))
  }
};
goog.provide("goog.array");
goog.provide("goog.array.ArrayLike");
goog.require("goog.asserts");
goog.NATIVE_ARRAY_PROTOTYPES = true;
goog.array.ArrayLike;
goog.array.peek = function(array) {
  return array[array.length - 1]
};
goog.array.ARRAY_PROTOTYPE_ = Array.prototype;
goog.array.indexOf = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.indexOf ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.indexOf.call(arr, obj, opt_fromIndex)
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? 0 : opt_fromIndex < 0 ? Math.max(0, arr.length + opt_fromIndex) : opt_fromIndex;
  if(goog.isString(arr)) {
    if(!goog.isString(obj) || obj.length != 1) {
      return-1
    }
    return arr.indexOf(obj, fromIndex)
  }
  for(var i = fromIndex;i < arr.length;i++) {
    if(i in arr && arr[i] === obj) {
      return i
    }
  }
  return-1
};
goog.array.lastIndexOf = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.lastIndexOf ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  return goog.array.ARRAY_PROTOTYPE_.lastIndexOf.call(arr, obj, fromIndex)
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  if(fromIndex < 0) {
    fromIndex = Math.max(0, arr.length + fromIndex)
  }
  if(goog.isString(arr)) {
    if(!goog.isString(obj) || obj.length != 1) {
      return-1
    }
    return arr.lastIndexOf(obj, fromIndex)
  }
  for(var i = fromIndex;i >= 0;i--) {
    if(i in arr && arr[i] === obj) {
      return i
    }
  }
  return-1
};
goog.array.forEach = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.forEach ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  goog.array.ARRAY_PROTOTYPE_.forEach.call(arr, f, opt_obj)
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2) {
      f.call(opt_obj, arr2[i], i, arr)
    }
  }
};
goog.array.forEachRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = l - 1;i >= 0;--i) {
    if(i in arr2) {
      f.call(opt_obj, arr2[i], i, arr)
    }
  }
};
goog.array.filter = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.filter ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.filter.call(arr, f, opt_obj)
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = [];
  var resLength = 0;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2) {
      var val = arr2[i];
      if(f.call(opt_obj, val, i, arr)) {
        res[resLength++] = val
      }
    }
  }
  return res
};
goog.array.map = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.map ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.map.call(arr, f, opt_obj)
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = new Array(l);
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2) {
      res[i] = f.call(opt_obj, arr2[i], i, arr)
    }
  }
  return res
};
goog.array.reduce = function(arr, f, val, opt_obj) {
  if(arr.reduce) {
    if(opt_obj) {
      return arr.reduce(goog.bind(f, opt_obj), val)
    }else {
      return arr.reduce(f, val)
    }
  }
  var rval = val;
  goog.array.forEach(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr)
  });
  return rval
};
goog.array.reduceRight = function(arr, f, val, opt_obj) {
  if(arr.reduceRight) {
    if(opt_obj) {
      return arr.reduceRight(goog.bind(f, opt_obj), val)
    }else {
      return arr.reduceRight(f, val)
    }
  }
  var rval = val;
  goog.array.forEachRight(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr)
  });
  return rval
};
goog.array.some = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.some ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.some.call(arr, f, opt_obj)
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return true
    }
  }
  return false
};
goog.array.every = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.every ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.every.call(arr, f, opt_obj)
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2 && !f.call(opt_obj, arr2[i], i, arr)) {
      return false
    }
  }
  return true
};
goog.array.find = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i]
};
goog.array.findIndex = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i
    }
  }
  return-1
};
goog.array.findRight = function(arr, f, opt_obj) {
  var i = goog.array.findIndexRight(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i]
};
goog.array.findIndexRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = l - 1;i >= 0;i--) {
    if(i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i
    }
  }
  return-1
};
goog.array.contains = function(arr, obj) {
  return goog.array.indexOf(arr, obj) >= 0
};
goog.array.isEmpty = function(arr) {
  return arr.length == 0
};
goog.array.clear = function(arr) {
  if(!goog.isArray(arr)) {
    for(var i = arr.length - 1;i >= 0;i--) {
      delete arr[i]
    }
  }
  arr.length = 0
};
goog.array.insert = function(arr, obj) {
  if(!goog.array.contains(arr, obj)) {
    arr.push(obj)
  }
};
goog.array.insertAt = function(arr, obj, opt_i) {
  goog.array.splice(arr, opt_i, 0, obj)
};
goog.array.insertArrayAt = function(arr, elementsToAdd, opt_i) {
  goog.partial(goog.array.splice, arr, opt_i, 0).apply(null, elementsToAdd)
};
goog.array.insertBefore = function(arr, obj, opt_obj2) {
  var i;
  if(arguments.length == 2 || (i = goog.array.indexOf(arr, opt_obj2)) < 0) {
    arr.push(obj)
  }else {
    goog.array.insertAt(arr, obj, i)
  }
};
goog.array.remove = function(arr, obj) {
  var i = goog.array.indexOf(arr, obj);
  var rv;
  if(rv = i >= 0) {
    goog.array.removeAt(arr, i)
  }
  return rv
};
goog.array.removeAt = function(arr, i) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.splice.call(arr, i, 1).length == 1
};
goog.array.removeIf = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  if(i >= 0) {
    goog.array.removeAt(arr, i);
    return true
  }
  return false
};
goog.array.concat = function(var_args) {
  return goog.array.ARRAY_PROTOTYPE_.concat.apply(goog.array.ARRAY_PROTOTYPE_, arguments)
};
goog.array.clone = function(arr) {
  if(goog.isArray(arr)) {
    return goog.array.concat(arr)
  }else {
    var rv = [];
    for(var i = 0, len = arr.length;i < len;i++) {
      rv[i] = arr[i]
    }
    return rv
  }
};
goog.array.toArray = function(object) {
  if(goog.isArray(object)) {
    return goog.array.concat(object)
  }
  return goog.array.clone(object)
};
goog.array.extend = function(arr1, var_args) {
  for(var i = 1;i < arguments.length;i++) {
    var arr2 = arguments[i];
    var isArrayLike;
    if(goog.isArray(arr2) || (isArrayLike = goog.isArrayLike(arr2)) && arr2.hasOwnProperty("callee")) {
      arr1.push.apply(arr1, arr2)
    }else {
      if(isArrayLike) {
        var len1 = arr1.length;
        var len2 = arr2.length;
        for(var j = 0;j < len2;j++) {
          arr1[len1 + j] = arr2[j]
        }
      }else {
        arr1.push(arr2)
      }
    }
  }
};
goog.array.splice = function(arr, index, howMany, var_args) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.splice.apply(arr, goog.array.slice(arguments, 1))
};
goog.array.slice = function(arr, start, opt_end) {
  goog.asserts.assert(arr.length != null);
  if(arguments.length <= 2) {
    return goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start)
  }else {
    return goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start, opt_end)
  }
};
goog.array.removeDuplicates = function(arr, opt_rv) {
  var returnArray = opt_rv || arr;
  var seen = {}, cursorInsert = 0, cursorRead = 0;
  while(cursorRead < arr.length) {
    var current = arr[cursorRead++];
    var key = goog.isObject(current) ? "o" + goog.getUid(current) : (typeof current).charAt(0) + current;
    if(!Object.prototype.hasOwnProperty.call(seen, key)) {
      seen[key] = true;
      returnArray[cursorInsert++] = current
    }
  }
  returnArray.length = cursorInsert
};
goog.array.binarySearch = function(arr, target, opt_compareFn) {
  return goog.array.binarySearch_(arr, opt_compareFn || goog.array.defaultCompare, false, target)
};
goog.array.binarySelect = function(arr, evaluator, opt_obj) {
  return goog.array.binarySearch_(arr, evaluator, true, undefined, opt_obj)
};
goog.array.binarySearch_ = function(arr, compareFn, isEvaluator, opt_target, opt_selfObj) {
  var left = 0;
  var right = arr.length;
  var found;
  while(left < right) {
    var middle = left + right >> 1;
    var compareResult;
    if(isEvaluator) {
      compareResult = compareFn.call(opt_selfObj, arr[middle], middle, arr)
    }else {
      compareResult = compareFn(opt_target, arr[middle])
    }
    if(compareResult > 0) {
      left = middle + 1
    }else {
      right = middle;
      found = !compareResult
    }
  }
  return found ? left : ~left
};
goog.array.sort = function(arr, opt_compareFn) {
  goog.asserts.assert(arr.length != null);
  goog.array.ARRAY_PROTOTYPE_.sort.call(arr, opt_compareFn || goog.array.defaultCompare)
};
goog.array.stableSort = function(arr, opt_compareFn) {
  for(var i = 0;i < arr.length;i++) {
    arr[i] = {index:i, value:arr[i]}
  }
  var valueCompareFn = opt_compareFn || goog.array.defaultCompare;
  function stableCompareFn(obj1, obj2) {
    return valueCompareFn(obj1.value, obj2.value) || obj1.index - obj2.index
  }
  goog.array.sort(arr, stableCompareFn);
  for(var i = 0;i < arr.length;i++) {
    arr[i] = arr[i].value
  }
};
goog.array.sortObjectsByKey = function(arr, key, opt_compareFn) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  goog.array.sort(arr, function(a, b) {
    return compare(a[key], b[key])
  })
};
goog.array.isSorted = function(arr, opt_compareFn, opt_strict) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  for(var i = 1;i < arr.length;i++) {
    var compareResult = compare(arr[i - 1], arr[i]);
    if(compareResult > 0 || compareResult == 0 && opt_strict) {
      return false
    }
  }
  return true
};
goog.array.equals = function(arr1, arr2, opt_equalsFn) {
  if(!goog.isArrayLike(arr1) || !goog.isArrayLike(arr2) || arr1.length != arr2.length) {
    return false
  }
  var l = arr1.length;
  var equalsFn = opt_equalsFn || goog.array.defaultCompareEquality;
  for(var i = 0;i < l;i++) {
    if(!equalsFn(arr1[i], arr2[i])) {
      return false
    }
  }
  return true
};
goog.array.compare = function(arr1, arr2, opt_equalsFn) {
  return goog.array.equals(arr1, arr2, opt_equalsFn)
};
goog.array.defaultCompare = function(a, b) {
  return a > b ? 1 : a < b ? -1 : 0
};
goog.array.defaultCompareEquality = function(a, b) {
  return a === b
};
goog.array.binaryInsert = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  if(index < 0) {
    goog.array.insertAt(array, value, -(index + 1));
    return true
  }
  return false
};
goog.array.binaryRemove = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  return index >= 0 ? goog.array.removeAt(array, index) : false
};
goog.array.bucket = function(array, sorter) {
  var buckets = {};
  for(var i = 0;i < array.length;i++) {
    var value = array[i];
    var key = sorter(value, i, array);
    if(goog.isDef(key)) {
      var bucket = buckets[key] || (buckets[key] = []);
      bucket.push(value)
    }
  }
  return buckets
};
goog.array.repeat = function(value, n) {
  var array = [];
  for(var i = 0;i < n;i++) {
    array[i] = value
  }
  return array
};
goog.array.flatten = function(var_args) {
  var result = [];
  for(var i = 0;i < arguments.length;i++) {
    var element = arguments[i];
    if(goog.isArray(element)) {
      result.push.apply(result, goog.array.flatten.apply(null, element))
    }else {
      result.push(element)
    }
  }
  return result
};
goog.array.rotate = function(array, n) {
  goog.asserts.assert(array.length != null);
  if(array.length) {
    n %= array.length;
    if(n > 0) {
      goog.array.ARRAY_PROTOTYPE_.unshift.apply(array, array.splice(-n, n))
    }else {
      if(n < 0) {
        goog.array.ARRAY_PROTOTYPE_.push.apply(array, array.splice(0, -n))
      }
    }
  }
  return array
};
goog.array.zip = function(var_args) {
  if(!arguments.length) {
    return[]
  }
  var result = [];
  for(var i = 0;true;i++) {
    var value = [];
    for(var j = 0;j < arguments.length;j++) {
      var arr = arguments[j];
      if(i >= arr.length) {
        return result
      }
      value.push(arr[i])
    }
    result.push(value)
  }
};
goog.array.shuffle = function(arr, opt_randFn) {
  var randFn = opt_randFn || Math.random;
  for(var i = arr.length - 1;i > 0;i--) {
    var j = Math.floor(randFn() * (i + 1));
    var tmp = arr[i];
    arr[i] = arr[j];
    arr[j] = tmp
  }
};
goog.provide("goog.object");
goog.object.forEach = function(obj, f, opt_obj) {
  for(var key in obj) {
    f.call(opt_obj, obj[key], key, obj)
  }
};
goog.object.filter = function(obj, f, opt_obj) {
  var res = {};
  for(var key in obj) {
    if(f.call(opt_obj, obj[key], key, obj)) {
      res[key] = obj[key]
    }
  }
  return res
};
goog.object.map = function(obj, f, opt_obj) {
  var res = {};
  for(var key in obj) {
    res[key] = f.call(opt_obj, obj[key], key, obj)
  }
  return res
};
goog.object.some = function(obj, f, opt_obj) {
  for(var key in obj) {
    if(f.call(opt_obj, obj[key], key, obj)) {
      return true
    }
  }
  return false
};
goog.object.every = function(obj, f, opt_obj) {
  for(var key in obj) {
    if(!f.call(opt_obj, obj[key], key, obj)) {
      return false
    }
  }
  return true
};
goog.object.getCount = function(obj) {
  var rv = 0;
  for(var key in obj) {
    rv++
  }
  return rv
};
goog.object.getAnyKey = function(obj) {
  for(var key in obj) {
    return key
  }
};
goog.object.getAnyValue = function(obj) {
  for(var key in obj) {
    return obj[key]
  }
};
goog.object.contains = function(obj, val) {
  return goog.object.containsValue(obj, val)
};
goog.object.getValues = function(obj) {
  var res = [];
  var i = 0;
  for(var key in obj) {
    res[i++] = obj[key]
  }
  return res
};
goog.object.getKeys = function(obj) {
  var res = [];
  var i = 0;
  for(var key in obj) {
    res[i++] = key
  }
  return res
};
goog.object.getValueByKeys = function(obj, var_args) {
  var isArrayLike = goog.isArrayLike(var_args);
  var keys = isArrayLike ? var_args : arguments;
  for(var i = isArrayLike ? 0 : 1;i < keys.length;i++) {
    obj = obj[keys[i]];
    if(!goog.isDef(obj)) {
      break
    }
  }
  return obj
};
goog.object.containsKey = function(obj, key) {
  return key in obj
};
goog.object.containsValue = function(obj, val) {
  for(var key in obj) {
    if(obj[key] == val) {
      return true
    }
  }
  return false
};
goog.object.findKey = function(obj, f, opt_this) {
  for(var key in obj) {
    if(f.call(opt_this, obj[key], key, obj)) {
      return key
    }
  }
  return undefined
};
goog.object.findValue = function(obj, f, opt_this) {
  var key = goog.object.findKey(obj, f, opt_this);
  return key && obj[key]
};
goog.object.isEmpty = function(obj) {
  for(var key in obj) {
    return false
  }
  return true
};
goog.object.clear = function(obj) {
  for(var i in obj) {
    delete obj[i]
  }
};
goog.object.remove = function(obj, key) {
  var rv;
  if(rv = key in obj) {
    delete obj[key]
  }
  return rv
};
goog.object.add = function(obj, key, val) {
  if(key in obj) {
    throw Error('The object already contains the key "' + key + '"');
  }
  goog.object.set(obj, key, val)
};
goog.object.get = function(obj, key, opt_val) {
  if(key in obj) {
    return obj[key]
  }
  return opt_val
};
goog.object.set = function(obj, key, value) {
  obj[key] = value
};
goog.object.setIfUndefined = function(obj, key, value) {
  return key in obj ? obj[key] : obj[key] = value
};
goog.object.clone = function(obj) {
  var res = {};
  for(var key in obj) {
    res[key] = obj[key]
  }
  return res
};
goog.object.unsafeClone = function(obj) {
  var type = goog.typeOf(obj);
  if(type == "object" || type == "array") {
    if(obj.clone) {
      return obj.clone()
    }
    var clone = type == "array" ? [] : {};
    for(var key in obj) {
      clone[key] = goog.object.unsafeClone(obj[key])
    }
    return clone
  }
  return obj
};
goog.object.transpose = function(obj) {
  var transposed = {};
  for(var key in obj) {
    transposed[obj[key]] = key
  }
  return transposed
};
goog.object.PROTOTYPE_FIELDS_ = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf"];
goog.object.extend = function(target, var_args) {
  var key, source;
  for(var i = 1;i < arguments.length;i++) {
    source = arguments[i];
    for(key in source) {
      target[key] = source[key]
    }
    for(var j = 0;j < goog.object.PROTOTYPE_FIELDS_.length;j++) {
      key = goog.object.PROTOTYPE_FIELDS_[j];
      if(Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key]
      }
    }
  }
};
goog.object.create = function(var_args) {
  var argLength = arguments.length;
  if(argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.create.apply(null, arguments[0])
  }
  if(argLength % 2) {
    throw Error("Uneven number of arguments");
  }
  var rv = {};
  for(var i = 0;i < argLength;i += 2) {
    rv[arguments[i]] = arguments[i + 1]
  }
  return rv
};
goog.object.createSet = function(var_args) {
  var argLength = arguments.length;
  if(argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.createSet.apply(null, arguments[0])
  }
  var rv = {};
  for(var i = 0;i < argLength;i++) {
    rv[arguments[i]] = true
  }
  return rv
};
goog.provide("goog.string.format");
goog.require("goog.string");
goog.string.format = function(formatString, var_args) {
  var args = Array.prototype.slice.call(arguments);
  var template = args.shift();
  if(typeof template == "undefined") {
    throw Error("[goog.string.format] Template required");
  }
  var formatRe = /%([0\-\ \+]*)(\d+)?(\.(\d+))?([%sfdiu])/g;
  function replacerDemuxer(match, flags, width, dotp, precision, type, offset, wholeString) {
    if(type == "%") {
      return"%"
    }
    var value = args.shift();
    if(typeof value == "undefined") {
      throw Error("[goog.string.format] Not enough arguments");
    }
    arguments[0] = value;
    return goog.string.format.demuxes_[type].apply(null, arguments)
  }
  return template.replace(formatRe, replacerDemuxer)
};
goog.string.format.demuxes_ = {};
goog.string.format.demuxes_["s"] = function(value, flags, width, dotp, precision, type, offset, wholeString) {
  var replacement = value;
  if(isNaN(width) || replacement.length >= width) {
    return replacement
  }
  if(flags.indexOf("-", 0) > -1) {
    replacement = replacement + goog.string.repeat(" ", width - replacement.length)
  }else {
    replacement = goog.string.repeat(" ", width - replacement.length) + replacement
  }
  return replacement
};
goog.string.format.demuxes_["f"] = function(value, flags, width, dotp, precision, type, offset, wholeString) {
  var replacement = value.toString();
  if(!(isNaN(precision) || precision == "")) {
    replacement = value.toFixed(precision)
  }
  var sign;
  if(value < 0) {
    sign = "-"
  }else {
    if(flags.indexOf("+") >= 0) {
      sign = "+"
    }else {
      if(flags.indexOf(" ") >= 0) {
        sign = " "
      }else {
        sign = ""
      }
    }
  }
  if(value >= 0) {
    replacement = sign + replacement
  }
  if(isNaN(width) || replacement.length >= width) {
    return replacement
  }
  replacement = isNaN(precision) ? Math.abs(value).toString() : Math.abs(value).toFixed(precision);
  var padCount = width - replacement.length - sign.length;
  if(flags.indexOf("-", 0) >= 0) {
    replacement = sign + replacement + goog.string.repeat(" ", padCount)
  }else {
    var paddingChar = flags.indexOf("0", 0) >= 0 ? "0" : " ";
    replacement = sign + goog.string.repeat(paddingChar, padCount) + replacement
  }
  return replacement
};
goog.string.format.demuxes_["d"] = function(value, flags, width, dotp, precision, type, offset, wholeString) {
  value = parseInt(value, 10);
  precision = 0;
  return goog.string.format.demuxes_["f"](value, flags, width, dotp, precision, type, offset, wholeString)
};
goog.string.format.demuxes_["i"] = goog.string.format.demuxes_["d"];
goog.string.format.demuxes_["u"] = goog.string.format.demuxes_["d"];
goog.provide("goog.userAgent.jscript");
goog.require("goog.string");
goog.userAgent.jscript.ASSUME_NO_JSCRIPT = false;
goog.userAgent.jscript.init_ = function() {
  var hasScriptEngine = "ScriptEngine" in goog.global;
  goog.userAgent.jscript.DETECTED_HAS_JSCRIPT_ = hasScriptEngine && goog.global["ScriptEngine"]() == "JScript";
  goog.userAgent.jscript.DETECTED_VERSION_ = goog.userAgent.jscript.DETECTED_HAS_JSCRIPT_ ? goog.global["ScriptEngineMajorVersion"]() + "." + goog.global["ScriptEngineMinorVersion"]() + "." + goog.global["ScriptEngineBuildVersion"]() : "0"
};
if(!goog.userAgent.jscript.ASSUME_NO_JSCRIPT) {
  goog.userAgent.jscript.init_()
}
goog.userAgent.jscript.HAS_JSCRIPT = goog.userAgent.jscript.ASSUME_NO_JSCRIPT ? false : goog.userAgent.jscript.DETECTED_HAS_JSCRIPT_;
goog.userAgent.jscript.VERSION = goog.userAgent.jscript.ASSUME_NO_JSCRIPT ? "0" : goog.userAgent.jscript.DETECTED_VERSION_;
goog.userAgent.jscript.isVersion = function(version) {
  return goog.string.compareVersions(goog.userAgent.jscript.VERSION, version) >= 0
};
goog.provide("goog.string.StringBuffer");
goog.require("goog.userAgent.jscript");
goog.string.StringBuffer = function(opt_a1, var_args) {
  this.buffer_ = goog.userAgent.jscript.HAS_JSCRIPT ? [] : "";
  if(opt_a1 != null) {
    this.append.apply(this, arguments)
  }
};
goog.string.StringBuffer.prototype.set = function(s) {
  this.clear();
  this.append(s)
};
if(goog.userAgent.jscript.HAS_JSCRIPT) {
  goog.string.StringBuffer.prototype.bufferLength_ = 0;
  goog.string.StringBuffer.prototype.append = function(a1, opt_a2, var_args) {
    if(opt_a2 == null) {
      this.buffer_[this.bufferLength_++] = a1
    }else {
      this.buffer_.push.apply(this.buffer_, arguments);
      this.bufferLength_ = this.buffer_.length
    }
    return this
  }
}else {
  goog.string.StringBuffer.prototype.append = function(a1, opt_a2, var_args) {
    this.buffer_ += a1;
    if(opt_a2 != null) {
      for(var i = 1;i < arguments.length;i++) {
        this.buffer_ += arguments[i]
      }
    }
    return this
  }
}
goog.string.StringBuffer.prototype.clear = function() {
  if(goog.userAgent.jscript.HAS_JSCRIPT) {
    this.buffer_.length = 0;
    this.bufferLength_ = 0
  }else {
    this.buffer_ = ""
  }
};
goog.string.StringBuffer.prototype.getLength = function() {
  return this.toString().length
};
goog.string.StringBuffer.prototype.toString = function() {
  if(goog.userAgent.jscript.HAS_JSCRIPT) {
    var str = this.buffer_.join("");
    this.clear();
    if(str) {
      this.append(str)
    }
    return str
  }else {
    return this.buffer_
  }
};
goog.provide("cljs.core");
goog.require("goog.array");
goog.require("goog.object");
goog.require("goog.string.format");
goog.require("goog.string.StringBuffer");
goog.require("goog.string");
cljs.core._STAR_unchecked_if_STAR_ = false;
cljs.core._STAR_print_fn_STAR_ = function _STAR_print_fn_STAR_(_) {
  throw new Error("No *print-fn* fn set for evaluation environment");
};
cljs.core.truth_ = function truth_(x) {
  return x != null && x !== false
};
cljs.core.type_satisfies_ = function type_satisfies_(p, x) {
  var x__6971 = x == null ? null : x;
  if(p[goog.typeOf(x__6971)]) {
    return true
  }else {
    if(p["_"]) {
      return true
    }else {
      if("\ufdd0'else") {
        return false
      }else {
        return null
      }
    }
  }
};
cljs.core.is_proto_ = function is_proto_(x) {
  return x.constructor.prototype === x
};
cljs.core._STAR_main_cli_fn_STAR_ = null;
cljs.core.missing_protocol = function missing_protocol(proto, obj) {
  return Error(["No protocol method ", proto, " defined for type ", goog.typeOf(obj), ": ", obj].join(""))
};
cljs.core.aclone = function aclone(array_like) {
  return array_like.slice()
};
cljs.core.array = function array(var_args) {
  return Array.prototype.slice.call(arguments)
};
cljs.core.make_array = function() {
  var make_array = null;
  var make_array__1 = function(size) {
    return new Array(size)
  };
  var make_array__2 = function(type, size) {
    return make_array.call(null, size)
  };
  make_array = function(type, size) {
    switch(arguments.length) {
      case 1:
        return make_array__1.call(this, type);
      case 2:
        return make_array__2.call(this, type, size)
    }
    throw"Invalid arity: " + arguments.length;
  };
  make_array.cljs$lang$arity$1 = make_array__1;
  make_array.cljs$lang$arity$2 = make_array__2;
  return make_array
}();
cljs.core.aget = function() {
  var aget = null;
  var aget__2 = function(array, i) {
    return array[i]
  };
  var aget__3 = function() {
    var G__6972__delegate = function(array, i, idxs) {
      return cljs.core.apply.call(null, aget, aget.call(null, array, i), idxs)
    };
    var G__6972 = function(array, i, var_args) {
      var idxs = null;
      if(goog.isDef(var_args)) {
        idxs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__6972__delegate.call(this, array, i, idxs)
    };
    G__6972.cljs$lang$maxFixedArity = 2;
    G__6972.cljs$lang$applyTo = function(arglist__6973) {
      var array = cljs.core.first(arglist__6973);
      var i = cljs.core.first(cljs.core.next(arglist__6973));
      var idxs = cljs.core.rest(cljs.core.next(arglist__6973));
      return G__6972__delegate(array, i, idxs)
    };
    G__6972.cljs$lang$arity$variadic = G__6972__delegate;
    return G__6972
  }();
  aget = function(array, i, var_args) {
    var idxs = var_args;
    switch(arguments.length) {
      case 2:
        return aget__2.call(this, array, i);
      default:
        return aget__3.cljs$lang$arity$variadic(array, i, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  aget.cljs$lang$maxFixedArity = 2;
  aget.cljs$lang$applyTo = aget__3.cljs$lang$applyTo;
  aget.cljs$lang$arity$2 = aget__2;
  aget.cljs$lang$arity$variadic = aget__3.cljs$lang$arity$variadic;
  return aget
}();
cljs.core.aset = function aset(array, i, val) {
  return array[i] = val
};
cljs.core.alength = function alength(array) {
  return array.length
};
cljs.core.into_array = function() {
  var into_array = null;
  var into_array__1 = function(aseq) {
    return into_array.call(null, null, aseq)
  };
  var into_array__2 = function(type, aseq) {
    return cljs.core.reduce.call(null, function(a, x) {
      a.push(x);
      return a
    }, [], aseq)
  };
  into_array = function(type, aseq) {
    switch(arguments.length) {
      case 1:
        return into_array__1.call(this, type);
      case 2:
        return into_array__2.call(this, type, aseq)
    }
    throw"Invalid arity: " + arguments.length;
  };
  into_array.cljs$lang$arity$1 = into_array__1;
  into_array.cljs$lang$arity$2 = into_array__2;
  return into_array
}();
cljs.core.IFn = {};
cljs.core._invoke = function() {
  var _invoke = null;
  var _invoke__1 = function(this$) {
    if(function() {
      var and__3941__auto____7058 = this$;
      if(and__3941__auto____7058) {
        return this$.cljs$core$IFn$_invoke$arity$1
      }else {
        return and__3941__auto____7058
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$1(this$)
    }else {
      var x__2314__auto____7059 = this$ == null ? null : this$;
      return function() {
        var or__3943__auto____7060 = cljs.core._invoke[goog.typeOf(x__2314__auto____7059)];
        if(or__3943__auto____7060) {
          return or__3943__auto____7060
        }else {
          var or__3943__auto____7061 = cljs.core._invoke["_"];
          if(or__3943__auto____7061) {
            return or__3943__auto____7061
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$)
    }
  };
  var _invoke__2 = function(this$, a) {
    if(function() {
      var and__3941__auto____7062 = this$;
      if(and__3941__auto____7062) {
        return this$.cljs$core$IFn$_invoke$arity$2
      }else {
        return and__3941__auto____7062
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$2(this$, a)
    }else {
      var x__2314__auto____7063 = this$ == null ? null : this$;
      return function() {
        var or__3943__auto____7064 = cljs.core._invoke[goog.typeOf(x__2314__auto____7063)];
        if(or__3943__auto____7064) {
          return or__3943__auto____7064
        }else {
          var or__3943__auto____7065 = cljs.core._invoke["_"];
          if(or__3943__auto____7065) {
            return or__3943__auto____7065
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a)
    }
  };
  var _invoke__3 = function(this$, a, b) {
    if(function() {
      var and__3941__auto____7066 = this$;
      if(and__3941__auto____7066) {
        return this$.cljs$core$IFn$_invoke$arity$3
      }else {
        return and__3941__auto____7066
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$3(this$, a, b)
    }else {
      var x__2314__auto____7067 = this$ == null ? null : this$;
      return function() {
        var or__3943__auto____7068 = cljs.core._invoke[goog.typeOf(x__2314__auto____7067)];
        if(or__3943__auto____7068) {
          return or__3943__auto____7068
        }else {
          var or__3943__auto____7069 = cljs.core._invoke["_"];
          if(or__3943__auto____7069) {
            return or__3943__auto____7069
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b)
    }
  };
  var _invoke__4 = function(this$, a, b, c) {
    if(function() {
      var and__3941__auto____7070 = this$;
      if(and__3941__auto____7070) {
        return this$.cljs$core$IFn$_invoke$arity$4
      }else {
        return and__3941__auto____7070
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$4(this$, a, b, c)
    }else {
      var x__2314__auto____7071 = this$ == null ? null : this$;
      return function() {
        var or__3943__auto____7072 = cljs.core._invoke[goog.typeOf(x__2314__auto____7071)];
        if(or__3943__auto____7072) {
          return or__3943__auto____7072
        }else {
          var or__3943__auto____7073 = cljs.core._invoke["_"];
          if(or__3943__auto____7073) {
            return or__3943__auto____7073
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c)
    }
  };
  var _invoke__5 = function(this$, a, b, c, d) {
    if(function() {
      var and__3941__auto____7074 = this$;
      if(and__3941__auto____7074) {
        return this$.cljs$core$IFn$_invoke$arity$5
      }else {
        return and__3941__auto____7074
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$5(this$, a, b, c, d)
    }else {
      var x__2314__auto____7075 = this$ == null ? null : this$;
      return function() {
        var or__3943__auto____7076 = cljs.core._invoke[goog.typeOf(x__2314__auto____7075)];
        if(or__3943__auto____7076) {
          return or__3943__auto____7076
        }else {
          var or__3943__auto____7077 = cljs.core._invoke["_"];
          if(or__3943__auto____7077) {
            return or__3943__auto____7077
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d)
    }
  };
  var _invoke__6 = function(this$, a, b, c, d, e) {
    if(function() {
      var and__3941__auto____7078 = this$;
      if(and__3941__auto____7078) {
        return this$.cljs$core$IFn$_invoke$arity$6
      }else {
        return and__3941__auto____7078
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$6(this$, a, b, c, d, e)
    }else {
      var x__2314__auto____7079 = this$ == null ? null : this$;
      return function() {
        var or__3943__auto____7080 = cljs.core._invoke[goog.typeOf(x__2314__auto____7079)];
        if(or__3943__auto____7080) {
          return or__3943__auto____7080
        }else {
          var or__3943__auto____7081 = cljs.core._invoke["_"];
          if(or__3943__auto____7081) {
            return or__3943__auto____7081
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e)
    }
  };
  var _invoke__7 = function(this$, a, b, c, d, e, f) {
    if(function() {
      var and__3941__auto____7082 = this$;
      if(and__3941__auto____7082) {
        return this$.cljs$core$IFn$_invoke$arity$7
      }else {
        return and__3941__auto____7082
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$7(this$, a, b, c, d, e, f)
    }else {
      var x__2314__auto____7083 = this$ == null ? null : this$;
      return function() {
        var or__3943__auto____7084 = cljs.core._invoke[goog.typeOf(x__2314__auto____7083)];
        if(or__3943__auto____7084) {
          return or__3943__auto____7084
        }else {
          var or__3943__auto____7085 = cljs.core._invoke["_"];
          if(or__3943__auto____7085) {
            return or__3943__auto____7085
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f)
    }
  };
  var _invoke__8 = function(this$, a, b, c, d, e, f, g) {
    if(function() {
      var and__3941__auto____7086 = this$;
      if(and__3941__auto____7086) {
        return this$.cljs$core$IFn$_invoke$arity$8
      }else {
        return and__3941__auto____7086
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$8(this$, a, b, c, d, e, f, g)
    }else {
      var x__2314__auto____7087 = this$ == null ? null : this$;
      return function() {
        var or__3943__auto____7088 = cljs.core._invoke[goog.typeOf(x__2314__auto____7087)];
        if(or__3943__auto____7088) {
          return or__3943__auto____7088
        }else {
          var or__3943__auto____7089 = cljs.core._invoke["_"];
          if(or__3943__auto____7089) {
            return or__3943__auto____7089
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g)
    }
  };
  var _invoke__9 = function(this$, a, b, c, d, e, f, g, h) {
    if(function() {
      var and__3941__auto____7090 = this$;
      if(and__3941__auto____7090) {
        return this$.cljs$core$IFn$_invoke$arity$9
      }else {
        return and__3941__auto____7090
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$9(this$, a, b, c, d, e, f, g, h)
    }else {
      var x__2314__auto____7091 = this$ == null ? null : this$;
      return function() {
        var or__3943__auto____7092 = cljs.core._invoke[goog.typeOf(x__2314__auto____7091)];
        if(or__3943__auto____7092) {
          return or__3943__auto____7092
        }else {
          var or__3943__auto____7093 = cljs.core._invoke["_"];
          if(or__3943__auto____7093) {
            return or__3943__auto____7093
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h)
    }
  };
  var _invoke__10 = function(this$, a, b, c, d, e, f, g, h, i) {
    if(function() {
      var and__3941__auto____7094 = this$;
      if(and__3941__auto____7094) {
        return this$.cljs$core$IFn$_invoke$arity$10
      }else {
        return and__3941__auto____7094
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$10(this$, a, b, c, d, e, f, g, h, i)
    }else {
      var x__2314__auto____7095 = this$ == null ? null : this$;
      return function() {
        var or__3943__auto____7096 = cljs.core._invoke[goog.typeOf(x__2314__auto____7095)];
        if(or__3943__auto____7096) {
          return or__3943__auto____7096
        }else {
          var or__3943__auto____7097 = cljs.core._invoke["_"];
          if(or__3943__auto____7097) {
            return or__3943__auto____7097
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i)
    }
  };
  var _invoke__11 = function(this$, a, b, c, d, e, f, g, h, i, j) {
    if(function() {
      var and__3941__auto____7098 = this$;
      if(and__3941__auto____7098) {
        return this$.cljs$core$IFn$_invoke$arity$11
      }else {
        return and__3941__auto____7098
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$11(this$, a, b, c, d, e, f, g, h, i, j)
    }else {
      var x__2314__auto____7099 = this$ == null ? null : this$;
      return function() {
        var or__3943__auto____7100 = cljs.core._invoke[goog.typeOf(x__2314__auto____7099)];
        if(or__3943__auto____7100) {
          return or__3943__auto____7100
        }else {
          var or__3943__auto____7101 = cljs.core._invoke["_"];
          if(or__3943__auto____7101) {
            return or__3943__auto____7101
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j)
    }
  };
  var _invoke__12 = function(this$, a, b, c, d, e, f, g, h, i, j, k) {
    if(function() {
      var and__3941__auto____7102 = this$;
      if(and__3941__auto____7102) {
        return this$.cljs$core$IFn$_invoke$arity$12
      }else {
        return and__3941__auto____7102
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$12(this$, a, b, c, d, e, f, g, h, i, j, k)
    }else {
      var x__2314__auto____7103 = this$ == null ? null : this$;
      return function() {
        var or__3943__auto____7104 = cljs.core._invoke[goog.typeOf(x__2314__auto____7103)];
        if(or__3943__auto____7104) {
          return or__3943__auto____7104
        }else {
          var or__3943__auto____7105 = cljs.core._invoke["_"];
          if(or__3943__auto____7105) {
            return or__3943__auto____7105
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k)
    }
  };
  var _invoke__13 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l) {
    if(function() {
      var and__3941__auto____7106 = this$;
      if(and__3941__auto____7106) {
        return this$.cljs$core$IFn$_invoke$arity$13
      }else {
        return and__3941__auto____7106
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$13(this$, a, b, c, d, e, f, g, h, i, j, k, l)
    }else {
      var x__2314__auto____7107 = this$ == null ? null : this$;
      return function() {
        var or__3943__auto____7108 = cljs.core._invoke[goog.typeOf(x__2314__auto____7107)];
        if(or__3943__auto____7108) {
          return or__3943__auto____7108
        }else {
          var or__3943__auto____7109 = cljs.core._invoke["_"];
          if(or__3943__auto____7109) {
            return or__3943__auto____7109
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l)
    }
  };
  var _invoke__14 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    if(function() {
      var and__3941__auto____7110 = this$;
      if(and__3941__auto____7110) {
        return this$.cljs$core$IFn$_invoke$arity$14
      }else {
        return and__3941__auto____7110
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$14(this$, a, b, c, d, e, f, g, h, i, j, k, l, m)
    }else {
      var x__2314__auto____7111 = this$ == null ? null : this$;
      return function() {
        var or__3943__auto____7112 = cljs.core._invoke[goog.typeOf(x__2314__auto____7111)];
        if(or__3943__auto____7112) {
          return or__3943__auto____7112
        }else {
          var or__3943__auto____7113 = cljs.core._invoke["_"];
          if(or__3943__auto____7113) {
            return or__3943__auto____7113
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m)
    }
  };
  var _invoke__15 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    if(function() {
      var and__3941__auto____7114 = this$;
      if(and__3941__auto____7114) {
        return this$.cljs$core$IFn$_invoke$arity$15
      }else {
        return and__3941__auto____7114
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$15(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n)
    }else {
      var x__2314__auto____7115 = this$ == null ? null : this$;
      return function() {
        var or__3943__auto____7116 = cljs.core._invoke[goog.typeOf(x__2314__auto____7115)];
        if(or__3943__auto____7116) {
          return or__3943__auto____7116
        }else {
          var or__3943__auto____7117 = cljs.core._invoke["_"];
          if(or__3943__auto____7117) {
            return or__3943__auto____7117
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n)
    }
  };
  var _invoke__16 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    if(function() {
      var and__3941__auto____7118 = this$;
      if(and__3941__auto____7118) {
        return this$.cljs$core$IFn$_invoke$arity$16
      }else {
        return and__3941__auto____7118
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$16(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o)
    }else {
      var x__2314__auto____7119 = this$ == null ? null : this$;
      return function() {
        var or__3943__auto____7120 = cljs.core._invoke[goog.typeOf(x__2314__auto____7119)];
        if(or__3943__auto____7120) {
          return or__3943__auto____7120
        }else {
          var or__3943__auto____7121 = cljs.core._invoke["_"];
          if(or__3943__auto____7121) {
            return or__3943__auto____7121
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o)
    }
  };
  var _invoke__17 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    if(function() {
      var and__3941__auto____7122 = this$;
      if(and__3941__auto____7122) {
        return this$.cljs$core$IFn$_invoke$arity$17
      }else {
        return and__3941__auto____7122
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$17(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p)
    }else {
      var x__2314__auto____7123 = this$ == null ? null : this$;
      return function() {
        var or__3943__auto____7124 = cljs.core._invoke[goog.typeOf(x__2314__auto____7123)];
        if(or__3943__auto____7124) {
          return or__3943__auto____7124
        }else {
          var or__3943__auto____7125 = cljs.core._invoke["_"];
          if(or__3943__auto____7125) {
            return or__3943__auto____7125
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p)
    }
  };
  var _invoke__18 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    if(function() {
      var and__3941__auto____7126 = this$;
      if(and__3941__auto____7126) {
        return this$.cljs$core$IFn$_invoke$arity$18
      }else {
        return and__3941__auto____7126
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$18(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q)
    }else {
      var x__2314__auto____7127 = this$ == null ? null : this$;
      return function() {
        var or__3943__auto____7128 = cljs.core._invoke[goog.typeOf(x__2314__auto____7127)];
        if(or__3943__auto____7128) {
          return or__3943__auto____7128
        }else {
          var or__3943__auto____7129 = cljs.core._invoke["_"];
          if(or__3943__auto____7129) {
            return or__3943__auto____7129
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q)
    }
  };
  var _invoke__19 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s) {
    if(function() {
      var and__3941__auto____7130 = this$;
      if(and__3941__auto____7130) {
        return this$.cljs$core$IFn$_invoke$arity$19
      }else {
        return and__3941__auto____7130
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$19(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s)
    }else {
      var x__2314__auto____7131 = this$ == null ? null : this$;
      return function() {
        var or__3943__auto____7132 = cljs.core._invoke[goog.typeOf(x__2314__auto____7131)];
        if(or__3943__auto____7132) {
          return or__3943__auto____7132
        }else {
          var or__3943__auto____7133 = cljs.core._invoke["_"];
          if(or__3943__auto____7133) {
            return or__3943__auto____7133
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s)
    }
  };
  var _invoke__20 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t) {
    if(function() {
      var and__3941__auto____7134 = this$;
      if(and__3941__auto____7134) {
        return this$.cljs$core$IFn$_invoke$arity$20
      }else {
        return and__3941__auto____7134
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$20(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t)
    }else {
      var x__2314__auto____7135 = this$ == null ? null : this$;
      return function() {
        var or__3943__auto____7136 = cljs.core._invoke[goog.typeOf(x__2314__auto____7135)];
        if(or__3943__auto____7136) {
          return or__3943__auto____7136
        }else {
          var or__3943__auto____7137 = cljs.core._invoke["_"];
          if(or__3943__auto____7137) {
            return or__3943__auto____7137
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t)
    }
  };
  var _invoke__21 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest) {
    if(function() {
      var and__3941__auto____7138 = this$;
      if(and__3941__auto____7138) {
        return this$.cljs$core$IFn$_invoke$arity$21
      }else {
        return and__3941__auto____7138
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$21(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest)
    }else {
      var x__2314__auto____7139 = this$ == null ? null : this$;
      return function() {
        var or__3943__auto____7140 = cljs.core._invoke[goog.typeOf(x__2314__auto____7139)];
        if(or__3943__auto____7140) {
          return or__3943__auto____7140
        }else {
          var or__3943__auto____7141 = cljs.core._invoke["_"];
          if(or__3943__auto____7141) {
            return or__3943__auto____7141
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest)
    }
  };
  _invoke = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return _invoke__1.call(this, this$);
      case 2:
        return _invoke__2.call(this, this$, a);
      case 3:
        return _invoke__3.call(this, this$, a, b);
      case 4:
        return _invoke__4.call(this, this$, a, b, c);
      case 5:
        return _invoke__5.call(this, this$, a, b, c, d);
      case 6:
        return _invoke__6.call(this, this$, a, b, c, d, e);
      case 7:
        return _invoke__7.call(this, this$, a, b, c, d, e, f);
      case 8:
        return _invoke__8.call(this, this$, a, b, c, d, e, f, g);
      case 9:
        return _invoke__9.call(this, this$, a, b, c, d, e, f, g, h);
      case 10:
        return _invoke__10.call(this, this$, a, b, c, d, e, f, g, h, i);
      case 11:
        return _invoke__11.call(this, this$, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return _invoke__12.call(this, this$, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return _invoke__13.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return _invoke__14.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return _invoke__15.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return _invoke__16.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return _invoke__17.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return _invoke__18.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return _invoke__19.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s);
      case 20:
        return _invoke__20.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t);
      case 21:
        return _invoke__21.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest)
    }
    throw"Invalid arity: " + arguments.length;
  };
  _invoke.cljs$lang$arity$1 = _invoke__1;
  _invoke.cljs$lang$arity$2 = _invoke__2;
  _invoke.cljs$lang$arity$3 = _invoke__3;
  _invoke.cljs$lang$arity$4 = _invoke__4;
  _invoke.cljs$lang$arity$5 = _invoke__5;
  _invoke.cljs$lang$arity$6 = _invoke__6;
  _invoke.cljs$lang$arity$7 = _invoke__7;
  _invoke.cljs$lang$arity$8 = _invoke__8;
  _invoke.cljs$lang$arity$9 = _invoke__9;
  _invoke.cljs$lang$arity$10 = _invoke__10;
  _invoke.cljs$lang$arity$11 = _invoke__11;
  _invoke.cljs$lang$arity$12 = _invoke__12;
  _invoke.cljs$lang$arity$13 = _invoke__13;
  _invoke.cljs$lang$arity$14 = _invoke__14;
  _invoke.cljs$lang$arity$15 = _invoke__15;
  _invoke.cljs$lang$arity$16 = _invoke__16;
  _invoke.cljs$lang$arity$17 = _invoke__17;
  _invoke.cljs$lang$arity$18 = _invoke__18;
  _invoke.cljs$lang$arity$19 = _invoke__19;
  _invoke.cljs$lang$arity$20 = _invoke__20;
  _invoke.cljs$lang$arity$21 = _invoke__21;
  return _invoke
}();
cljs.core.ICounted = {};
cljs.core._count = function _count(coll) {
  if(function() {
    var and__3941__auto____7146 = coll;
    if(and__3941__auto____7146) {
      return coll.cljs$core$ICounted$_count$arity$1
    }else {
      return and__3941__auto____7146
    }
  }()) {
    return coll.cljs$core$ICounted$_count$arity$1(coll)
  }else {
    var x__2314__auto____7147 = coll == null ? null : coll;
    return function() {
      var or__3943__auto____7148 = cljs.core._count[goog.typeOf(x__2314__auto____7147)];
      if(or__3943__auto____7148) {
        return or__3943__auto____7148
      }else {
        var or__3943__auto____7149 = cljs.core._count["_"];
        if(or__3943__auto____7149) {
          return or__3943__auto____7149
        }else {
          throw cljs.core.missing_protocol.call(null, "ICounted.-count", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.IEmptyableCollection = {};
cljs.core._empty = function _empty(coll) {
  if(function() {
    var and__3941__auto____7154 = coll;
    if(and__3941__auto____7154) {
      return coll.cljs$core$IEmptyableCollection$_empty$arity$1
    }else {
      return and__3941__auto____7154
    }
  }()) {
    return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll)
  }else {
    var x__2314__auto____7155 = coll == null ? null : coll;
    return function() {
      var or__3943__auto____7156 = cljs.core._empty[goog.typeOf(x__2314__auto____7155)];
      if(or__3943__auto____7156) {
        return or__3943__auto____7156
      }else {
        var or__3943__auto____7157 = cljs.core._empty["_"];
        if(or__3943__auto____7157) {
          return or__3943__auto____7157
        }else {
          throw cljs.core.missing_protocol.call(null, "IEmptyableCollection.-empty", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.ICollection = {};
cljs.core._conj = function _conj(coll, o) {
  if(function() {
    var and__3941__auto____7162 = coll;
    if(and__3941__auto____7162) {
      return coll.cljs$core$ICollection$_conj$arity$2
    }else {
      return and__3941__auto____7162
    }
  }()) {
    return coll.cljs$core$ICollection$_conj$arity$2(coll, o)
  }else {
    var x__2314__auto____7163 = coll == null ? null : coll;
    return function() {
      var or__3943__auto____7164 = cljs.core._conj[goog.typeOf(x__2314__auto____7163)];
      if(or__3943__auto____7164) {
        return or__3943__auto____7164
      }else {
        var or__3943__auto____7165 = cljs.core._conj["_"];
        if(or__3943__auto____7165) {
          return or__3943__auto____7165
        }else {
          throw cljs.core.missing_protocol.call(null, "ICollection.-conj", coll);
        }
      }
    }().call(null, coll, o)
  }
};
cljs.core.IIndexed = {};
cljs.core._nth = function() {
  var _nth = null;
  var _nth__2 = function(coll, n) {
    if(function() {
      var and__3941__auto____7174 = coll;
      if(and__3941__auto____7174) {
        return coll.cljs$core$IIndexed$_nth$arity$2
      }else {
        return and__3941__auto____7174
      }
    }()) {
      return coll.cljs$core$IIndexed$_nth$arity$2(coll, n)
    }else {
      var x__2314__auto____7175 = coll == null ? null : coll;
      return function() {
        var or__3943__auto____7176 = cljs.core._nth[goog.typeOf(x__2314__auto____7175)];
        if(or__3943__auto____7176) {
          return or__3943__auto____7176
        }else {
          var or__3943__auto____7177 = cljs.core._nth["_"];
          if(or__3943__auto____7177) {
            return or__3943__auto____7177
          }else {
            throw cljs.core.missing_protocol.call(null, "IIndexed.-nth", coll);
          }
        }
      }().call(null, coll, n)
    }
  };
  var _nth__3 = function(coll, n, not_found) {
    if(function() {
      var and__3941__auto____7178 = coll;
      if(and__3941__auto____7178) {
        return coll.cljs$core$IIndexed$_nth$arity$3
      }else {
        return and__3941__auto____7178
      }
    }()) {
      return coll.cljs$core$IIndexed$_nth$arity$3(coll, n, not_found)
    }else {
      var x__2314__auto____7179 = coll == null ? null : coll;
      return function() {
        var or__3943__auto____7180 = cljs.core._nth[goog.typeOf(x__2314__auto____7179)];
        if(or__3943__auto____7180) {
          return or__3943__auto____7180
        }else {
          var or__3943__auto____7181 = cljs.core._nth["_"];
          if(or__3943__auto____7181) {
            return or__3943__auto____7181
          }else {
            throw cljs.core.missing_protocol.call(null, "IIndexed.-nth", coll);
          }
        }
      }().call(null, coll, n, not_found)
    }
  };
  _nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return _nth__2.call(this, coll, n);
      case 3:
        return _nth__3.call(this, coll, n, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  _nth.cljs$lang$arity$2 = _nth__2;
  _nth.cljs$lang$arity$3 = _nth__3;
  return _nth
}();
cljs.core.ASeq = {};
cljs.core.ISeq = {};
cljs.core._first = function _first(coll) {
  if(function() {
    var and__3941__auto____7186 = coll;
    if(and__3941__auto____7186) {
      return coll.cljs$core$ISeq$_first$arity$1
    }else {
      return and__3941__auto____7186
    }
  }()) {
    return coll.cljs$core$ISeq$_first$arity$1(coll)
  }else {
    var x__2314__auto____7187 = coll == null ? null : coll;
    return function() {
      var or__3943__auto____7188 = cljs.core._first[goog.typeOf(x__2314__auto____7187)];
      if(or__3943__auto____7188) {
        return or__3943__auto____7188
      }else {
        var or__3943__auto____7189 = cljs.core._first["_"];
        if(or__3943__auto____7189) {
          return or__3943__auto____7189
        }else {
          throw cljs.core.missing_protocol.call(null, "ISeq.-first", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core._rest = function _rest(coll) {
  if(function() {
    var and__3941__auto____7194 = coll;
    if(and__3941__auto____7194) {
      return coll.cljs$core$ISeq$_rest$arity$1
    }else {
      return and__3941__auto____7194
    }
  }()) {
    return coll.cljs$core$ISeq$_rest$arity$1(coll)
  }else {
    var x__2314__auto____7195 = coll == null ? null : coll;
    return function() {
      var or__3943__auto____7196 = cljs.core._rest[goog.typeOf(x__2314__auto____7195)];
      if(or__3943__auto____7196) {
        return or__3943__auto____7196
      }else {
        var or__3943__auto____7197 = cljs.core._rest["_"];
        if(or__3943__auto____7197) {
          return or__3943__auto____7197
        }else {
          throw cljs.core.missing_protocol.call(null, "ISeq.-rest", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.INext = {};
cljs.core._next = function _next(coll) {
  if(function() {
    var and__3941__auto____7202 = coll;
    if(and__3941__auto____7202) {
      return coll.cljs$core$INext$_next$arity$1
    }else {
      return and__3941__auto____7202
    }
  }()) {
    return coll.cljs$core$INext$_next$arity$1(coll)
  }else {
    var x__2314__auto____7203 = coll == null ? null : coll;
    return function() {
      var or__3943__auto____7204 = cljs.core._next[goog.typeOf(x__2314__auto____7203)];
      if(or__3943__auto____7204) {
        return or__3943__auto____7204
      }else {
        var or__3943__auto____7205 = cljs.core._next["_"];
        if(or__3943__auto____7205) {
          return or__3943__auto____7205
        }else {
          throw cljs.core.missing_protocol.call(null, "INext.-next", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.ILookup = {};
cljs.core._lookup = function() {
  var _lookup = null;
  var _lookup__2 = function(o, k) {
    if(function() {
      var and__3941__auto____7214 = o;
      if(and__3941__auto____7214) {
        return o.cljs$core$ILookup$_lookup$arity$2
      }else {
        return and__3941__auto____7214
      }
    }()) {
      return o.cljs$core$ILookup$_lookup$arity$2(o, k)
    }else {
      var x__2314__auto____7215 = o == null ? null : o;
      return function() {
        var or__3943__auto____7216 = cljs.core._lookup[goog.typeOf(x__2314__auto____7215)];
        if(or__3943__auto____7216) {
          return or__3943__auto____7216
        }else {
          var or__3943__auto____7217 = cljs.core._lookup["_"];
          if(or__3943__auto____7217) {
            return or__3943__auto____7217
          }else {
            throw cljs.core.missing_protocol.call(null, "ILookup.-lookup", o);
          }
        }
      }().call(null, o, k)
    }
  };
  var _lookup__3 = function(o, k, not_found) {
    if(function() {
      var and__3941__auto____7218 = o;
      if(and__3941__auto____7218) {
        return o.cljs$core$ILookup$_lookup$arity$3
      }else {
        return and__3941__auto____7218
      }
    }()) {
      return o.cljs$core$ILookup$_lookup$arity$3(o, k, not_found)
    }else {
      var x__2314__auto____7219 = o == null ? null : o;
      return function() {
        var or__3943__auto____7220 = cljs.core._lookup[goog.typeOf(x__2314__auto____7219)];
        if(or__3943__auto____7220) {
          return or__3943__auto____7220
        }else {
          var or__3943__auto____7221 = cljs.core._lookup["_"];
          if(or__3943__auto____7221) {
            return or__3943__auto____7221
          }else {
            throw cljs.core.missing_protocol.call(null, "ILookup.-lookup", o);
          }
        }
      }().call(null, o, k, not_found)
    }
  };
  _lookup = function(o, k, not_found) {
    switch(arguments.length) {
      case 2:
        return _lookup__2.call(this, o, k);
      case 3:
        return _lookup__3.call(this, o, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  _lookup.cljs$lang$arity$2 = _lookup__2;
  _lookup.cljs$lang$arity$3 = _lookup__3;
  return _lookup
}();
cljs.core.IAssociative = {};
cljs.core._contains_key_QMARK_ = function _contains_key_QMARK_(coll, k) {
  if(function() {
    var and__3941__auto____7226 = coll;
    if(and__3941__auto____7226) {
      return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2
    }else {
      return and__3941__auto____7226
    }
  }()) {
    return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll, k)
  }else {
    var x__2314__auto____7227 = coll == null ? null : coll;
    return function() {
      var or__3943__auto____7228 = cljs.core._contains_key_QMARK_[goog.typeOf(x__2314__auto____7227)];
      if(or__3943__auto____7228) {
        return or__3943__auto____7228
      }else {
        var or__3943__auto____7229 = cljs.core._contains_key_QMARK_["_"];
        if(or__3943__auto____7229) {
          return or__3943__auto____7229
        }else {
          throw cljs.core.missing_protocol.call(null, "IAssociative.-contains-key?", coll);
        }
      }
    }().call(null, coll, k)
  }
};
cljs.core._assoc = function _assoc(coll, k, v) {
  if(function() {
    var and__3941__auto____7234 = coll;
    if(and__3941__auto____7234) {
      return coll.cljs$core$IAssociative$_assoc$arity$3
    }else {
      return and__3941__auto____7234
    }
  }()) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, k, v)
  }else {
    var x__2314__auto____7235 = coll == null ? null : coll;
    return function() {
      var or__3943__auto____7236 = cljs.core._assoc[goog.typeOf(x__2314__auto____7235)];
      if(or__3943__auto____7236) {
        return or__3943__auto____7236
      }else {
        var or__3943__auto____7237 = cljs.core._assoc["_"];
        if(or__3943__auto____7237) {
          return or__3943__auto____7237
        }else {
          throw cljs.core.missing_protocol.call(null, "IAssociative.-assoc", coll);
        }
      }
    }().call(null, coll, k, v)
  }
};
cljs.core.IMap = {};
cljs.core._dissoc = function _dissoc(coll, k) {
  if(function() {
    var and__3941__auto____7242 = coll;
    if(and__3941__auto____7242) {
      return coll.cljs$core$IMap$_dissoc$arity$2
    }else {
      return and__3941__auto____7242
    }
  }()) {
    return coll.cljs$core$IMap$_dissoc$arity$2(coll, k)
  }else {
    var x__2314__auto____7243 = coll == null ? null : coll;
    return function() {
      var or__3943__auto____7244 = cljs.core._dissoc[goog.typeOf(x__2314__auto____7243)];
      if(or__3943__auto____7244) {
        return or__3943__auto____7244
      }else {
        var or__3943__auto____7245 = cljs.core._dissoc["_"];
        if(or__3943__auto____7245) {
          return or__3943__auto____7245
        }else {
          throw cljs.core.missing_protocol.call(null, "IMap.-dissoc", coll);
        }
      }
    }().call(null, coll, k)
  }
};
cljs.core.IMapEntry = {};
cljs.core._key = function _key(coll) {
  if(function() {
    var and__3941__auto____7250 = coll;
    if(and__3941__auto____7250) {
      return coll.cljs$core$IMapEntry$_key$arity$1
    }else {
      return and__3941__auto____7250
    }
  }()) {
    return coll.cljs$core$IMapEntry$_key$arity$1(coll)
  }else {
    var x__2314__auto____7251 = coll == null ? null : coll;
    return function() {
      var or__3943__auto____7252 = cljs.core._key[goog.typeOf(x__2314__auto____7251)];
      if(or__3943__auto____7252) {
        return or__3943__auto____7252
      }else {
        var or__3943__auto____7253 = cljs.core._key["_"];
        if(or__3943__auto____7253) {
          return or__3943__auto____7253
        }else {
          throw cljs.core.missing_protocol.call(null, "IMapEntry.-key", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core._val = function _val(coll) {
  if(function() {
    var and__3941__auto____7258 = coll;
    if(and__3941__auto____7258) {
      return coll.cljs$core$IMapEntry$_val$arity$1
    }else {
      return and__3941__auto____7258
    }
  }()) {
    return coll.cljs$core$IMapEntry$_val$arity$1(coll)
  }else {
    var x__2314__auto____7259 = coll == null ? null : coll;
    return function() {
      var or__3943__auto____7260 = cljs.core._val[goog.typeOf(x__2314__auto____7259)];
      if(or__3943__auto____7260) {
        return or__3943__auto____7260
      }else {
        var or__3943__auto____7261 = cljs.core._val["_"];
        if(or__3943__auto____7261) {
          return or__3943__auto____7261
        }else {
          throw cljs.core.missing_protocol.call(null, "IMapEntry.-val", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.ISet = {};
cljs.core._disjoin = function _disjoin(coll, v) {
  if(function() {
    var and__3941__auto____7266 = coll;
    if(and__3941__auto____7266) {
      return coll.cljs$core$ISet$_disjoin$arity$2
    }else {
      return and__3941__auto____7266
    }
  }()) {
    return coll.cljs$core$ISet$_disjoin$arity$2(coll, v)
  }else {
    var x__2314__auto____7267 = coll == null ? null : coll;
    return function() {
      var or__3943__auto____7268 = cljs.core._disjoin[goog.typeOf(x__2314__auto____7267)];
      if(or__3943__auto____7268) {
        return or__3943__auto____7268
      }else {
        var or__3943__auto____7269 = cljs.core._disjoin["_"];
        if(or__3943__auto____7269) {
          return or__3943__auto____7269
        }else {
          throw cljs.core.missing_protocol.call(null, "ISet.-disjoin", coll);
        }
      }
    }().call(null, coll, v)
  }
};
cljs.core.IStack = {};
cljs.core._peek = function _peek(coll) {
  if(function() {
    var and__3941__auto____7274 = coll;
    if(and__3941__auto____7274) {
      return coll.cljs$core$IStack$_peek$arity$1
    }else {
      return and__3941__auto____7274
    }
  }()) {
    return coll.cljs$core$IStack$_peek$arity$1(coll)
  }else {
    var x__2314__auto____7275 = coll == null ? null : coll;
    return function() {
      var or__3943__auto____7276 = cljs.core._peek[goog.typeOf(x__2314__auto____7275)];
      if(or__3943__auto____7276) {
        return or__3943__auto____7276
      }else {
        var or__3943__auto____7277 = cljs.core._peek["_"];
        if(or__3943__auto____7277) {
          return or__3943__auto____7277
        }else {
          throw cljs.core.missing_protocol.call(null, "IStack.-peek", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core._pop = function _pop(coll) {
  if(function() {
    var and__3941__auto____7282 = coll;
    if(and__3941__auto____7282) {
      return coll.cljs$core$IStack$_pop$arity$1
    }else {
      return and__3941__auto____7282
    }
  }()) {
    return coll.cljs$core$IStack$_pop$arity$1(coll)
  }else {
    var x__2314__auto____7283 = coll == null ? null : coll;
    return function() {
      var or__3943__auto____7284 = cljs.core._pop[goog.typeOf(x__2314__auto____7283)];
      if(or__3943__auto____7284) {
        return or__3943__auto____7284
      }else {
        var or__3943__auto____7285 = cljs.core._pop["_"];
        if(or__3943__auto____7285) {
          return or__3943__auto____7285
        }else {
          throw cljs.core.missing_protocol.call(null, "IStack.-pop", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.IVector = {};
cljs.core._assoc_n = function _assoc_n(coll, n, val) {
  if(function() {
    var and__3941__auto____7290 = coll;
    if(and__3941__auto____7290) {
      return coll.cljs$core$IVector$_assoc_n$arity$3
    }else {
      return and__3941__auto____7290
    }
  }()) {
    return coll.cljs$core$IVector$_assoc_n$arity$3(coll, n, val)
  }else {
    var x__2314__auto____7291 = coll == null ? null : coll;
    return function() {
      var or__3943__auto____7292 = cljs.core._assoc_n[goog.typeOf(x__2314__auto____7291)];
      if(or__3943__auto____7292) {
        return or__3943__auto____7292
      }else {
        var or__3943__auto____7293 = cljs.core._assoc_n["_"];
        if(or__3943__auto____7293) {
          return or__3943__auto____7293
        }else {
          throw cljs.core.missing_protocol.call(null, "IVector.-assoc-n", coll);
        }
      }
    }().call(null, coll, n, val)
  }
};
cljs.core.IDeref = {};
cljs.core._deref = function _deref(o) {
  if(function() {
    var and__3941__auto____7298 = o;
    if(and__3941__auto____7298) {
      return o.cljs$core$IDeref$_deref$arity$1
    }else {
      return and__3941__auto____7298
    }
  }()) {
    return o.cljs$core$IDeref$_deref$arity$1(o)
  }else {
    var x__2314__auto____7299 = o == null ? null : o;
    return function() {
      var or__3943__auto____7300 = cljs.core._deref[goog.typeOf(x__2314__auto____7299)];
      if(or__3943__auto____7300) {
        return or__3943__auto____7300
      }else {
        var or__3943__auto____7301 = cljs.core._deref["_"];
        if(or__3943__auto____7301) {
          return or__3943__auto____7301
        }else {
          throw cljs.core.missing_protocol.call(null, "IDeref.-deref", o);
        }
      }
    }().call(null, o)
  }
};
cljs.core.IDerefWithTimeout = {};
cljs.core._deref_with_timeout = function _deref_with_timeout(o, msec, timeout_val) {
  if(function() {
    var and__3941__auto____7306 = o;
    if(and__3941__auto____7306) {
      return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3
    }else {
      return and__3941__auto____7306
    }
  }()) {
    return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o, msec, timeout_val)
  }else {
    var x__2314__auto____7307 = o == null ? null : o;
    return function() {
      var or__3943__auto____7308 = cljs.core._deref_with_timeout[goog.typeOf(x__2314__auto____7307)];
      if(or__3943__auto____7308) {
        return or__3943__auto____7308
      }else {
        var or__3943__auto____7309 = cljs.core._deref_with_timeout["_"];
        if(or__3943__auto____7309) {
          return or__3943__auto____7309
        }else {
          throw cljs.core.missing_protocol.call(null, "IDerefWithTimeout.-deref-with-timeout", o);
        }
      }
    }().call(null, o, msec, timeout_val)
  }
};
cljs.core.IMeta = {};
cljs.core._meta = function _meta(o) {
  if(function() {
    var and__3941__auto____7314 = o;
    if(and__3941__auto____7314) {
      return o.cljs$core$IMeta$_meta$arity$1
    }else {
      return and__3941__auto____7314
    }
  }()) {
    return o.cljs$core$IMeta$_meta$arity$1(o)
  }else {
    var x__2314__auto____7315 = o == null ? null : o;
    return function() {
      var or__3943__auto____7316 = cljs.core._meta[goog.typeOf(x__2314__auto____7315)];
      if(or__3943__auto____7316) {
        return or__3943__auto____7316
      }else {
        var or__3943__auto____7317 = cljs.core._meta["_"];
        if(or__3943__auto____7317) {
          return or__3943__auto____7317
        }else {
          throw cljs.core.missing_protocol.call(null, "IMeta.-meta", o);
        }
      }
    }().call(null, o)
  }
};
cljs.core.IWithMeta = {};
cljs.core._with_meta = function _with_meta(o, meta) {
  if(function() {
    var and__3941__auto____7322 = o;
    if(and__3941__auto____7322) {
      return o.cljs$core$IWithMeta$_with_meta$arity$2
    }else {
      return and__3941__auto____7322
    }
  }()) {
    return o.cljs$core$IWithMeta$_with_meta$arity$2(o, meta)
  }else {
    var x__2314__auto____7323 = o == null ? null : o;
    return function() {
      var or__3943__auto____7324 = cljs.core._with_meta[goog.typeOf(x__2314__auto____7323)];
      if(or__3943__auto____7324) {
        return or__3943__auto____7324
      }else {
        var or__3943__auto____7325 = cljs.core._with_meta["_"];
        if(or__3943__auto____7325) {
          return or__3943__auto____7325
        }else {
          throw cljs.core.missing_protocol.call(null, "IWithMeta.-with-meta", o);
        }
      }
    }().call(null, o, meta)
  }
};
cljs.core.IReduce = {};
cljs.core._reduce = function() {
  var _reduce = null;
  var _reduce__2 = function(coll, f) {
    if(function() {
      var and__3941__auto____7334 = coll;
      if(and__3941__auto____7334) {
        return coll.cljs$core$IReduce$_reduce$arity$2
      }else {
        return and__3941__auto____7334
      }
    }()) {
      return coll.cljs$core$IReduce$_reduce$arity$2(coll, f)
    }else {
      var x__2314__auto____7335 = coll == null ? null : coll;
      return function() {
        var or__3943__auto____7336 = cljs.core._reduce[goog.typeOf(x__2314__auto____7335)];
        if(or__3943__auto____7336) {
          return or__3943__auto____7336
        }else {
          var or__3943__auto____7337 = cljs.core._reduce["_"];
          if(or__3943__auto____7337) {
            return or__3943__auto____7337
          }else {
            throw cljs.core.missing_protocol.call(null, "IReduce.-reduce", coll);
          }
        }
      }().call(null, coll, f)
    }
  };
  var _reduce__3 = function(coll, f, start) {
    if(function() {
      var and__3941__auto____7338 = coll;
      if(and__3941__auto____7338) {
        return coll.cljs$core$IReduce$_reduce$arity$3
      }else {
        return and__3941__auto____7338
      }
    }()) {
      return coll.cljs$core$IReduce$_reduce$arity$3(coll, f, start)
    }else {
      var x__2314__auto____7339 = coll == null ? null : coll;
      return function() {
        var or__3943__auto____7340 = cljs.core._reduce[goog.typeOf(x__2314__auto____7339)];
        if(or__3943__auto____7340) {
          return or__3943__auto____7340
        }else {
          var or__3943__auto____7341 = cljs.core._reduce["_"];
          if(or__3943__auto____7341) {
            return or__3943__auto____7341
          }else {
            throw cljs.core.missing_protocol.call(null, "IReduce.-reduce", coll);
          }
        }
      }().call(null, coll, f, start)
    }
  };
  _reduce = function(coll, f, start) {
    switch(arguments.length) {
      case 2:
        return _reduce__2.call(this, coll, f);
      case 3:
        return _reduce__3.call(this, coll, f, start)
    }
    throw"Invalid arity: " + arguments.length;
  };
  _reduce.cljs$lang$arity$2 = _reduce__2;
  _reduce.cljs$lang$arity$3 = _reduce__3;
  return _reduce
}();
cljs.core.IKVReduce = {};
cljs.core._kv_reduce = function _kv_reduce(coll, f, init) {
  if(function() {
    var and__3941__auto____7346 = coll;
    if(and__3941__auto____7346) {
      return coll.cljs$core$IKVReduce$_kv_reduce$arity$3
    }else {
      return and__3941__auto____7346
    }
  }()) {
    return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll, f, init)
  }else {
    var x__2314__auto____7347 = coll == null ? null : coll;
    return function() {
      var or__3943__auto____7348 = cljs.core._kv_reduce[goog.typeOf(x__2314__auto____7347)];
      if(or__3943__auto____7348) {
        return or__3943__auto____7348
      }else {
        var or__3943__auto____7349 = cljs.core._kv_reduce["_"];
        if(or__3943__auto____7349) {
          return or__3943__auto____7349
        }else {
          throw cljs.core.missing_protocol.call(null, "IKVReduce.-kv-reduce", coll);
        }
      }
    }().call(null, coll, f, init)
  }
};
cljs.core.IEquiv = {};
cljs.core._equiv = function _equiv(o, other) {
  if(function() {
    var and__3941__auto____7354 = o;
    if(and__3941__auto____7354) {
      return o.cljs$core$IEquiv$_equiv$arity$2
    }else {
      return and__3941__auto____7354
    }
  }()) {
    return o.cljs$core$IEquiv$_equiv$arity$2(o, other)
  }else {
    var x__2314__auto____7355 = o == null ? null : o;
    return function() {
      var or__3943__auto____7356 = cljs.core._equiv[goog.typeOf(x__2314__auto____7355)];
      if(or__3943__auto____7356) {
        return or__3943__auto____7356
      }else {
        var or__3943__auto____7357 = cljs.core._equiv["_"];
        if(or__3943__auto____7357) {
          return or__3943__auto____7357
        }else {
          throw cljs.core.missing_protocol.call(null, "IEquiv.-equiv", o);
        }
      }
    }().call(null, o, other)
  }
};
cljs.core.IHash = {};
cljs.core._hash = function _hash(o) {
  if(function() {
    var and__3941__auto____7362 = o;
    if(and__3941__auto____7362) {
      return o.cljs$core$IHash$_hash$arity$1
    }else {
      return and__3941__auto____7362
    }
  }()) {
    return o.cljs$core$IHash$_hash$arity$1(o)
  }else {
    var x__2314__auto____7363 = o == null ? null : o;
    return function() {
      var or__3943__auto____7364 = cljs.core._hash[goog.typeOf(x__2314__auto____7363)];
      if(or__3943__auto____7364) {
        return or__3943__auto____7364
      }else {
        var or__3943__auto____7365 = cljs.core._hash["_"];
        if(or__3943__auto____7365) {
          return or__3943__auto____7365
        }else {
          throw cljs.core.missing_protocol.call(null, "IHash.-hash", o);
        }
      }
    }().call(null, o)
  }
};
cljs.core.ISeqable = {};
cljs.core._seq = function _seq(o) {
  if(function() {
    var and__3941__auto____7370 = o;
    if(and__3941__auto____7370) {
      return o.cljs$core$ISeqable$_seq$arity$1
    }else {
      return and__3941__auto____7370
    }
  }()) {
    return o.cljs$core$ISeqable$_seq$arity$1(o)
  }else {
    var x__2314__auto____7371 = o == null ? null : o;
    return function() {
      var or__3943__auto____7372 = cljs.core._seq[goog.typeOf(x__2314__auto____7371)];
      if(or__3943__auto____7372) {
        return or__3943__auto____7372
      }else {
        var or__3943__auto____7373 = cljs.core._seq["_"];
        if(or__3943__auto____7373) {
          return or__3943__auto____7373
        }else {
          throw cljs.core.missing_protocol.call(null, "ISeqable.-seq", o);
        }
      }
    }().call(null, o)
  }
};
cljs.core.ISequential = {};
cljs.core.IList = {};
cljs.core.IRecord = {};
cljs.core.IReversible = {};
cljs.core._rseq = function _rseq(coll) {
  if(function() {
    var and__3941__auto____7378 = coll;
    if(and__3941__auto____7378) {
      return coll.cljs$core$IReversible$_rseq$arity$1
    }else {
      return and__3941__auto____7378
    }
  }()) {
    return coll.cljs$core$IReversible$_rseq$arity$1(coll)
  }else {
    var x__2314__auto____7379 = coll == null ? null : coll;
    return function() {
      var or__3943__auto____7380 = cljs.core._rseq[goog.typeOf(x__2314__auto____7379)];
      if(or__3943__auto____7380) {
        return or__3943__auto____7380
      }else {
        var or__3943__auto____7381 = cljs.core._rseq["_"];
        if(or__3943__auto____7381) {
          return or__3943__auto____7381
        }else {
          throw cljs.core.missing_protocol.call(null, "IReversible.-rseq", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.ISorted = {};
cljs.core._sorted_seq = function _sorted_seq(coll, ascending_QMARK_) {
  if(function() {
    var and__3941__auto____7386 = coll;
    if(and__3941__auto____7386) {
      return coll.cljs$core$ISorted$_sorted_seq$arity$2
    }else {
      return and__3941__auto____7386
    }
  }()) {
    return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll, ascending_QMARK_)
  }else {
    var x__2314__auto____7387 = coll == null ? null : coll;
    return function() {
      var or__3943__auto____7388 = cljs.core._sorted_seq[goog.typeOf(x__2314__auto____7387)];
      if(or__3943__auto____7388) {
        return or__3943__auto____7388
      }else {
        var or__3943__auto____7389 = cljs.core._sorted_seq["_"];
        if(or__3943__auto____7389) {
          return or__3943__auto____7389
        }else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-sorted-seq", coll);
        }
      }
    }().call(null, coll, ascending_QMARK_)
  }
};
cljs.core._sorted_seq_from = function _sorted_seq_from(coll, k, ascending_QMARK_) {
  if(function() {
    var and__3941__auto____7394 = coll;
    if(and__3941__auto____7394) {
      return coll.cljs$core$ISorted$_sorted_seq_from$arity$3
    }else {
      return and__3941__auto____7394
    }
  }()) {
    return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll, k, ascending_QMARK_)
  }else {
    var x__2314__auto____7395 = coll == null ? null : coll;
    return function() {
      var or__3943__auto____7396 = cljs.core._sorted_seq_from[goog.typeOf(x__2314__auto____7395)];
      if(or__3943__auto____7396) {
        return or__3943__auto____7396
      }else {
        var or__3943__auto____7397 = cljs.core._sorted_seq_from["_"];
        if(or__3943__auto____7397) {
          return or__3943__auto____7397
        }else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-sorted-seq-from", coll);
        }
      }
    }().call(null, coll, k, ascending_QMARK_)
  }
};
cljs.core._entry_key = function _entry_key(coll, entry) {
  if(function() {
    var and__3941__auto____7402 = coll;
    if(and__3941__auto____7402) {
      return coll.cljs$core$ISorted$_entry_key$arity$2
    }else {
      return and__3941__auto____7402
    }
  }()) {
    return coll.cljs$core$ISorted$_entry_key$arity$2(coll, entry)
  }else {
    var x__2314__auto____7403 = coll == null ? null : coll;
    return function() {
      var or__3943__auto____7404 = cljs.core._entry_key[goog.typeOf(x__2314__auto____7403)];
      if(or__3943__auto____7404) {
        return or__3943__auto____7404
      }else {
        var or__3943__auto____7405 = cljs.core._entry_key["_"];
        if(or__3943__auto____7405) {
          return or__3943__auto____7405
        }else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-entry-key", coll);
        }
      }
    }().call(null, coll, entry)
  }
};
cljs.core._comparator = function _comparator(coll) {
  if(function() {
    var and__3941__auto____7410 = coll;
    if(and__3941__auto____7410) {
      return coll.cljs$core$ISorted$_comparator$arity$1
    }else {
      return and__3941__auto____7410
    }
  }()) {
    return coll.cljs$core$ISorted$_comparator$arity$1(coll)
  }else {
    var x__2314__auto____7411 = coll == null ? null : coll;
    return function() {
      var or__3943__auto____7412 = cljs.core._comparator[goog.typeOf(x__2314__auto____7411)];
      if(or__3943__auto____7412) {
        return or__3943__auto____7412
      }else {
        var or__3943__auto____7413 = cljs.core._comparator["_"];
        if(or__3943__auto____7413) {
          return or__3943__auto____7413
        }else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-comparator", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.IPrintable = {};
cljs.core._pr_seq = function _pr_seq(o, opts) {
  if(function() {
    var and__3941__auto____7418 = o;
    if(and__3941__auto____7418) {
      return o.cljs$core$IPrintable$_pr_seq$arity$2
    }else {
      return and__3941__auto____7418
    }
  }()) {
    return o.cljs$core$IPrintable$_pr_seq$arity$2(o, opts)
  }else {
    var x__2314__auto____7419 = o == null ? null : o;
    return function() {
      var or__3943__auto____7420 = cljs.core._pr_seq[goog.typeOf(x__2314__auto____7419)];
      if(or__3943__auto____7420) {
        return or__3943__auto____7420
      }else {
        var or__3943__auto____7421 = cljs.core._pr_seq["_"];
        if(or__3943__auto____7421) {
          return or__3943__auto____7421
        }else {
          throw cljs.core.missing_protocol.call(null, "IPrintable.-pr-seq", o);
        }
      }
    }().call(null, o, opts)
  }
};
cljs.core.IPending = {};
cljs.core._realized_QMARK_ = function _realized_QMARK_(d) {
  if(function() {
    var and__3941__auto____7426 = d;
    if(and__3941__auto____7426) {
      return d.cljs$core$IPending$_realized_QMARK_$arity$1
    }else {
      return and__3941__auto____7426
    }
  }()) {
    return d.cljs$core$IPending$_realized_QMARK_$arity$1(d)
  }else {
    var x__2314__auto____7427 = d == null ? null : d;
    return function() {
      var or__3943__auto____7428 = cljs.core._realized_QMARK_[goog.typeOf(x__2314__auto____7427)];
      if(or__3943__auto____7428) {
        return or__3943__auto____7428
      }else {
        var or__3943__auto____7429 = cljs.core._realized_QMARK_["_"];
        if(or__3943__auto____7429) {
          return or__3943__auto____7429
        }else {
          throw cljs.core.missing_protocol.call(null, "IPending.-realized?", d);
        }
      }
    }().call(null, d)
  }
};
cljs.core.IWatchable = {};
cljs.core._notify_watches = function _notify_watches(this$, oldval, newval) {
  if(function() {
    var and__3941__auto____7434 = this$;
    if(and__3941__auto____7434) {
      return this$.cljs$core$IWatchable$_notify_watches$arity$3
    }else {
      return and__3941__auto____7434
    }
  }()) {
    return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$, oldval, newval)
  }else {
    var x__2314__auto____7435 = this$ == null ? null : this$;
    return function() {
      var or__3943__auto____7436 = cljs.core._notify_watches[goog.typeOf(x__2314__auto____7435)];
      if(or__3943__auto____7436) {
        return or__3943__auto____7436
      }else {
        var or__3943__auto____7437 = cljs.core._notify_watches["_"];
        if(or__3943__auto____7437) {
          return or__3943__auto____7437
        }else {
          throw cljs.core.missing_protocol.call(null, "IWatchable.-notify-watches", this$);
        }
      }
    }().call(null, this$, oldval, newval)
  }
};
cljs.core._add_watch = function _add_watch(this$, key, f) {
  if(function() {
    var and__3941__auto____7442 = this$;
    if(and__3941__auto____7442) {
      return this$.cljs$core$IWatchable$_add_watch$arity$3
    }else {
      return and__3941__auto____7442
    }
  }()) {
    return this$.cljs$core$IWatchable$_add_watch$arity$3(this$, key, f)
  }else {
    var x__2314__auto____7443 = this$ == null ? null : this$;
    return function() {
      var or__3943__auto____7444 = cljs.core._add_watch[goog.typeOf(x__2314__auto____7443)];
      if(or__3943__auto____7444) {
        return or__3943__auto____7444
      }else {
        var or__3943__auto____7445 = cljs.core._add_watch["_"];
        if(or__3943__auto____7445) {
          return or__3943__auto____7445
        }else {
          throw cljs.core.missing_protocol.call(null, "IWatchable.-add-watch", this$);
        }
      }
    }().call(null, this$, key, f)
  }
};
cljs.core._remove_watch = function _remove_watch(this$, key) {
  if(function() {
    var and__3941__auto____7450 = this$;
    if(and__3941__auto____7450) {
      return this$.cljs$core$IWatchable$_remove_watch$arity$2
    }else {
      return and__3941__auto____7450
    }
  }()) {
    return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$, key)
  }else {
    var x__2314__auto____7451 = this$ == null ? null : this$;
    return function() {
      var or__3943__auto____7452 = cljs.core._remove_watch[goog.typeOf(x__2314__auto____7451)];
      if(or__3943__auto____7452) {
        return or__3943__auto____7452
      }else {
        var or__3943__auto____7453 = cljs.core._remove_watch["_"];
        if(or__3943__auto____7453) {
          return or__3943__auto____7453
        }else {
          throw cljs.core.missing_protocol.call(null, "IWatchable.-remove-watch", this$);
        }
      }
    }().call(null, this$, key)
  }
};
cljs.core.IEditableCollection = {};
cljs.core._as_transient = function _as_transient(coll) {
  if(function() {
    var and__3941__auto____7458 = coll;
    if(and__3941__auto____7458) {
      return coll.cljs$core$IEditableCollection$_as_transient$arity$1
    }else {
      return and__3941__auto____7458
    }
  }()) {
    return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll)
  }else {
    var x__2314__auto____7459 = coll == null ? null : coll;
    return function() {
      var or__3943__auto____7460 = cljs.core._as_transient[goog.typeOf(x__2314__auto____7459)];
      if(or__3943__auto____7460) {
        return or__3943__auto____7460
      }else {
        var or__3943__auto____7461 = cljs.core._as_transient["_"];
        if(or__3943__auto____7461) {
          return or__3943__auto____7461
        }else {
          throw cljs.core.missing_protocol.call(null, "IEditableCollection.-as-transient", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.ITransientCollection = {};
cljs.core._conj_BANG_ = function _conj_BANG_(tcoll, val) {
  if(function() {
    var and__3941__auto____7466 = tcoll;
    if(and__3941__auto____7466) {
      return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2
    }else {
      return and__3941__auto____7466
    }
  }()) {
    return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll, val)
  }else {
    var x__2314__auto____7467 = tcoll == null ? null : tcoll;
    return function() {
      var or__3943__auto____7468 = cljs.core._conj_BANG_[goog.typeOf(x__2314__auto____7467)];
      if(or__3943__auto____7468) {
        return or__3943__auto____7468
      }else {
        var or__3943__auto____7469 = cljs.core._conj_BANG_["_"];
        if(or__3943__auto____7469) {
          return or__3943__auto____7469
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientCollection.-conj!", tcoll);
        }
      }
    }().call(null, tcoll, val)
  }
};
cljs.core._persistent_BANG_ = function _persistent_BANG_(tcoll) {
  if(function() {
    var and__3941__auto____7474 = tcoll;
    if(and__3941__auto____7474) {
      return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1
    }else {
      return and__3941__auto____7474
    }
  }()) {
    return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll)
  }else {
    var x__2314__auto____7475 = tcoll == null ? null : tcoll;
    return function() {
      var or__3943__auto____7476 = cljs.core._persistent_BANG_[goog.typeOf(x__2314__auto____7475)];
      if(or__3943__auto____7476) {
        return or__3943__auto____7476
      }else {
        var or__3943__auto____7477 = cljs.core._persistent_BANG_["_"];
        if(or__3943__auto____7477) {
          return or__3943__auto____7477
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientCollection.-persistent!", tcoll);
        }
      }
    }().call(null, tcoll)
  }
};
cljs.core.ITransientAssociative = {};
cljs.core._assoc_BANG_ = function _assoc_BANG_(tcoll, key, val) {
  if(function() {
    var and__3941__auto____7482 = tcoll;
    if(and__3941__auto____7482) {
      return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3
    }else {
      return and__3941__auto____7482
    }
  }()) {
    return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll, key, val)
  }else {
    var x__2314__auto____7483 = tcoll == null ? null : tcoll;
    return function() {
      var or__3943__auto____7484 = cljs.core._assoc_BANG_[goog.typeOf(x__2314__auto____7483)];
      if(or__3943__auto____7484) {
        return or__3943__auto____7484
      }else {
        var or__3943__auto____7485 = cljs.core._assoc_BANG_["_"];
        if(or__3943__auto____7485) {
          return or__3943__auto____7485
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientAssociative.-assoc!", tcoll);
        }
      }
    }().call(null, tcoll, key, val)
  }
};
cljs.core.ITransientMap = {};
cljs.core._dissoc_BANG_ = function _dissoc_BANG_(tcoll, key) {
  if(function() {
    var and__3941__auto____7490 = tcoll;
    if(and__3941__auto____7490) {
      return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2
    }else {
      return and__3941__auto____7490
    }
  }()) {
    return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll, key)
  }else {
    var x__2314__auto____7491 = tcoll == null ? null : tcoll;
    return function() {
      var or__3943__auto____7492 = cljs.core._dissoc_BANG_[goog.typeOf(x__2314__auto____7491)];
      if(or__3943__auto____7492) {
        return or__3943__auto____7492
      }else {
        var or__3943__auto____7493 = cljs.core._dissoc_BANG_["_"];
        if(or__3943__auto____7493) {
          return or__3943__auto____7493
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientMap.-dissoc!", tcoll);
        }
      }
    }().call(null, tcoll, key)
  }
};
cljs.core.ITransientVector = {};
cljs.core._assoc_n_BANG_ = function _assoc_n_BANG_(tcoll, n, val) {
  if(function() {
    var and__3941__auto____7498 = tcoll;
    if(and__3941__auto____7498) {
      return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3
    }else {
      return and__3941__auto____7498
    }
  }()) {
    return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll, n, val)
  }else {
    var x__2314__auto____7499 = tcoll == null ? null : tcoll;
    return function() {
      var or__3943__auto____7500 = cljs.core._assoc_n_BANG_[goog.typeOf(x__2314__auto____7499)];
      if(or__3943__auto____7500) {
        return or__3943__auto____7500
      }else {
        var or__3943__auto____7501 = cljs.core._assoc_n_BANG_["_"];
        if(or__3943__auto____7501) {
          return or__3943__auto____7501
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientVector.-assoc-n!", tcoll);
        }
      }
    }().call(null, tcoll, n, val)
  }
};
cljs.core._pop_BANG_ = function _pop_BANG_(tcoll) {
  if(function() {
    var and__3941__auto____7506 = tcoll;
    if(and__3941__auto____7506) {
      return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1
    }else {
      return and__3941__auto____7506
    }
  }()) {
    return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll)
  }else {
    var x__2314__auto____7507 = tcoll == null ? null : tcoll;
    return function() {
      var or__3943__auto____7508 = cljs.core._pop_BANG_[goog.typeOf(x__2314__auto____7507)];
      if(or__3943__auto____7508) {
        return or__3943__auto____7508
      }else {
        var or__3943__auto____7509 = cljs.core._pop_BANG_["_"];
        if(or__3943__auto____7509) {
          return or__3943__auto____7509
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientVector.-pop!", tcoll);
        }
      }
    }().call(null, tcoll)
  }
};
cljs.core.ITransientSet = {};
cljs.core._disjoin_BANG_ = function _disjoin_BANG_(tcoll, v) {
  if(function() {
    var and__3941__auto____7514 = tcoll;
    if(and__3941__auto____7514) {
      return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2
    }else {
      return and__3941__auto____7514
    }
  }()) {
    return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll, v)
  }else {
    var x__2314__auto____7515 = tcoll == null ? null : tcoll;
    return function() {
      var or__3943__auto____7516 = cljs.core._disjoin_BANG_[goog.typeOf(x__2314__auto____7515)];
      if(or__3943__auto____7516) {
        return or__3943__auto____7516
      }else {
        var or__3943__auto____7517 = cljs.core._disjoin_BANG_["_"];
        if(or__3943__auto____7517) {
          return or__3943__auto____7517
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientSet.-disjoin!", tcoll);
        }
      }
    }().call(null, tcoll, v)
  }
};
cljs.core.IComparable = {};
cljs.core._compare = function _compare(x, y) {
  if(function() {
    var and__3941__auto____7522 = x;
    if(and__3941__auto____7522) {
      return x.cljs$core$IComparable$_compare$arity$2
    }else {
      return and__3941__auto____7522
    }
  }()) {
    return x.cljs$core$IComparable$_compare$arity$2(x, y)
  }else {
    var x__2314__auto____7523 = x == null ? null : x;
    return function() {
      var or__3943__auto____7524 = cljs.core._compare[goog.typeOf(x__2314__auto____7523)];
      if(or__3943__auto____7524) {
        return or__3943__auto____7524
      }else {
        var or__3943__auto____7525 = cljs.core._compare["_"];
        if(or__3943__auto____7525) {
          return or__3943__auto____7525
        }else {
          throw cljs.core.missing_protocol.call(null, "IComparable.-compare", x);
        }
      }
    }().call(null, x, y)
  }
};
cljs.core.IChunk = {};
cljs.core._drop_first = function _drop_first(coll) {
  if(function() {
    var and__3941__auto____7530 = coll;
    if(and__3941__auto____7530) {
      return coll.cljs$core$IChunk$_drop_first$arity$1
    }else {
      return and__3941__auto____7530
    }
  }()) {
    return coll.cljs$core$IChunk$_drop_first$arity$1(coll)
  }else {
    var x__2314__auto____7531 = coll == null ? null : coll;
    return function() {
      var or__3943__auto____7532 = cljs.core._drop_first[goog.typeOf(x__2314__auto____7531)];
      if(or__3943__auto____7532) {
        return or__3943__auto____7532
      }else {
        var or__3943__auto____7533 = cljs.core._drop_first["_"];
        if(or__3943__auto____7533) {
          return or__3943__auto____7533
        }else {
          throw cljs.core.missing_protocol.call(null, "IChunk.-drop-first", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.IChunkedSeq = {};
cljs.core._chunked_first = function _chunked_first(coll) {
  if(function() {
    var and__3941__auto____7538 = coll;
    if(and__3941__auto____7538) {
      return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1
    }else {
      return and__3941__auto____7538
    }
  }()) {
    return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll)
  }else {
    var x__2314__auto____7539 = coll == null ? null : coll;
    return function() {
      var or__3943__auto____7540 = cljs.core._chunked_first[goog.typeOf(x__2314__auto____7539)];
      if(or__3943__auto____7540) {
        return or__3943__auto____7540
      }else {
        var or__3943__auto____7541 = cljs.core._chunked_first["_"];
        if(or__3943__auto____7541) {
          return or__3943__auto____7541
        }else {
          throw cljs.core.missing_protocol.call(null, "IChunkedSeq.-chunked-first", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core._chunked_rest = function _chunked_rest(coll) {
  if(function() {
    var and__3941__auto____7546 = coll;
    if(and__3941__auto____7546) {
      return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1
    }else {
      return and__3941__auto____7546
    }
  }()) {
    return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll)
  }else {
    var x__2314__auto____7547 = coll == null ? null : coll;
    return function() {
      var or__3943__auto____7548 = cljs.core._chunked_rest[goog.typeOf(x__2314__auto____7547)];
      if(or__3943__auto____7548) {
        return or__3943__auto____7548
      }else {
        var or__3943__auto____7549 = cljs.core._chunked_rest["_"];
        if(or__3943__auto____7549) {
          return or__3943__auto____7549
        }else {
          throw cljs.core.missing_protocol.call(null, "IChunkedSeq.-chunked-rest", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.IChunkedNext = {};
cljs.core._chunked_next = function _chunked_next(coll) {
  if(function() {
    var and__3941__auto____7554 = coll;
    if(and__3941__auto____7554) {
      return coll.cljs$core$IChunkedNext$_chunked_next$arity$1
    }else {
      return and__3941__auto____7554
    }
  }()) {
    return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll)
  }else {
    var x__2314__auto____7555 = coll == null ? null : coll;
    return function() {
      var or__3943__auto____7556 = cljs.core._chunked_next[goog.typeOf(x__2314__auto____7555)];
      if(or__3943__auto____7556) {
        return or__3943__auto____7556
      }else {
        var or__3943__auto____7557 = cljs.core._chunked_next["_"];
        if(or__3943__auto____7557) {
          return or__3943__auto____7557
        }else {
          throw cljs.core.missing_protocol.call(null, "IChunkedNext.-chunked-next", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.identical_QMARK_ = function identical_QMARK_(x, y) {
  return x === y
};
cljs.core._EQ_ = function() {
  var _EQ_ = null;
  var _EQ___1 = function(x) {
    return true
  };
  var _EQ___2 = function(x, y) {
    var or__3943__auto____7559 = x === y;
    if(or__3943__auto____7559) {
      return or__3943__auto____7559
    }else {
      return cljs.core._equiv.call(null, x, y)
    }
  };
  var _EQ___3 = function() {
    var G__7560__delegate = function(x, y, more) {
      while(true) {
        if(cljs.core.truth_(_EQ_.call(null, x, y))) {
          if(cljs.core.next.call(null, more)) {
            var G__7561 = y;
            var G__7562 = cljs.core.first.call(null, more);
            var G__7563 = cljs.core.next.call(null, more);
            x = G__7561;
            y = G__7562;
            more = G__7563;
            continue
          }else {
            return _EQ_.call(null, y, cljs.core.first.call(null, more))
          }
        }else {
          return false
        }
        break
      }
    };
    var G__7560 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__7560__delegate.call(this, x, y, more)
    };
    G__7560.cljs$lang$maxFixedArity = 2;
    G__7560.cljs$lang$applyTo = function(arglist__7564) {
      var x = cljs.core.first(arglist__7564);
      var y = cljs.core.first(cljs.core.next(arglist__7564));
      var more = cljs.core.rest(cljs.core.next(arglist__7564));
      return G__7560__delegate(x, y, more)
    };
    G__7560.cljs$lang$arity$variadic = G__7560__delegate;
    return G__7560
  }();
  _EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _EQ___1.call(this, x);
      case 2:
        return _EQ___2.call(this, x, y);
      default:
        return _EQ___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _EQ_.cljs$lang$maxFixedArity = 2;
  _EQ_.cljs$lang$applyTo = _EQ___3.cljs$lang$applyTo;
  _EQ_.cljs$lang$arity$1 = _EQ___1;
  _EQ_.cljs$lang$arity$2 = _EQ___2;
  _EQ_.cljs$lang$arity$variadic = _EQ___3.cljs$lang$arity$variadic;
  return _EQ_
}();
cljs.core.nil_QMARK_ = function nil_QMARK_(x) {
  return x == null
};
cljs.core.type = function type(x) {
  if(x == null) {
    return null
  }else {
    return x.constructor
  }
};
cljs.core.instance_QMARK_ = function instance_QMARK_(t, o) {
  return o instanceof t
};
cljs.core.IHash["null"] = true;
cljs.core._hash["null"] = function(o) {
  return 0
};
cljs.core.ILookup["null"] = true;
cljs.core._lookup["null"] = function() {
  var G__7565 = null;
  var G__7565__2 = function(o, k) {
    return null
  };
  var G__7565__3 = function(o, k, not_found) {
    return not_found
  };
  G__7565 = function(o, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__7565__2.call(this, o, k);
      case 3:
        return G__7565__3.call(this, o, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__7565
}();
cljs.core.IAssociative["null"] = true;
cljs.core._assoc["null"] = function(_, k, v) {
  return cljs.core.hash_map.call(null, k, v)
};
cljs.core.INext["null"] = true;
cljs.core._next["null"] = function(_) {
  return null
};
cljs.core.ICollection["null"] = true;
cljs.core._conj["null"] = function(_, o) {
  return cljs.core.list.call(null, o)
};
cljs.core.IReduce["null"] = true;
cljs.core._reduce["null"] = function() {
  var G__7566 = null;
  var G__7566__2 = function(_, f) {
    return f.call(null)
  };
  var G__7566__3 = function(_, f, start) {
    return start
  };
  G__7566 = function(_, f, start) {
    switch(arguments.length) {
      case 2:
        return G__7566__2.call(this, _, f);
      case 3:
        return G__7566__3.call(this, _, f, start)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__7566
}();
cljs.core.IPrintable["null"] = true;
cljs.core._pr_seq["null"] = function(o) {
  return cljs.core.list.call(null, "nil")
};
cljs.core.ISet["null"] = true;
cljs.core._disjoin["null"] = function(_, v) {
  return null
};
cljs.core.ICounted["null"] = true;
cljs.core._count["null"] = function(_) {
  return 0
};
cljs.core.IStack["null"] = true;
cljs.core._peek["null"] = function(_) {
  return null
};
cljs.core._pop["null"] = function(_) {
  return null
};
cljs.core.ISeq["null"] = true;
cljs.core._first["null"] = function(_) {
  return null
};
cljs.core._rest["null"] = function(_) {
  return cljs.core.list.call(null)
};
cljs.core.IEquiv["null"] = true;
cljs.core._equiv["null"] = function(_, o) {
  return o == null
};
cljs.core.IWithMeta["null"] = true;
cljs.core._with_meta["null"] = function(_, meta) {
  return null
};
cljs.core.IMeta["null"] = true;
cljs.core._meta["null"] = function(_) {
  return null
};
cljs.core.IIndexed["null"] = true;
cljs.core._nth["null"] = function() {
  var G__7567 = null;
  var G__7567__2 = function(_, n) {
    return null
  };
  var G__7567__3 = function(_, n, not_found) {
    return not_found
  };
  G__7567 = function(_, n, not_found) {
    switch(arguments.length) {
      case 2:
        return G__7567__2.call(this, _, n);
      case 3:
        return G__7567__3.call(this, _, n, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__7567
}();
cljs.core.IEmptyableCollection["null"] = true;
cljs.core._empty["null"] = function(_) {
  return null
};
cljs.core.IMap["null"] = true;
cljs.core._dissoc["null"] = function(_, k) {
  return null
};
Date.prototype.cljs$core$IEquiv$ = true;
Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var and__3941__auto____7568 = cljs.core.instance_QMARK_.call(null, Date, other);
  if(and__3941__auto____7568) {
    return o.toString() === other.toString()
  }else {
    return and__3941__auto____7568
  }
};
cljs.core.IHash["number"] = true;
cljs.core._hash["number"] = function(o) {
  return o
};
cljs.core.IEquiv["number"] = true;
cljs.core._equiv["number"] = function(x, o) {
  return x === o
};
cljs.core.IHash["boolean"] = true;
cljs.core._hash["boolean"] = function(o) {
  if(o === true) {
    return 1
  }else {
    return 0
  }
};
cljs.core.IHash["_"] = true;
cljs.core._hash["_"] = function(o) {
  return goog.getUid(o)
};
cljs.core.inc = function inc(x) {
  return x + 1
};
cljs.core.ci_reduce = function() {
  var ci_reduce = null;
  var ci_reduce__2 = function(cicoll, f) {
    var cnt__7581 = cljs.core._count.call(null, cicoll);
    if(cnt__7581 === 0) {
      return f.call(null)
    }else {
      var val__7582 = cljs.core._nth.call(null, cicoll, 0);
      var n__7583 = 1;
      while(true) {
        if(n__7583 < cnt__7581) {
          var nval__7584 = f.call(null, val__7582, cljs.core._nth.call(null, cicoll, n__7583));
          if(cljs.core.reduced_QMARK_.call(null, nval__7584)) {
            return cljs.core.deref.call(null, nval__7584)
          }else {
            var G__7593 = nval__7584;
            var G__7594 = n__7583 + 1;
            val__7582 = G__7593;
            n__7583 = G__7594;
            continue
          }
        }else {
          return val__7582
        }
        break
      }
    }
  };
  var ci_reduce__3 = function(cicoll, f, val) {
    var cnt__7585 = cljs.core._count.call(null, cicoll);
    var val__7586 = val;
    var n__7587 = 0;
    while(true) {
      if(n__7587 < cnt__7585) {
        var nval__7588 = f.call(null, val__7586, cljs.core._nth.call(null, cicoll, n__7587));
        if(cljs.core.reduced_QMARK_.call(null, nval__7588)) {
          return cljs.core.deref.call(null, nval__7588)
        }else {
          var G__7595 = nval__7588;
          var G__7596 = n__7587 + 1;
          val__7586 = G__7595;
          n__7587 = G__7596;
          continue
        }
      }else {
        return val__7586
      }
      break
    }
  };
  var ci_reduce__4 = function(cicoll, f, val, idx) {
    var cnt__7589 = cljs.core._count.call(null, cicoll);
    var val__7590 = val;
    var n__7591 = idx;
    while(true) {
      if(n__7591 < cnt__7589) {
        var nval__7592 = f.call(null, val__7590, cljs.core._nth.call(null, cicoll, n__7591));
        if(cljs.core.reduced_QMARK_.call(null, nval__7592)) {
          return cljs.core.deref.call(null, nval__7592)
        }else {
          var G__7597 = nval__7592;
          var G__7598 = n__7591 + 1;
          val__7590 = G__7597;
          n__7591 = G__7598;
          continue
        }
      }else {
        return val__7590
      }
      break
    }
  };
  ci_reduce = function(cicoll, f, val, idx) {
    switch(arguments.length) {
      case 2:
        return ci_reduce__2.call(this, cicoll, f);
      case 3:
        return ci_reduce__3.call(this, cicoll, f, val);
      case 4:
        return ci_reduce__4.call(this, cicoll, f, val, idx)
    }
    throw"Invalid arity: " + arguments.length;
  };
  ci_reduce.cljs$lang$arity$2 = ci_reduce__2;
  ci_reduce.cljs$lang$arity$3 = ci_reduce__3;
  ci_reduce.cljs$lang$arity$4 = ci_reduce__4;
  return ci_reduce
}();
cljs.core.array_reduce = function() {
  var array_reduce = null;
  var array_reduce__2 = function(arr, f) {
    var cnt__7611 = arr.length;
    if(arr.length === 0) {
      return f.call(null)
    }else {
      var val__7612 = arr[0];
      var n__7613 = 1;
      while(true) {
        if(n__7613 < cnt__7611) {
          var nval__7614 = f.call(null, val__7612, arr[n__7613]);
          if(cljs.core.reduced_QMARK_.call(null, nval__7614)) {
            return cljs.core.deref.call(null, nval__7614)
          }else {
            var G__7623 = nval__7614;
            var G__7624 = n__7613 + 1;
            val__7612 = G__7623;
            n__7613 = G__7624;
            continue
          }
        }else {
          return val__7612
        }
        break
      }
    }
  };
  var array_reduce__3 = function(arr, f, val) {
    var cnt__7615 = arr.length;
    var val__7616 = val;
    var n__7617 = 0;
    while(true) {
      if(n__7617 < cnt__7615) {
        var nval__7618 = f.call(null, val__7616, arr[n__7617]);
        if(cljs.core.reduced_QMARK_.call(null, nval__7618)) {
          return cljs.core.deref.call(null, nval__7618)
        }else {
          var G__7625 = nval__7618;
          var G__7626 = n__7617 + 1;
          val__7616 = G__7625;
          n__7617 = G__7626;
          continue
        }
      }else {
        return val__7616
      }
      break
    }
  };
  var array_reduce__4 = function(arr, f, val, idx) {
    var cnt__7619 = arr.length;
    var val__7620 = val;
    var n__7621 = idx;
    while(true) {
      if(n__7621 < cnt__7619) {
        var nval__7622 = f.call(null, val__7620, arr[n__7621]);
        if(cljs.core.reduced_QMARK_.call(null, nval__7622)) {
          return cljs.core.deref.call(null, nval__7622)
        }else {
          var G__7627 = nval__7622;
          var G__7628 = n__7621 + 1;
          val__7620 = G__7627;
          n__7621 = G__7628;
          continue
        }
      }else {
        return val__7620
      }
      break
    }
  };
  array_reduce = function(arr, f, val, idx) {
    switch(arguments.length) {
      case 2:
        return array_reduce__2.call(this, arr, f);
      case 3:
        return array_reduce__3.call(this, arr, f, val);
      case 4:
        return array_reduce__4.call(this, arr, f, val, idx)
    }
    throw"Invalid arity: " + arguments.length;
  };
  array_reduce.cljs$lang$arity$2 = array_reduce__2;
  array_reduce.cljs$lang$arity$3 = array_reduce__3;
  array_reduce.cljs$lang$arity$4 = array_reduce__4;
  return array_reduce
}();
cljs.core.IndexedSeq = function(a, i) {
  this.a = a;
  this.i = i;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 166199546
};
cljs.core.IndexedSeq.cljs$lang$type = true;
cljs.core.IndexedSeq.cljs$lang$ctorPrSeq = function(this__2260__auto__) {
  return cljs.core.list.call(null, "cljs.core/IndexedSeq")
};
cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__7629 = this;
  return cljs.core.hash_coll.call(null, coll)
};
cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = function(_) {
  var this__7630 = this;
  if(this__7630.i + 1 < this__7630.a.length) {
    return new cljs.core.IndexedSeq(this__7630.a, this__7630.i + 1)
  }else {
    return null
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__7631 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var this__7632 = this;
  var c__7633 = coll.cljs$core$ICounted$_count$arity$1(coll);
  if(c__7633 > 0) {
    return new cljs.core.RSeq(coll, c__7633 - 1, null)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.IndexedSeq.prototype.toString = function() {
  var this__7634 = this;
  var this__7635 = this;
  return cljs.core.pr_str.call(null, this__7635)
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var this__7636 = this;
  if(cljs.core.counted_QMARK_.call(null, this__7636.a)) {
    return cljs.core.ci_reduce.call(null, this__7636.a, f, this__7636.a[this__7636.i], this__7636.i + 1)
  }else {
    return cljs.core.ci_reduce.call(null, coll, f, this__7636.a[this__7636.i], 0)
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var this__7637 = this;
  if(cljs.core.counted_QMARK_.call(null, this__7637.a)) {
    return cljs.core.ci_reduce.call(null, this__7637.a, f, start, this__7637.i)
  }else {
    return cljs.core.ci_reduce.call(null, coll, f, start, 0)
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var this__7638 = this;
  return this$
};
cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var this__7639 = this;
  return this__7639.a.length - this__7639.i
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(_) {
  var this__7640 = this;
  return this__7640.a[this__7640.i]
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(_) {
  var this__7641 = this;
  if(this__7641.i + 1 < this__7641.a.length) {
    return new cljs.core.IndexedSeq(this__7641.a, this__7641.i + 1)
  }else {
    return cljs.core.list.call(null)
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__7642 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var this__7643 = this;
  var i__7644 = n + this__7643.i;
  if(i__7644 < this__7643.a.length) {
    return this__7643.a[i__7644]
  }else {
    return null
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var this__7645 = this;
  var i__7646 = n + this__7645.i;
  if(i__7646 < this__7645.a.length) {
    return this__7645.a[i__7646]
  }else {
    return not_found
  }
};
cljs.core.IndexedSeq;
cljs.core.prim_seq = function() {
  var prim_seq = null;
  var prim_seq__1 = function(prim) {
    return prim_seq.call(null, prim, 0)
  };
  var prim_seq__2 = function(prim, i) {
    if(prim.length === 0) {
      return null
    }else {
      return new cljs.core.IndexedSeq(prim, i)
    }
  };
  prim_seq = function(prim, i) {
    switch(arguments.length) {
      case 1:
        return prim_seq__1.call(this, prim);
      case 2:
        return prim_seq__2.call(this, prim, i)
    }
    throw"Invalid arity: " + arguments.length;
  };
  prim_seq.cljs$lang$arity$1 = prim_seq__1;
  prim_seq.cljs$lang$arity$2 = prim_seq__2;
  return prim_seq
}();
cljs.core.array_seq = function() {
  var array_seq = null;
  var array_seq__1 = function(array) {
    return cljs.core.prim_seq.call(null, array, 0)
  };
  var array_seq__2 = function(array, i) {
    return cljs.core.prim_seq.call(null, array, i)
  };
  array_seq = function(array, i) {
    switch(arguments.length) {
      case 1:
        return array_seq__1.call(this, array);
      case 2:
        return array_seq__2.call(this, array, i)
    }
    throw"Invalid arity: " + arguments.length;
  };
  array_seq.cljs$lang$arity$1 = array_seq__1;
  array_seq.cljs$lang$arity$2 = array_seq__2;
  return array_seq
}();
cljs.core.IReduce["array"] = true;
cljs.core._reduce["array"] = function() {
  var G__7647 = null;
  var G__7647__2 = function(array, f) {
    return cljs.core.ci_reduce.call(null, array, f)
  };
  var G__7647__3 = function(array, f, start) {
    return cljs.core.ci_reduce.call(null, array, f, start)
  };
  G__7647 = function(array, f, start) {
    switch(arguments.length) {
      case 2:
        return G__7647__2.call(this, array, f);
      case 3:
        return G__7647__3.call(this, array, f, start)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__7647
}();
cljs.core.ILookup["array"] = true;
cljs.core._lookup["array"] = function() {
  var G__7648 = null;
  var G__7648__2 = function(array, k) {
    return array[k]
  };
  var G__7648__3 = function(array, k, not_found) {
    return cljs.core._nth.call(null, array, k, not_found)
  };
  G__7648 = function(array, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__7648__2.call(this, array, k);
      case 3:
        return G__7648__3.call(this, array, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__7648
}();
cljs.core.IIndexed["array"] = true;
cljs.core._nth["array"] = function() {
  var G__7649 = null;
  var G__7649__2 = function(array, n) {
    if(n < array.length) {
      return array[n]
    }else {
      return null
    }
  };
  var G__7649__3 = function(array, n, not_found) {
    if(n < array.length) {
      return array[n]
    }else {
      return not_found
    }
  };
  G__7649 = function(array, n, not_found) {
    switch(arguments.length) {
      case 2:
        return G__7649__2.call(this, array, n);
      case 3:
        return G__7649__3.call(this, array, n, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__7649
}();
cljs.core.ICounted["array"] = true;
cljs.core._count["array"] = function(a) {
  return a.length
};
cljs.core.ISeqable["array"] = true;
cljs.core._seq["array"] = function(array) {
  return cljs.core.array_seq.call(null, array, 0)
};
cljs.core.RSeq = function(ci, i, meta) {
  this.ci = ci;
  this.i = i;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850570
};
cljs.core.RSeq.cljs$lang$type = true;
cljs.core.RSeq.cljs$lang$ctorPrSeq = function(this__2260__auto__) {
  return cljs.core.list.call(null, "cljs.core/RSeq")
};
cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__7650 = this;
  return cljs.core.hash_coll.call(null, coll)
};
cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__7651 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.RSeq.prototype.toString = function() {
  var this__7652 = this;
  var this__7653 = this;
  return cljs.core.pr_str.call(null, this__7653)
};
cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__7654 = this;
  return coll
};
cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__7655 = this;
  return this__7655.i + 1
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__7656 = this;
  return cljs.core._nth.call(null, this__7656.ci, this__7656.i)
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__7657 = this;
  if(this__7657.i > 0) {
    return new cljs.core.RSeq(this__7657.ci, this__7657.i - 1, null)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__7658 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var this__7659 = this;
  return new cljs.core.RSeq(this__7659.ci, this__7659.i, new_meta)
};
cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__7660 = this;
  return this__7660.meta
};
cljs.core.RSeq;
cljs.core.seq = function seq(coll) {
  if(coll == null) {
    return null
  }else {
    if(function() {
      var G__7664__7665 = coll;
      if(G__7664__7665) {
        if(function() {
          var or__3943__auto____7666 = G__7664__7665.cljs$lang$protocol_mask$partition0$ & 32;
          if(or__3943__auto____7666) {
            return or__3943__auto____7666
          }else {
            return G__7664__7665.cljs$core$ASeq$
          }
        }()) {
          return true
        }else {
          if(!G__7664__7665.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.ASeq, G__7664__7665)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.ASeq, G__7664__7665)
      }
    }()) {
      return coll
    }else {
      return cljs.core._seq.call(null, coll)
    }
  }
};
cljs.core.first = function first(coll) {
  if(coll == null) {
    return null
  }else {
    if(function() {
      var G__7671__7672 = coll;
      if(G__7671__7672) {
        if(function() {
          var or__3943__auto____7673 = G__7671__7672.cljs$lang$protocol_mask$partition0$ & 64;
          if(or__3943__auto____7673) {
            return or__3943__auto____7673
          }else {
            return G__7671__7672.cljs$core$ISeq$
          }
        }()) {
          return true
        }else {
          if(!G__7671__7672.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__7671__7672)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__7671__7672)
      }
    }()) {
      return cljs.core._first.call(null, coll)
    }else {
      var s__7674 = cljs.core.seq.call(null, coll);
      if(s__7674 == null) {
        return null
      }else {
        return cljs.core._first.call(null, s__7674)
      }
    }
  }
};
cljs.core.rest = function rest(coll) {
  if(!(coll == null)) {
    if(function() {
      var G__7679__7680 = coll;
      if(G__7679__7680) {
        if(function() {
          var or__3943__auto____7681 = G__7679__7680.cljs$lang$protocol_mask$partition0$ & 64;
          if(or__3943__auto____7681) {
            return or__3943__auto____7681
          }else {
            return G__7679__7680.cljs$core$ISeq$
          }
        }()) {
          return true
        }else {
          if(!G__7679__7680.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__7679__7680)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__7679__7680)
      }
    }()) {
      return cljs.core._rest.call(null, coll)
    }else {
      var s__7682 = cljs.core.seq.call(null, coll);
      if(!(s__7682 == null)) {
        return cljs.core._rest.call(null, s__7682)
      }else {
        return cljs.core.List.EMPTY
      }
    }
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.next = function next(coll) {
  if(coll == null) {
    return null
  }else {
    if(function() {
      var G__7686__7687 = coll;
      if(G__7686__7687) {
        if(function() {
          var or__3943__auto____7688 = G__7686__7687.cljs$lang$protocol_mask$partition0$ & 128;
          if(or__3943__auto____7688) {
            return or__3943__auto____7688
          }else {
            return G__7686__7687.cljs$core$INext$
          }
        }()) {
          return true
        }else {
          if(!G__7686__7687.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.INext, G__7686__7687)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.INext, G__7686__7687)
      }
    }()) {
      return cljs.core._next.call(null, coll)
    }else {
      return cljs.core.seq.call(null, cljs.core.rest.call(null, coll))
    }
  }
};
cljs.core.second = function second(coll) {
  return cljs.core.first.call(null, cljs.core.next.call(null, coll))
};
cljs.core.ffirst = function ffirst(coll) {
  return cljs.core.first.call(null, cljs.core.first.call(null, coll))
};
cljs.core.nfirst = function nfirst(coll) {
  return cljs.core.next.call(null, cljs.core.first.call(null, coll))
};
cljs.core.fnext = function fnext(coll) {
  return cljs.core.first.call(null, cljs.core.next.call(null, coll))
};
cljs.core.nnext = function nnext(coll) {
  return cljs.core.next.call(null, cljs.core.next.call(null, coll))
};
cljs.core.last = function last(s) {
  while(true) {
    var sn__7690 = cljs.core.next.call(null, s);
    if(!(sn__7690 == null)) {
      var G__7691 = sn__7690;
      s = G__7691;
      continue
    }else {
      return cljs.core.first.call(null, s)
    }
    break
  }
};
cljs.core.IEquiv["_"] = true;
cljs.core._equiv["_"] = function(x, o) {
  return x === o
};
cljs.core.not = function not(x) {
  if(cljs.core.truth_(x)) {
    return false
  }else {
    return true
  }
};
cljs.core.conj = function() {
  var conj = null;
  var conj__2 = function(coll, x) {
    return cljs.core._conj.call(null, coll, x)
  };
  var conj__3 = function() {
    var G__7692__delegate = function(coll, x, xs) {
      while(true) {
        if(cljs.core.truth_(xs)) {
          var G__7693 = conj.call(null, coll, x);
          var G__7694 = cljs.core.first.call(null, xs);
          var G__7695 = cljs.core.next.call(null, xs);
          coll = G__7693;
          x = G__7694;
          xs = G__7695;
          continue
        }else {
          return conj.call(null, coll, x)
        }
        break
      }
    };
    var G__7692 = function(coll, x, var_args) {
      var xs = null;
      if(goog.isDef(var_args)) {
        xs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__7692__delegate.call(this, coll, x, xs)
    };
    G__7692.cljs$lang$maxFixedArity = 2;
    G__7692.cljs$lang$applyTo = function(arglist__7696) {
      var coll = cljs.core.first(arglist__7696);
      var x = cljs.core.first(cljs.core.next(arglist__7696));
      var xs = cljs.core.rest(cljs.core.next(arglist__7696));
      return G__7692__delegate(coll, x, xs)
    };
    G__7692.cljs$lang$arity$variadic = G__7692__delegate;
    return G__7692
  }();
  conj = function(coll, x, var_args) {
    var xs = var_args;
    switch(arguments.length) {
      case 2:
        return conj__2.call(this, coll, x);
      default:
        return conj__3.cljs$lang$arity$variadic(coll, x, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  conj.cljs$lang$maxFixedArity = 2;
  conj.cljs$lang$applyTo = conj__3.cljs$lang$applyTo;
  conj.cljs$lang$arity$2 = conj__2;
  conj.cljs$lang$arity$variadic = conj__3.cljs$lang$arity$variadic;
  return conj
}();
cljs.core.empty = function empty(coll) {
  return cljs.core._empty.call(null, coll)
};
cljs.core.accumulating_seq_count = function accumulating_seq_count(coll) {
  var s__7699 = cljs.core.seq.call(null, coll);
  var acc__7700 = 0;
  while(true) {
    if(cljs.core.counted_QMARK_.call(null, s__7699)) {
      return acc__7700 + cljs.core._count.call(null, s__7699)
    }else {
      var G__7701 = cljs.core.next.call(null, s__7699);
      var G__7702 = acc__7700 + 1;
      s__7699 = G__7701;
      acc__7700 = G__7702;
      continue
    }
    break
  }
};
cljs.core.count = function count(coll) {
  if(cljs.core.counted_QMARK_.call(null, coll)) {
    return cljs.core._count.call(null, coll)
  }else {
    return cljs.core.accumulating_seq_count.call(null, coll)
  }
};
cljs.core.linear_traversal_nth = function() {
  var linear_traversal_nth = null;
  var linear_traversal_nth__2 = function(coll, n) {
    if(coll == null) {
      throw new Error("Index out of bounds");
    }else {
      if(n === 0) {
        if(cljs.core.seq.call(null, coll)) {
          return cljs.core.first.call(null, coll)
        }else {
          throw new Error("Index out of bounds");
        }
      }else {
        if(cljs.core.indexed_QMARK_.call(null, coll)) {
          return cljs.core._nth.call(null, coll, n)
        }else {
          if(cljs.core.seq.call(null, coll)) {
            return linear_traversal_nth.call(null, cljs.core.next.call(null, coll), n - 1)
          }else {
            if("\ufdd0'else") {
              throw new Error("Index out of bounds");
            }else {
              return null
            }
          }
        }
      }
    }
  };
  var linear_traversal_nth__3 = function(coll, n, not_found) {
    if(coll == null) {
      return not_found
    }else {
      if(n === 0) {
        if(cljs.core.seq.call(null, coll)) {
          return cljs.core.first.call(null, coll)
        }else {
          return not_found
        }
      }else {
        if(cljs.core.indexed_QMARK_.call(null, coll)) {
          return cljs.core._nth.call(null, coll, n, not_found)
        }else {
          if(cljs.core.seq.call(null, coll)) {
            return linear_traversal_nth.call(null, cljs.core.next.call(null, coll), n - 1, not_found)
          }else {
            if("\ufdd0'else") {
              return not_found
            }else {
              return null
            }
          }
        }
      }
    }
  };
  linear_traversal_nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return linear_traversal_nth__2.call(this, coll, n);
      case 3:
        return linear_traversal_nth__3.call(this, coll, n, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  linear_traversal_nth.cljs$lang$arity$2 = linear_traversal_nth__2;
  linear_traversal_nth.cljs$lang$arity$3 = linear_traversal_nth__3;
  return linear_traversal_nth
}();
cljs.core.nth = function() {
  var nth = null;
  var nth__2 = function(coll, n) {
    if(coll == null) {
      return null
    }else {
      if(function() {
        var G__7709__7710 = coll;
        if(G__7709__7710) {
          if(function() {
            var or__3943__auto____7711 = G__7709__7710.cljs$lang$protocol_mask$partition0$ & 16;
            if(or__3943__auto____7711) {
              return or__3943__auto____7711
            }else {
              return G__7709__7710.cljs$core$IIndexed$
            }
          }()) {
            return true
          }else {
            if(!G__7709__7710.cljs$lang$protocol_mask$partition0$) {
              return cljs.core.type_satisfies_.call(null, cljs.core.IIndexed, G__7709__7710)
            }else {
              return false
            }
          }
        }else {
          return cljs.core.type_satisfies_.call(null, cljs.core.IIndexed, G__7709__7710)
        }
      }()) {
        return cljs.core._nth.call(null, coll, Math.floor(n))
      }else {
        return cljs.core.linear_traversal_nth.call(null, coll, Math.floor(n))
      }
    }
  };
  var nth__3 = function(coll, n, not_found) {
    if(!(coll == null)) {
      if(function() {
        var G__7712__7713 = coll;
        if(G__7712__7713) {
          if(function() {
            var or__3943__auto____7714 = G__7712__7713.cljs$lang$protocol_mask$partition0$ & 16;
            if(or__3943__auto____7714) {
              return or__3943__auto____7714
            }else {
              return G__7712__7713.cljs$core$IIndexed$
            }
          }()) {
            return true
          }else {
            if(!G__7712__7713.cljs$lang$protocol_mask$partition0$) {
              return cljs.core.type_satisfies_.call(null, cljs.core.IIndexed, G__7712__7713)
            }else {
              return false
            }
          }
        }else {
          return cljs.core.type_satisfies_.call(null, cljs.core.IIndexed, G__7712__7713)
        }
      }()) {
        return cljs.core._nth.call(null, coll, Math.floor(n), not_found)
      }else {
        return cljs.core.linear_traversal_nth.call(null, coll, Math.floor(n), not_found)
      }
    }else {
      return not_found
    }
  };
  nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return nth__2.call(this, coll, n);
      case 3:
        return nth__3.call(this, coll, n, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  nth.cljs$lang$arity$2 = nth__2;
  nth.cljs$lang$arity$3 = nth__3;
  return nth
}();
cljs.core.get = function() {
  var get = null;
  var get__2 = function(o, k) {
    return cljs.core._lookup.call(null, o, k)
  };
  var get__3 = function(o, k, not_found) {
    return cljs.core._lookup.call(null, o, k, not_found)
  };
  get = function(o, k, not_found) {
    switch(arguments.length) {
      case 2:
        return get__2.call(this, o, k);
      case 3:
        return get__3.call(this, o, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  get.cljs$lang$arity$2 = get__2;
  get.cljs$lang$arity$3 = get__3;
  return get
}();
cljs.core.assoc = function() {
  var assoc = null;
  var assoc__3 = function(coll, k, v) {
    return cljs.core._assoc.call(null, coll, k, v)
  };
  var assoc__4 = function() {
    var G__7717__delegate = function(coll, k, v, kvs) {
      while(true) {
        var ret__7716 = assoc.call(null, coll, k, v);
        if(cljs.core.truth_(kvs)) {
          var G__7718 = ret__7716;
          var G__7719 = cljs.core.first.call(null, kvs);
          var G__7720 = cljs.core.second.call(null, kvs);
          var G__7721 = cljs.core.nnext.call(null, kvs);
          coll = G__7718;
          k = G__7719;
          v = G__7720;
          kvs = G__7721;
          continue
        }else {
          return ret__7716
        }
        break
      }
    };
    var G__7717 = function(coll, k, v, var_args) {
      var kvs = null;
      if(goog.isDef(var_args)) {
        kvs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__7717__delegate.call(this, coll, k, v, kvs)
    };
    G__7717.cljs$lang$maxFixedArity = 3;
    G__7717.cljs$lang$applyTo = function(arglist__7722) {
      var coll = cljs.core.first(arglist__7722);
      var k = cljs.core.first(cljs.core.next(arglist__7722));
      var v = cljs.core.first(cljs.core.next(cljs.core.next(arglist__7722)));
      var kvs = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__7722)));
      return G__7717__delegate(coll, k, v, kvs)
    };
    G__7717.cljs$lang$arity$variadic = G__7717__delegate;
    return G__7717
  }();
  assoc = function(coll, k, v, var_args) {
    var kvs = var_args;
    switch(arguments.length) {
      case 3:
        return assoc__3.call(this, coll, k, v);
      default:
        return assoc__4.cljs$lang$arity$variadic(coll, k, v, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  assoc.cljs$lang$maxFixedArity = 3;
  assoc.cljs$lang$applyTo = assoc__4.cljs$lang$applyTo;
  assoc.cljs$lang$arity$3 = assoc__3;
  assoc.cljs$lang$arity$variadic = assoc__4.cljs$lang$arity$variadic;
  return assoc
}();
cljs.core.dissoc = function() {
  var dissoc = null;
  var dissoc__1 = function(coll) {
    return coll
  };
  var dissoc__2 = function(coll, k) {
    return cljs.core._dissoc.call(null, coll, k)
  };
  var dissoc__3 = function() {
    var G__7725__delegate = function(coll, k, ks) {
      while(true) {
        var ret__7724 = dissoc.call(null, coll, k);
        if(cljs.core.truth_(ks)) {
          var G__7726 = ret__7724;
          var G__7727 = cljs.core.first.call(null, ks);
          var G__7728 = cljs.core.next.call(null, ks);
          coll = G__7726;
          k = G__7727;
          ks = G__7728;
          continue
        }else {
          return ret__7724
        }
        break
      }
    };
    var G__7725 = function(coll, k, var_args) {
      var ks = null;
      if(goog.isDef(var_args)) {
        ks = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__7725__delegate.call(this, coll, k, ks)
    };
    G__7725.cljs$lang$maxFixedArity = 2;
    G__7725.cljs$lang$applyTo = function(arglist__7729) {
      var coll = cljs.core.first(arglist__7729);
      var k = cljs.core.first(cljs.core.next(arglist__7729));
      var ks = cljs.core.rest(cljs.core.next(arglist__7729));
      return G__7725__delegate(coll, k, ks)
    };
    G__7725.cljs$lang$arity$variadic = G__7725__delegate;
    return G__7725
  }();
  dissoc = function(coll, k, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 1:
        return dissoc__1.call(this, coll);
      case 2:
        return dissoc__2.call(this, coll, k);
      default:
        return dissoc__3.cljs$lang$arity$variadic(coll, k, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  dissoc.cljs$lang$maxFixedArity = 2;
  dissoc.cljs$lang$applyTo = dissoc__3.cljs$lang$applyTo;
  dissoc.cljs$lang$arity$1 = dissoc__1;
  dissoc.cljs$lang$arity$2 = dissoc__2;
  dissoc.cljs$lang$arity$variadic = dissoc__3.cljs$lang$arity$variadic;
  return dissoc
}();
cljs.core.with_meta = function with_meta(o, meta) {
  return cljs.core._with_meta.call(null, o, meta)
};
cljs.core.meta = function meta(o) {
  if(function() {
    var G__7733__7734 = o;
    if(G__7733__7734) {
      if(function() {
        var or__3943__auto____7735 = G__7733__7734.cljs$lang$protocol_mask$partition0$ & 131072;
        if(or__3943__auto____7735) {
          return or__3943__auto____7735
        }else {
          return G__7733__7734.cljs$core$IMeta$
        }
      }()) {
        return true
      }else {
        if(!G__7733__7734.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.IMeta, G__7733__7734)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.IMeta, G__7733__7734)
    }
  }()) {
    return cljs.core._meta.call(null, o)
  }else {
    return null
  }
};
cljs.core.peek = function peek(coll) {
  return cljs.core._peek.call(null, coll)
};
cljs.core.pop = function pop(coll) {
  return cljs.core._pop.call(null, coll)
};
cljs.core.disj = function() {
  var disj = null;
  var disj__1 = function(coll) {
    return coll
  };
  var disj__2 = function(coll, k) {
    return cljs.core._disjoin.call(null, coll, k)
  };
  var disj__3 = function() {
    var G__7738__delegate = function(coll, k, ks) {
      while(true) {
        var ret__7737 = disj.call(null, coll, k);
        if(cljs.core.truth_(ks)) {
          var G__7739 = ret__7737;
          var G__7740 = cljs.core.first.call(null, ks);
          var G__7741 = cljs.core.next.call(null, ks);
          coll = G__7739;
          k = G__7740;
          ks = G__7741;
          continue
        }else {
          return ret__7737
        }
        break
      }
    };
    var G__7738 = function(coll, k, var_args) {
      var ks = null;
      if(goog.isDef(var_args)) {
        ks = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__7738__delegate.call(this, coll, k, ks)
    };
    G__7738.cljs$lang$maxFixedArity = 2;
    G__7738.cljs$lang$applyTo = function(arglist__7742) {
      var coll = cljs.core.first(arglist__7742);
      var k = cljs.core.first(cljs.core.next(arglist__7742));
      var ks = cljs.core.rest(cljs.core.next(arglist__7742));
      return G__7738__delegate(coll, k, ks)
    };
    G__7738.cljs$lang$arity$variadic = G__7738__delegate;
    return G__7738
  }();
  disj = function(coll, k, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 1:
        return disj__1.call(this, coll);
      case 2:
        return disj__2.call(this, coll, k);
      default:
        return disj__3.cljs$lang$arity$variadic(coll, k, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  disj.cljs$lang$maxFixedArity = 2;
  disj.cljs$lang$applyTo = disj__3.cljs$lang$applyTo;
  disj.cljs$lang$arity$1 = disj__1;
  disj.cljs$lang$arity$2 = disj__2;
  disj.cljs$lang$arity$variadic = disj__3.cljs$lang$arity$variadic;
  return disj
}();
cljs.core.string_hash_cache = {};
cljs.core.string_hash_cache_count = 0;
cljs.core.add_to_string_hash_cache = function add_to_string_hash_cache(k) {
  var h__7744 = goog.string.hashCode(k);
  cljs.core.string_hash_cache[k] = h__7744;
  cljs.core.string_hash_cache_count = cljs.core.string_hash_cache_count + 1;
  return h__7744
};
cljs.core.check_string_hash_cache = function check_string_hash_cache(k) {
  if(cljs.core.string_hash_cache_count > 255) {
    cljs.core.string_hash_cache = {};
    cljs.core.string_hash_cache_count = 0
  }else {
  }
  var h__7746 = cljs.core.string_hash_cache[k];
  if(!(h__7746 == null)) {
    return h__7746
  }else {
    return cljs.core.add_to_string_hash_cache.call(null, k)
  }
};
cljs.core.hash = function() {
  var hash = null;
  var hash__1 = function(o) {
    return hash.call(null, o, true)
  };
  var hash__2 = function(o, check_cache) {
    if(function() {
      var and__3941__auto____7748 = goog.isString(o);
      if(and__3941__auto____7748) {
        return check_cache
      }else {
        return and__3941__auto____7748
      }
    }()) {
      return cljs.core.check_string_hash_cache.call(null, o)
    }else {
      return cljs.core._hash.call(null, o)
    }
  };
  hash = function(o, check_cache) {
    switch(arguments.length) {
      case 1:
        return hash__1.call(this, o);
      case 2:
        return hash__2.call(this, o, check_cache)
    }
    throw"Invalid arity: " + arguments.length;
  };
  hash.cljs$lang$arity$1 = hash__1;
  hash.cljs$lang$arity$2 = hash__2;
  return hash
}();
cljs.core.empty_QMARK_ = function empty_QMARK_(coll) {
  return cljs.core.not.call(null, cljs.core.seq.call(null, coll))
};
cljs.core.coll_QMARK_ = function coll_QMARK_(x) {
  if(x == null) {
    return false
  }else {
    var G__7752__7753 = x;
    if(G__7752__7753) {
      if(function() {
        var or__3943__auto____7754 = G__7752__7753.cljs$lang$protocol_mask$partition0$ & 8;
        if(or__3943__auto____7754) {
          return or__3943__auto____7754
        }else {
          return G__7752__7753.cljs$core$ICollection$
        }
      }()) {
        return true
      }else {
        if(!G__7752__7753.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.ICollection, G__7752__7753)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.ICollection, G__7752__7753)
    }
  }
};
cljs.core.set_QMARK_ = function set_QMARK_(x) {
  if(x == null) {
    return false
  }else {
    var G__7758__7759 = x;
    if(G__7758__7759) {
      if(function() {
        var or__3943__auto____7760 = G__7758__7759.cljs$lang$protocol_mask$partition0$ & 4096;
        if(or__3943__auto____7760) {
          return or__3943__auto____7760
        }else {
          return G__7758__7759.cljs$core$ISet$
        }
      }()) {
        return true
      }else {
        if(!G__7758__7759.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.ISet, G__7758__7759)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.ISet, G__7758__7759)
    }
  }
};
cljs.core.associative_QMARK_ = function associative_QMARK_(x) {
  var G__7764__7765 = x;
  if(G__7764__7765) {
    if(function() {
      var or__3943__auto____7766 = G__7764__7765.cljs$lang$protocol_mask$partition0$ & 512;
      if(or__3943__auto____7766) {
        return or__3943__auto____7766
      }else {
        return G__7764__7765.cljs$core$IAssociative$
      }
    }()) {
      return true
    }else {
      if(!G__7764__7765.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IAssociative, G__7764__7765)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IAssociative, G__7764__7765)
  }
};
cljs.core.sequential_QMARK_ = function sequential_QMARK_(x) {
  var G__7770__7771 = x;
  if(G__7770__7771) {
    if(function() {
      var or__3943__auto____7772 = G__7770__7771.cljs$lang$protocol_mask$partition0$ & 16777216;
      if(or__3943__auto____7772) {
        return or__3943__auto____7772
      }else {
        return G__7770__7771.cljs$core$ISequential$
      }
    }()) {
      return true
    }else {
      if(!G__7770__7771.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.ISequential, G__7770__7771)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.ISequential, G__7770__7771)
  }
};
cljs.core.counted_QMARK_ = function counted_QMARK_(x) {
  var G__7776__7777 = x;
  if(G__7776__7777) {
    if(function() {
      var or__3943__auto____7778 = G__7776__7777.cljs$lang$protocol_mask$partition0$ & 2;
      if(or__3943__auto____7778) {
        return or__3943__auto____7778
      }else {
        return G__7776__7777.cljs$core$ICounted$
      }
    }()) {
      return true
    }else {
      if(!G__7776__7777.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.ICounted, G__7776__7777)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.ICounted, G__7776__7777)
  }
};
cljs.core.indexed_QMARK_ = function indexed_QMARK_(x) {
  var G__7782__7783 = x;
  if(G__7782__7783) {
    if(function() {
      var or__3943__auto____7784 = G__7782__7783.cljs$lang$protocol_mask$partition0$ & 16;
      if(or__3943__auto____7784) {
        return or__3943__auto____7784
      }else {
        return G__7782__7783.cljs$core$IIndexed$
      }
    }()) {
      return true
    }else {
      if(!G__7782__7783.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IIndexed, G__7782__7783)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IIndexed, G__7782__7783)
  }
};
cljs.core.reduceable_QMARK_ = function reduceable_QMARK_(x) {
  var G__7788__7789 = x;
  if(G__7788__7789) {
    if(function() {
      var or__3943__auto____7790 = G__7788__7789.cljs$lang$protocol_mask$partition0$ & 524288;
      if(or__3943__auto____7790) {
        return or__3943__auto____7790
      }else {
        return G__7788__7789.cljs$core$IReduce$
      }
    }()) {
      return true
    }else {
      if(!G__7788__7789.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IReduce, G__7788__7789)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IReduce, G__7788__7789)
  }
};
cljs.core.map_QMARK_ = function map_QMARK_(x) {
  if(x == null) {
    return false
  }else {
    var G__7794__7795 = x;
    if(G__7794__7795) {
      if(function() {
        var or__3943__auto____7796 = G__7794__7795.cljs$lang$protocol_mask$partition0$ & 1024;
        if(or__3943__auto____7796) {
          return or__3943__auto____7796
        }else {
          return G__7794__7795.cljs$core$IMap$
        }
      }()) {
        return true
      }else {
        if(!G__7794__7795.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.IMap, G__7794__7795)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.IMap, G__7794__7795)
    }
  }
};
cljs.core.vector_QMARK_ = function vector_QMARK_(x) {
  var G__7800__7801 = x;
  if(G__7800__7801) {
    if(function() {
      var or__3943__auto____7802 = G__7800__7801.cljs$lang$protocol_mask$partition0$ & 16384;
      if(or__3943__auto____7802) {
        return or__3943__auto____7802
      }else {
        return G__7800__7801.cljs$core$IVector$
      }
    }()) {
      return true
    }else {
      if(!G__7800__7801.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IVector, G__7800__7801)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IVector, G__7800__7801)
  }
};
cljs.core.chunked_seq_QMARK_ = function chunked_seq_QMARK_(x) {
  var G__7806__7807 = x;
  if(G__7806__7807) {
    if(cljs.core.truth_(function() {
      var or__3943__auto____7808 = null;
      if(cljs.core.truth_(or__3943__auto____7808)) {
        return or__3943__auto____7808
      }else {
        return G__7806__7807.cljs$core$IChunkedSeq$
      }
    }())) {
      return true
    }else {
      if(!G__7806__7807.cljs$lang$protocol_mask$partition$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IChunkedSeq, G__7806__7807)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IChunkedSeq, G__7806__7807)
  }
};
cljs.core.js_obj = function() {
  var js_obj = null;
  var js_obj__0 = function() {
    return{}
  };
  var js_obj__1 = function() {
    var G__7809__delegate = function(keyvals) {
      return cljs.core.apply.call(null, goog.object.create, keyvals)
    };
    var G__7809 = function(var_args) {
      var keyvals = null;
      if(goog.isDef(var_args)) {
        keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
      }
      return G__7809__delegate.call(this, keyvals)
    };
    G__7809.cljs$lang$maxFixedArity = 0;
    G__7809.cljs$lang$applyTo = function(arglist__7810) {
      var keyvals = cljs.core.seq(arglist__7810);
      return G__7809__delegate(keyvals)
    };
    G__7809.cljs$lang$arity$variadic = G__7809__delegate;
    return G__7809
  }();
  js_obj = function(var_args) {
    var keyvals = var_args;
    switch(arguments.length) {
      case 0:
        return js_obj__0.call(this);
      default:
        return js_obj__1.cljs$lang$arity$variadic(cljs.core.array_seq(arguments, 0))
    }
    throw"Invalid arity: " + arguments.length;
  };
  js_obj.cljs$lang$maxFixedArity = 0;
  js_obj.cljs$lang$applyTo = js_obj__1.cljs$lang$applyTo;
  js_obj.cljs$lang$arity$0 = js_obj__0;
  js_obj.cljs$lang$arity$variadic = js_obj__1.cljs$lang$arity$variadic;
  return js_obj
}();
cljs.core.js_keys = function js_keys(obj) {
  var keys__7812 = [];
  goog.object.forEach(obj, function(val, key, obj) {
    return keys__7812.push(key)
  });
  return keys__7812
};
cljs.core.js_delete = function js_delete(obj, key) {
  return delete obj[key]
};
cljs.core.array_copy = function array_copy(from, i, to, j, len) {
  var i__7816 = i;
  var j__7817 = j;
  var len__7818 = len;
  while(true) {
    if(len__7818 === 0) {
      return to
    }else {
      to[j__7817] = from[i__7816];
      var G__7819 = i__7816 + 1;
      var G__7820 = j__7817 + 1;
      var G__7821 = len__7818 - 1;
      i__7816 = G__7819;
      j__7817 = G__7820;
      len__7818 = G__7821;
      continue
    }
    break
  }
};
cljs.core.array_copy_downward = function array_copy_downward(from, i, to, j, len) {
  var i__7825 = i + (len - 1);
  var j__7826 = j + (len - 1);
  var len__7827 = len;
  while(true) {
    if(len__7827 === 0) {
      return to
    }else {
      to[j__7826] = from[i__7825];
      var G__7828 = i__7825 - 1;
      var G__7829 = j__7826 - 1;
      var G__7830 = len__7827 - 1;
      i__7825 = G__7828;
      j__7826 = G__7829;
      len__7827 = G__7830;
      continue
    }
    break
  }
};
cljs.core.lookup_sentinel = {};
cljs.core.false_QMARK_ = function false_QMARK_(x) {
  return x === false
};
cljs.core.true_QMARK_ = function true_QMARK_(x) {
  return x === true
};
cljs.core.undefined_QMARK_ = function undefined_QMARK_(x) {
  return void 0 === x
};
cljs.core.seq_QMARK_ = function seq_QMARK_(s) {
  if(s == null) {
    return false
  }else {
    var G__7834__7835 = s;
    if(G__7834__7835) {
      if(function() {
        var or__3943__auto____7836 = G__7834__7835.cljs$lang$protocol_mask$partition0$ & 64;
        if(or__3943__auto____7836) {
          return or__3943__auto____7836
        }else {
          return G__7834__7835.cljs$core$ISeq$
        }
      }()) {
        return true
      }else {
        if(!G__7834__7835.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__7834__7835)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__7834__7835)
    }
  }
};
cljs.core.seqable_QMARK_ = function seqable_QMARK_(s) {
  var G__7840__7841 = s;
  if(G__7840__7841) {
    if(function() {
      var or__3943__auto____7842 = G__7840__7841.cljs$lang$protocol_mask$partition0$ & 8388608;
      if(or__3943__auto____7842) {
        return or__3943__auto____7842
      }else {
        return G__7840__7841.cljs$core$ISeqable$
      }
    }()) {
      return true
    }else {
      if(!G__7840__7841.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.ISeqable, G__7840__7841)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.ISeqable, G__7840__7841)
  }
};
cljs.core.boolean$ = function boolean$(x) {
  if(cljs.core.truth_(x)) {
    return true
  }else {
    return false
  }
};
cljs.core.string_QMARK_ = function string_QMARK_(x) {
  var and__3941__auto____7845 = goog.isString(x);
  if(and__3941__auto____7845) {
    return!function() {
      var or__3943__auto____7846 = x.charAt(0) === "\ufdd0";
      if(or__3943__auto____7846) {
        return or__3943__auto____7846
      }else {
        return x.charAt(0) === "\ufdd1"
      }
    }()
  }else {
    return and__3941__auto____7845
  }
};
cljs.core.keyword_QMARK_ = function keyword_QMARK_(x) {
  var and__3941__auto____7848 = goog.isString(x);
  if(and__3941__auto____7848) {
    return x.charAt(0) === "\ufdd0"
  }else {
    return and__3941__auto____7848
  }
};
cljs.core.symbol_QMARK_ = function symbol_QMARK_(x) {
  var and__3941__auto____7850 = goog.isString(x);
  if(and__3941__auto____7850) {
    return x.charAt(0) === "\ufdd1"
  }else {
    return and__3941__auto____7850
  }
};
cljs.core.number_QMARK_ = function number_QMARK_(n) {
  return goog.isNumber(n)
};
cljs.core.fn_QMARK_ = function fn_QMARK_(f) {
  return goog.isFunction(f)
};
cljs.core.ifn_QMARK_ = function ifn_QMARK_(f) {
  var or__3943__auto____7855 = cljs.core.fn_QMARK_.call(null, f);
  if(or__3943__auto____7855) {
    return or__3943__auto____7855
  }else {
    var G__7856__7857 = f;
    if(G__7856__7857) {
      if(function() {
        var or__3943__auto____7858 = G__7856__7857.cljs$lang$protocol_mask$partition0$ & 1;
        if(or__3943__auto____7858) {
          return or__3943__auto____7858
        }else {
          return G__7856__7857.cljs$core$IFn$
        }
      }()) {
        return true
      }else {
        if(!G__7856__7857.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.IFn, G__7856__7857)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.IFn, G__7856__7857)
    }
  }
};
cljs.core.integer_QMARK_ = function integer_QMARK_(n) {
  var and__3941__auto____7860 = cljs.core.number_QMARK_.call(null, n);
  if(and__3941__auto____7860) {
    return n == n.toFixed()
  }else {
    return and__3941__auto____7860
  }
};
cljs.core.contains_QMARK_ = function contains_QMARK_(coll, v) {
  if(cljs.core._lookup.call(null, coll, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return false
  }else {
    return true
  }
};
cljs.core.find = function find(coll, k) {
  if(cljs.core.truth_(function() {
    var and__3941__auto____7863 = coll;
    if(cljs.core.truth_(and__3941__auto____7863)) {
      var and__3941__auto____7864 = cljs.core.associative_QMARK_.call(null, coll);
      if(and__3941__auto____7864) {
        return cljs.core.contains_QMARK_.call(null, coll, k)
      }else {
        return and__3941__auto____7864
      }
    }else {
      return and__3941__auto____7863
    }
  }())) {
    return cljs.core.PersistentVector.fromArray([k, cljs.core._lookup.call(null, coll, k)], true)
  }else {
    return null
  }
};
cljs.core.distinct_QMARK_ = function() {
  var distinct_QMARK_ = null;
  var distinct_QMARK___1 = function(x) {
    return true
  };
  var distinct_QMARK___2 = function(x, y) {
    return!cljs.core._EQ_.call(null, x, y)
  };
  var distinct_QMARK___3 = function() {
    var G__7873__delegate = function(x, y, more) {
      if(!cljs.core._EQ_.call(null, x, y)) {
        var s__7869 = cljs.core.PersistentHashSet.fromArray([y, x]);
        var xs__7870 = more;
        while(true) {
          var x__7871 = cljs.core.first.call(null, xs__7870);
          var etc__7872 = cljs.core.next.call(null, xs__7870);
          if(cljs.core.truth_(xs__7870)) {
            if(cljs.core.contains_QMARK_.call(null, s__7869, x__7871)) {
              return false
            }else {
              var G__7874 = cljs.core.conj.call(null, s__7869, x__7871);
              var G__7875 = etc__7872;
              s__7869 = G__7874;
              xs__7870 = G__7875;
              continue
            }
          }else {
            return true
          }
          break
        }
      }else {
        return false
      }
    };
    var G__7873 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__7873__delegate.call(this, x, y, more)
    };
    G__7873.cljs$lang$maxFixedArity = 2;
    G__7873.cljs$lang$applyTo = function(arglist__7876) {
      var x = cljs.core.first(arglist__7876);
      var y = cljs.core.first(cljs.core.next(arglist__7876));
      var more = cljs.core.rest(cljs.core.next(arglist__7876));
      return G__7873__delegate(x, y, more)
    };
    G__7873.cljs$lang$arity$variadic = G__7873__delegate;
    return G__7873
  }();
  distinct_QMARK_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return distinct_QMARK___1.call(this, x);
      case 2:
        return distinct_QMARK___2.call(this, x, y);
      default:
        return distinct_QMARK___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  distinct_QMARK_.cljs$lang$maxFixedArity = 2;
  distinct_QMARK_.cljs$lang$applyTo = distinct_QMARK___3.cljs$lang$applyTo;
  distinct_QMARK_.cljs$lang$arity$1 = distinct_QMARK___1;
  distinct_QMARK_.cljs$lang$arity$2 = distinct_QMARK___2;
  distinct_QMARK_.cljs$lang$arity$variadic = distinct_QMARK___3.cljs$lang$arity$variadic;
  return distinct_QMARK_
}();
cljs.core.compare = function compare(x, y) {
  if(x === y) {
    return 0
  }else {
    if(x == null) {
      return-1
    }else {
      if(y == null) {
        return 1
      }else {
        if(cljs.core.type.call(null, x) === cljs.core.type.call(null, y)) {
          if(function() {
            var G__7880__7881 = x;
            if(G__7880__7881) {
              if(cljs.core.truth_(function() {
                var or__3943__auto____7882 = null;
                if(cljs.core.truth_(or__3943__auto____7882)) {
                  return or__3943__auto____7882
                }else {
                  return G__7880__7881.cljs$core$IComparable$
                }
              }())) {
                return true
              }else {
                if(!G__7880__7881.cljs$lang$protocol_mask$partition$) {
                  return cljs.core.type_satisfies_.call(null, cljs.core.IComparable, G__7880__7881)
                }else {
                  return false
                }
              }
            }else {
              return cljs.core.type_satisfies_.call(null, cljs.core.IComparable, G__7880__7881)
            }
          }()) {
            return cljs.core._compare.call(null, x, y)
          }else {
            return goog.array.defaultCompare(x, y)
          }
        }else {
          if("\ufdd0'else") {
            throw new Error("compare on non-nil objects of different types");
          }else {
            return null
          }
        }
      }
    }
  }
};
cljs.core.compare_indexed = function() {
  var compare_indexed = null;
  var compare_indexed__2 = function(xs, ys) {
    var xl__7887 = cljs.core.count.call(null, xs);
    var yl__7888 = cljs.core.count.call(null, ys);
    if(xl__7887 < yl__7888) {
      return-1
    }else {
      if(xl__7887 > yl__7888) {
        return 1
      }else {
        if("\ufdd0'else") {
          return compare_indexed.call(null, xs, ys, xl__7887, 0)
        }else {
          return null
        }
      }
    }
  };
  var compare_indexed__4 = function(xs, ys, len, n) {
    while(true) {
      var d__7889 = cljs.core.compare.call(null, cljs.core.nth.call(null, xs, n), cljs.core.nth.call(null, ys, n));
      if(function() {
        var and__3941__auto____7890 = d__7889 === 0;
        if(and__3941__auto____7890) {
          return n + 1 < len
        }else {
          return and__3941__auto____7890
        }
      }()) {
        var G__7891 = xs;
        var G__7892 = ys;
        var G__7893 = len;
        var G__7894 = n + 1;
        xs = G__7891;
        ys = G__7892;
        len = G__7893;
        n = G__7894;
        continue
      }else {
        return d__7889
      }
      break
    }
  };
  compare_indexed = function(xs, ys, len, n) {
    switch(arguments.length) {
      case 2:
        return compare_indexed__2.call(this, xs, ys);
      case 4:
        return compare_indexed__4.call(this, xs, ys, len, n)
    }
    throw"Invalid arity: " + arguments.length;
  };
  compare_indexed.cljs$lang$arity$2 = compare_indexed__2;
  compare_indexed.cljs$lang$arity$4 = compare_indexed__4;
  return compare_indexed
}();
cljs.core.fn__GT_comparator = function fn__GT_comparator(f) {
  if(cljs.core._EQ_.call(null, f, cljs.core.compare)) {
    return cljs.core.compare
  }else {
    return function(x, y) {
      var r__7896 = f.call(null, x, y);
      if(cljs.core.number_QMARK_.call(null, r__7896)) {
        return r__7896
      }else {
        if(cljs.core.truth_(r__7896)) {
          return-1
        }else {
          if(cljs.core.truth_(f.call(null, y, x))) {
            return 1
          }else {
            return 0
          }
        }
      }
    }
  }
};
cljs.core.sort = function() {
  var sort = null;
  var sort__1 = function(coll) {
    return sort.call(null, cljs.core.compare, coll)
  };
  var sort__2 = function(comp, coll) {
    if(cljs.core.seq.call(null, coll)) {
      var a__7898 = cljs.core.to_array.call(null, coll);
      goog.array.stableSort(a__7898, cljs.core.fn__GT_comparator.call(null, comp));
      return cljs.core.seq.call(null, a__7898)
    }else {
      return cljs.core.List.EMPTY
    }
  };
  sort = function(comp, coll) {
    switch(arguments.length) {
      case 1:
        return sort__1.call(this, comp);
      case 2:
        return sort__2.call(this, comp, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  sort.cljs$lang$arity$1 = sort__1;
  sort.cljs$lang$arity$2 = sort__2;
  return sort
}();
cljs.core.sort_by = function() {
  var sort_by = null;
  var sort_by__2 = function(keyfn, coll) {
    return sort_by.call(null, keyfn, cljs.core.compare, coll)
  };
  var sort_by__3 = function(keyfn, comp, coll) {
    return cljs.core.sort.call(null, function(x, y) {
      return cljs.core.fn__GT_comparator.call(null, comp).call(null, keyfn.call(null, x), keyfn.call(null, y))
    }, coll)
  };
  sort_by = function(keyfn, comp, coll) {
    switch(arguments.length) {
      case 2:
        return sort_by__2.call(this, keyfn, comp);
      case 3:
        return sort_by__3.call(this, keyfn, comp, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  sort_by.cljs$lang$arity$2 = sort_by__2;
  sort_by.cljs$lang$arity$3 = sort_by__3;
  return sort_by
}();
cljs.core.seq_reduce = function() {
  var seq_reduce = null;
  var seq_reduce__2 = function(f, coll) {
    var temp__4090__auto____7904 = cljs.core.seq.call(null, coll);
    if(temp__4090__auto____7904) {
      var s__7905 = temp__4090__auto____7904;
      return cljs.core.reduce.call(null, f, cljs.core.first.call(null, s__7905), cljs.core.next.call(null, s__7905))
    }else {
      return f.call(null)
    }
  };
  var seq_reduce__3 = function(f, val, coll) {
    var val__7906 = val;
    var coll__7907 = cljs.core.seq.call(null, coll);
    while(true) {
      if(coll__7907) {
        var nval__7908 = f.call(null, val__7906, cljs.core.first.call(null, coll__7907));
        if(cljs.core.reduced_QMARK_.call(null, nval__7908)) {
          return cljs.core.deref.call(null, nval__7908)
        }else {
          var G__7909 = nval__7908;
          var G__7910 = cljs.core.next.call(null, coll__7907);
          val__7906 = G__7909;
          coll__7907 = G__7910;
          continue
        }
      }else {
        return val__7906
      }
      break
    }
  };
  seq_reduce = function(f, val, coll) {
    switch(arguments.length) {
      case 2:
        return seq_reduce__2.call(this, f, val);
      case 3:
        return seq_reduce__3.call(this, f, val, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  seq_reduce.cljs$lang$arity$2 = seq_reduce__2;
  seq_reduce.cljs$lang$arity$3 = seq_reduce__3;
  return seq_reduce
}();
cljs.core.shuffle = function shuffle(coll) {
  var a__7912 = cljs.core.to_array.call(null, coll);
  goog.array.shuffle(a__7912);
  return cljs.core.vec.call(null, a__7912)
};
cljs.core.reduce = function() {
  var reduce = null;
  var reduce__2 = function(f, coll) {
    if(function() {
      var G__7919__7920 = coll;
      if(G__7919__7920) {
        if(function() {
          var or__3943__auto____7921 = G__7919__7920.cljs$lang$protocol_mask$partition0$ & 524288;
          if(or__3943__auto____7921) {
            return or__3943__auto____7921
          }else {
            return G__7919__7920.cljs$core$IReduce$
          }
        }()) {
          return true
        }else {
          if(!G__7919__7920.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.IReduce, G__7919__7920)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.IReduce, G__7919__7920)
      }
    }()) {
      return cljs.core._reduce.call(null, coll, f)
    }else {
      return cljs.core.seq_reduce.call(null, f, coll)
    }
  };
  var reduce__3 = function(f, val, coll) {
    if(function() {
      var G__7922__7923 = coll;
      if(G__7922__7923) {
        if(function() {
          var or__3943__auto____7924 = G__7922__7923.cljs$lang$protocol_mask$partition0$ & 524288;
          if(or__3943__auto____7924) {
            return or__3943__auto____7924
          }else {
            return G__7922__7923.cljs$core$IReduce$
          }
        }()) {
          return true
        }else {
          if(!G__7922__7923.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.IReduce, G__7922__7923)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.IReduce, G__7922__7923)
      }
    }()) {
      return cljs.core._reduce.call(null, coll, f, val)
    }else {
      return cljs.core.seq_reduce.call(null, f, val, coll)
    }
  };
  reduce = function(f, val, coll) {
    switch(arguments.length) {
      case 2:
        return reduce__2.call(this, f, val);
      case 3:
        return reduce__3.call(this, f, val, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  reduce.cljs$lang$arity$2 = reduce__2;
  reduce.cljs$lang$arity$3 = reduce__3;
  return reduce
}();
cljs.core.reduce_kv = function reduce_kv(f, init, coll) {
  return cljs.core._kv_reduce.call(null, coll, f, init)
};
cljs.core.Reduced = function(val) {
  this.val = val;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32768
};
cljs.core.Reduced.cljs$lang$type = true;
cljs.core.Reduced.cljs$lang$ctorPrSeq = function(this__2260__auto__) {
  return cljs.core.list.call(null, "cljs.core/Reduced")
};
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = function(o) {
  var this__7925 = this;
  return this__7925.val
};
cljs.core.Reduced;
cljs.core.reduced_QMARK_ = function reduced_QMARK_(r) {
  return cljs.core.instance_QMARK_.call(null, cljs.core.Reduced, r)
};
cljs.core.reduced = function reduced(x) {
  return new cljs.core.Reduced(x)
};
cljs.core._PLUS_ = function() {
  var _PLUS_ = null;
  var _PLUS___0 = function() {
    return 0
  };
  var _PLUS___1 = function(x) {
    return x
  };
  var _PLUS___2 = function(x, y) {
    return x + y
  };
  var _PLUS___3 = function() {
    var G__7926__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _PLUS_, x + y, more)
    };
    var G__7926 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__7926__delegate.call(this, x, y, more)
    };
    G__7926.cljs$lang$maxFixedArity = 2;
    G__7926.cljs$lang$applyTo = function(arglist__7927) {
      var x = cljs.core.first(arglist__7927);
      var y = cljs.core.first(cljs.core.next(arglist__7927));
      var more = cljs.core.rest(cljs.core.next(arglist__7927));
      return G__7926__delegate(x, y, more)
    };
    G__7926.cljs$lang$arity$variadic = G__7926__delegate;
    return G__7926
  }();
  _PLUS_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return _PLUS___0.call(this);
      case 1:
        return _PLUS___1.call(this, x);
      case 2:
        return _PLUS___2.call(this, x, y);
      default:
        return _PLUS___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _PLUS_.cljs$lang$maxFixedArity = 2;
  _PLUS_.cljs$lang$applyTo = _PLUS___3.cljs$lang$applyTo;
  _PLUS_.cljs$lang$arity$0 = _PLUS___0;
  _PLUS_.cljs$lang$arity$1 = _PLUS___1;
  _PLUS_.cljs$lang$arity$2 = _PLUS___2;
  _PLUS_.cljs$lang$arity$variadic = _PLUS___3.cljs$lang$arity$variadic;
  return _PLUS_
}();
cljs.core._ = function() {
  var _ = null;
  var ___1 = function(x) {
    return-x
  };
  var ___2 = function(x, y) {
    return x - y
  };
  var ___3 = function() {
    var G__7928__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _, x - y, more)
    };
    var G__7928 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__7928__delegate.call(this, x, y, more)
    };
    G__7928.cljs$lang$maxFixedArity = 2;
    G__7928.cljs$lang$applyTo = function(arglist__7929) {
      var x = cljs.core.first(arglist__7929);
      var y = cljs.core.first(cljs.core.next(arglist__7929));
      var more = cljs.core.rest(cljs.core.next(arglist__7929));
      return G__7928__delegate(x, y, more)
    };
    G__7928.cljs$lang$arity$variadic = G__7928__delegate;
    return G__7928
  }();
  _ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return ___1.call(this, x);
      case 2:
        return ___2.call(this, x, y);
      default:
        return ___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _.cljs$lang$maxFixedArity = 2;
  _.cljs$lang$applyTo = ___3.cljs$lang$applyTo;
  _.cljs$lang$arity$1 = ___1;
  _.cljs$lang$arity$2 = ___2;
  _.cljs$lang$arity$variadic = ___3.cljs$lang$arity$variadic;
  return _
}();
cljs.core._STAR_ = function() {
  var _STAR_ = null;
  var _STAR___0 = function() {
    return 1
  };
  var _STAR___1 = function(x) {
    return x
  };
  var _STAR___2 = function(x, y) {
    return x * y
  };
  var _STAR___3 = function() {
    var G__7930__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _STAR_, x * y, more)
    };
    var G__7930 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__7930__delegate.call(this, x, y, more)
    };
    G__7930.cljs$lang$maxFixedArity = 2;
    G__7930.cljs$lang$applyTo = function(arglist__7931) {
      var x = cljs.core.first(arglist__7931);
      var y = cljs.core.first(cljs.core.next(arglist__7931));
      var more = cljs.core.rest(cljs.core.next(arglist__7931));
      return G__7930__delegate(x, y, more)
    };
    G__7930.cljs$lang$arity$variadic = G__7930__delegate;
    return G__7930
  }();
  _STAR_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return _STAR___0.call(this);
      case 1:
        return _STAR___1.call(this, x);
      case 2:
        return _STAR___2.call(this, x, y);
      default:
        return _STAR___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _STAR_.cljs$lang$maxFixedArity = 2;
  _STAR_.cljs$lang$applyTo = _STAR___3.cljs$lang$applyTo;
  _STAR_.cljs$lang$arity$0 = _STAR___0;
  _STAR_.cljs$lang$arity$1 = _STAR___1;
  _STAR_.cljs$lang$arity$2 = _STAR___2;
  _STAR_.cljs$lang$arity$variadic = _STAR___3.cljs$lang$arity$variadic;
  return _STAR_
}();
cljs.core._SLASH_ = function() {
  var _SLASH_ = null;
  var _SLASH___1 = function(x) {
    return _SLASH_.call(null, 1, x)
  };
  var _SLASH___2 = function(x, y) {
    return x / y
  };
  var _SLASH___3 = function() {
    var G__7932__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _SLASH_, _SLASH_.call(null, x, y), more)
    };
    var G__7932 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__7932__delegate.call(this, x, y, more)
    };
    G__7932.cljs$lang$maxFixedArity = 2;
    G__7932.cljs$lang$applyTo = function(arglist__7933) {
      var x = cljs.core.first(arglist__7933);
      var y = cljs.core.first(cljs.core.next(arglist__7933));
      var more = cljs.core.rest(cljs.core.next(arglist__7933));
      return G__7932__delegate(x, y, more)
    };
    G__7932.cljs$lang$arity$variadic = G__7932__delegate;
    return G__7932
  }();
  _SLASH_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _SLASH___1.call(this, x);
      case 2:
        return _SLASH___2.call(this, x, y);
      default:
        return _SLASH___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _SLASH_.cljs$lang$maxFixedArity = 2;
  _SLASH_.cljs$lang$applyTo = _SLASH___3.cljs$lang$applyTo;
  _SLASH_.cljs$lang$arity$1 = _SLASH___1;
  _SLASH_.cljs$lang$arity$2 = _SLASH___2;
  _SLASH_.cljs$lang$arity$variadic = _SLASH___3.cljs$lang$arity$variadic;
  return _SLASH_
}();
cljs.core._LT_ = function() {
  var _LT_ = null;
  var _LT___1 = function(x) {
    return true
  };
  var _LT___2 = function(x, y) {
    return x < y
  };
  var _LT___3 = function() {
    var G__7934__delegate = function(x, y, more) {
      while(true) {
        if(x < y) {
          if(cljs.core.next.call(null, more)) {
            var G__7935 = y;
            var G__7936 = cljs.core.first.call(null, more);
            var G__7937 = cljs.core.next.call(null, more);
            x = G__7935;
            y = G__7936;
            more = G__7937;
            continue
          }else {
            return y < cljs.core.first.call(null, more)
          }
        }else {
          return false
        }
        break
      }
    };
    var G__7934 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__7934__delegate.call(this, x, y, more)
    };
    G__7934.cljs$lang$maxFixedArity = 2;
    G__7934.cljs$lang$applyTo = function(arglist__7938) {
      var x = cljs.core.first(arglist__7938);
      var y = cljs.core.first(cljs.core.next(arglist__7938));
      var more = cljs.core.rest(cljs.core.next(arglist__7938));
      return G__7934__delegate(x, y, more)
    };
    G__7934.cljs$lang$arity$variadic = G__7934__delegate;
    return G__7934
  }();
  _LT_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _LT___1.call(this, x);
      case 2:
        return _LT___2.call(this, x, y);
      default:
        return _LT___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _LT_.cljs$lang$maxFixedArity = 2;
  _LT_.cljs$lang$applyTo = _LT___3.cljs$lang$applyTo;
  _LT_.cljs$lang$arity$1 = _LT___1;
  _LT_.cljs$lang$arity$2 = _LT___2;
  _LT_.cljs$lang$arity$variadic = _LT___3.cljs$lang$arity$variadic;
  return _LT_
}();
cljs.core._LT__EQ_ = function() {
  var _LT__EQ_ = null;
  var _LT__EQ___1 = function(x) {
    return true
  };
  var _LT__EQ___2 = function(x, y) {
    return x <= y
  };
  var _LT__EQ___3 = function() {
    var G__7939__delegate = function(x, y, more) {
      while(true) {
        if(x <= y) {
          if(cljs.core.next.call(null, more)) {
            var G__7940 = y;
            var G__7941 = cljs.core.first.call(null, more);
            var G__7942 = cljs.core.next.call(null, more);
            x = G__7940;
            y = G__7941;
            more = G__7942;
            continue
          }else {
            return y <= cljs.core.first.call(null, more)
          }
        }else {
          return false
        }
        break
      }
    };
    var G__7939 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__7939__delegate.call(this, x, y, more)
    };
    G__7939.cljs$lang$maxFixedArity = 2;
    G__7939.cljs$lang$applyTo = function(arglist__7943) {
      var x = cljs.core.first(arglist__7943);
      var y = cljs.core.first(cljs.core.next(arglist__7943));
      var more = cljs.core.rest(cljs.core.next(arglist__7943));
      return G__7939__delegate(x, y, more)
    };
    G__7939.cljs$lang$arity$variadic = G__7939__delegate;
    return G__7939
  }();
  _LT__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _LT__EQ___1.call(this, x);
      case 2:
        return _LT__EQ___2.call(this, x, y);
      default:
        return _LT__EQ___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _LT__EQ_.cljs$lang$maxFixedArity = 2;
  _LT__EQ_.cljs$lang$applyTo = _LT__EQ___3.cljs$lang$applyTo;
  _LT__EQ_.cljs$lang$arity$1 = _LT__EQ___1;
  _LT__EQ_.cljs$lang$arity$2 = _LT__EQ___2;
  _LT__EQ_.cljs$lang$arity$variadic = _LT__EQ___3.cljs$lang$arity$variadic;
  return _LT__EQ_
}();
cljs.core._GT_ = function() {
  var _GT_ = null;
  var _GT___1 = function(x) {
    return true
  };
  var _GT___2 = function(x, y) {
    return x > y
  };
  var _GT___3 = function() {
    var G__7944__delegate = function(x, y, more) {
      while(true) {
        if(x > y) {
          if(cljs.core.next.call(null, more)) {
            var G__7945 = y;
            var G__7946 = cljs.core.first.call(null, more);
            var G__7947 = cljs.core.next.call(null, more);
            x = G__7945;
            y = G__7946;
            more = G__7947;
            continue
          }else {
            return y > cljs.core.first.call(null, more)
          }
        }else {
          return false
        }
        break
      }
    };
    var G__7944 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__7944__delegate.call(this, x, y, more)
    };
    G__7944.cljs$lang$maxFixedArity = 2;
    G__7944.cljs$lang$applyTo = function(arglist__7948) {
      var x = cljs.core.first(arglist__7948);
      var y = cljs.core.first(cljs.core.next(arglist__7948));
      var more = cljs.core.rest(cljs.core.next(arglist__7948));
      return G__7944__delegate(x, y, more)
    };
    G__7944.cljs$lang$arity$variadic = G__7944__delegate;
    return G__7944
  }();
  _GT_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _GT___1.call(this, x);
      case 2:
        return _GT___2.call(this, x, y);
      default:
        return _GT___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _GT_.cljs$lang$maxFixedArity = 2;
  _GT_.cljs$lang$applyTo = _GT___3.cljs$lang$applyTo;
  _GT_.cljs$lang$arity$1 = _GT___1;
  _GT_.cljs$lang$arity$2 = _GT___2;
  _GT_.cljs$lang$arity$variadic = _GT___3.cljs$lang$arity$variadic;
  return _GT_
}();
cljs.core._GT__EQ_ = function() {
  var _GT__EQ_ = null;
  var _GT__EQ___1 = function(x) {
    return true
  };
  var _GT__EQ___2 = function(x, y) {
    return x >= y
  };
  var _GT__EQ___3 = function() {
    var G__7949__delegate = function(x, y, more) {
      while(true) {
        if(x >= y) {
          if(cljs.core.next.call(null, more)) {
            var G__7950 = y;
            var G__7951 = cljs.core.first.call(null, more);
            var G__7952 = cljs.core.next.call(null, more);
            x = G__7950;
            y = G__7951;
            more = G__7952;
            continue
          }else {
            return y >= cljs.core.first.call(null, more)
          }
        }else {
          return false
        }
        break
      }
    };
    var G__7949 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__7949__delegate.call(this, x, y, more)
    };
    G__7949.cljs$lang$maxFixedArity = 2;
    G__7949.cljs$lang$applyTo = function(arglist__7953) {
      var x = cljs.core.first(arglist__7953);
      var y = cljs.core.first(cljs.core.next(arglist__7953));
      var more = cljs.core.rest(cljs.core.next(arglist__7953));
      return G__7949__delegate(x, y, more)
    };
    G__7949.cljs$lang$arity$variadic = G__7949__delegate;
    return G__7949
  }();
  _GT__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _GT__EQ___1.call(this, x);
      case 2:
        return _GT__EQ___2.call(this, x, y);
      default:
        return _GT__EQ___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _GT__EQ_.cljs$lang$maxFixedArity = 2;
  _GT__EQ_.cljs$lang$applyTo = _GT__EQ___3.cljs$lang$applyTo;
  _GT__EQ_.cljs$lang$arity$1 = _GT__EQ___1;
  _GT__EQ_.cljs$lang$arity$2 = _GT__EQ___2;
  _GT__EQ_.cljs$lang$arity$variadic = _GT__EQ___3.cljs$lang$arity$variadic;
  return _GT__EQ_
}();
cljs.core.dec = function dec(x) {
  return x - 1
};
cljs.core.max = function() {
  var max = null;
  var max__1 = function(x) {
    return x
  };
  var max__2 = function(x, y) {
    return x > y ? x : y
  };
  var max__3 = function() {
    var G__7954__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, max, x > y ? x : y, more)
    };
    var G__7954 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__7954__delegate.call(this, x, y, more)
    };
    G__7954.cljs$lang$maxFixedArity = 2;
    G__7954.cljs$lang$applyTo = function(arglist__7955) {
      var x = cljs.core.first(arglist__7955);
      var y = cljs.core.first(cljs.core.next(arglist__7955));
      var more = cljs.core.rest(cljs.core.next(arglist__7955));
      return G__7954__delegate(x, y, more)
    };
    G__7954.cljs$lang$arity$variadic = G__7954__delegate;
    return G__7954
  }();
  max = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return max__1.call(this, x);
      case 2:
        return max__2.call(this, x, y);
      default:
        return max__3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  max.cljs$lang$maxFixedArity = 2;
  max.cljs$lang$applyTo = max__3.cljs$lang$applyTo;
  max.cljs$lang$arity$1 = max__1;
  max.cljs$lang$arity$2 = max__2;
  max.cljs$lang$arity$variadic = max__3.cljs$lang$arity$variadic;
  return max
}();
cljs.core.min = function() {
  var min = null;
  var min__1 = function(x) {
    return x
  };
  var min__2 = function(x, y) {
    return x < y ? x : y
  };
  var min__3 = function() {
    var G__7956__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, min, x < y ? x : y, more)
    };
    var G__7956 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__7956__delegate.call(this, x, y, more)
    };
    G__7956.cljs$lang$maxFixedArity = 2;
    G__7956.cljs$lang$applyTo = function(arglist__7957) {
      var x = cljs.core.first(arglist__7957);
      var y = cljs.core.first(cljs.core.next(arglist__7957));
      var more = cljs.core.rest(cljs.core.next(arglist__7957));
      return G__7956__delegate(x, y, more)
    };
    G__7956.cljs$lang$arity$variadic = G__7956__delegate;
    return G__7956
  }();
  min = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return min__1.call(this, x);
      case 2:
        return min__2.call(this, x, y);
      default:
        return min__3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  min.cljs$lang$maxFixedArity = 2;
  min.cljs$lang$applyTo = min__3.cljs$lang$applyTo;
  min.cljs$lang$arity$1 = min__1;
  min.cljs$lang$arity$2 = min__2;
  min.cljs$lang$arity$variadic = min__3.cljs$lang$arity$variadic;
  return min
}();
cljs.core.fix = function fix(q) {
  if(q >= 0) {
    return Math.floor.call(null, q)
  }else {
    return Math.ceil.call(null, q)
  }
};
cljs.core.int$ = function int$(x) {
  return cljs.core.fix.call(null, x)
};
cljs.core.long$ = function long$(x) {
  return cljs.core.fix.call(null, x)
};
cljs.core.mod = function mod(n, d) {
  return n % d
};
cljs.core.quot = function quot(n, d) {
  var rem__7959 = n % d;
  return cljs.core.fix.call(null, (n - rem__7959) / d)
};
cljs.core.rem = function rem(n, d) {
  var q__7961 = cljs.core.quot.call(null, n, d);
  return n - d * q__7961
};
cljs.core.rand = function() {
  var rand = null;
  var rand__0 = function() {
    return Math.random.call(null)
  };
  var rand__1 = function(n) {
    return n * rand.call(null)
  };
  rand = function(n) {
    switch(arguments.length) {
      case 0:
        return rand__0.call(this);
      case 1:
        return rand__1.call(this, n)
    }
    throw"Invalid arity: " + arguments.length;
  };
  rand.cljs$lang$arity$0 = rand__0;
  rand.cljs$lang$arity$1 = rand__1;
  return rand
}();
cljs.core.rand_int = function rand_int(n) {
  return cljs.core.fix.call(null, cljs.core.rand.call(null, n))
};
cljs.core.bit_xor = function bit_xor(x, y) {
  return x ^ y
};
cljs.core.bit_and = function bit_and(x, y) {
  return x & y
};
cljs.core.bit_or = function bit_or(x, y) {
  return x | y
};
cljs.core.bit_and_not = function bit_and_not(x, y) {
  return x & ~y
};
cljs.core.bit_clear = function bit_clear(x, n) {
  return x & ~(1 << n)
};
cljs.core.bit_flip = function bit_flip(x, n) {
  return x ^ 1 << n
};
cljs.core.bit_not = function bit_not(x) {
  return~x
};
cljs.core.bit_set = function bit_set(x, n) {
  return x | 1 << n
};
cljs.core.bit_test = function bit_test(x, n) {
  return(x & 1 << n) != 0
};
cljs.core.bit_shift_left = function bit_shift_left(x, n) {
  return x << n
};
cljs.core.bit_shift_right = function bit_shift_right(x, n) {
  return x >> n
};
cljs.core.bit_shift_right_zero_fill = function bit_shift_right_zero_fill(x, n) {
  return x >>> n
};
cljs.core.bit_count = function bit_count(v) {
  var v__7964 = v - (v >> 1 & 1431655765);
  var v__7965 = (v__7964 & 858993459) + (v__7964 >> 2 & 858993459);
  return(v__7965 + (v__7965 >> 4) & 252645135) * 16843009 >> 24
};
cljs.core._EQ__EQ_ = function() {
  var _EQ__EQ_ = null;
  var _EQ__EQ___1 = function(x) {
    return true
  };
  var _EQ__EQ___2 = function(x, y) {
    return cljs.core._equiv.call(null, x, y)
  };
  var _EQ__EQ___3 = function() {
    var G__7966__delegate = function(x, y, more) {
      while(true) {
        if(cljs.core.truth_(_EQ__EQ_.call(null, x, y))) {
          if(cljs.core.next.call(null, more)) {
            var G__7967 = y;
            var G__7968 = cljs.core.first.call(null, more);
            var G__7969 = cljs.core.next.call(null, more);
            x = G__7967;
            y = G__7968;
            more = G__7969;
            continue
          }else {
            return _EQ__EQ_.call(null, y, cljs.core.first.call(null, more))
          }
        }else {
          return false
        }
        break
      }
    };
    var G__7966 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__7966__delegate.call(this, x, y, more)
    };
    G__7966.cljs$lang$maxFixedArity = 2;
    G__7966.cljs$lang$applyTo = function(arglist__7970) {
      var x = cljs.core.first(arglist__7970);
      var y = cljs.core.first(cljs.core.next(arglist__7970));
      var more = cljs.core.rest(cljs.core.next(arglist__7970));
      return G__7966__delegate(x, y, more)
    };
    G__7966.cljs$lang$arity$variadic = G__7966__delegate;
    return G__7966
  }();
  _EQ__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _EQ__EQ___1.call(this, x);
      case 2:
        return _EQ__EQ___2.call(this, x, y);
      default:
        return _EQ__EQ___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _EQ__EQ_.cljs$lang$maxFixedArity = 2;
  _EQ__EQ_.cljs$lang$applyTo = _EQ__EQ___3.cljs$lang$applyTo;
  _EQ__EQ_.cljs$lang$arity$1 = _EQ__EQ___1;
  _EQ__EQ_.cljs$lang$arity$2 = _EQ__EQ___2;
  _EQ__EQ_.cljs$lang$arity$variadic = _EQ__EQ___3.cljs$lang$arity$variadic;
  return _EQ__EQ_
}();
cljs.core.pos_QMARK_ = function pos_QMARK_(n) {
  return n > 0
};
cljs.core.zero_QMARK_ = function zero_QMARK_(n) {
  return n === 0
};
cljs.core.neg_QMARK_ = function neg_QMARK_(x) {
  return x < 0
};
cljs.core.nthnext = function nthnext(coll, n) {
  var n__7974 = n;
  var xs__7975 = cljs.core.seq.call(null, coll);
  while(true) {
    if(cljs.core.truth_(function() {
      var and__3941__auto____7976 = xs__7975;
      if(and__3941__auto____7976) {
        return n__7974 > 0
      }else {
        return and__3941__auto____7976
      }
    }())) {
      var G__7977 = n__7974 - 1;
      var G__7978 = cljs.core.next.call(null, xs__7975);
      n__7974 = G__7977;
      xs__7975 = G__7978;
      continue
    }else {
      return xs__7975
    }
    break
  }
};
cljs.core.str_STAR_ = function() {
  var str_STAR_ = null;
  var str_STAR___0 = function() {
    return""
  };
  var str_STAR___1 = function(x) {
    if(x == null) {
      return""
    }else {
      if("\ufdd0'else") {
        return x.toString()
      }else {
        return null
      }
    }
  };
  var str_STAR___2 = function() {
    var G__7979__delegate = function(x, ys) {
      return function(sb, more) {
        while(true) {
          if(cljs.core.truth_(more)) {
            var G__7980 = sb.append(str_STAR_.call(null, cljs.core.first.call(null, more)));
            var G__7981 = cljs.core.next.call(null, more);
            sb = G__7980;
            more = G__7981;
            continue
          }else {
            return str_STAR_.call(null, sb)
          }
          break
        }
      }.call(null, new goog.string.StringBuffer(str_STAR_.call(null, x)), ys)
    };
    var G__7979 = function(x, var_args) {
      var ys = null;
      if(goog.isDef(var_args)) {
        ys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
      }
      return G__7979__delegate.call(this, x, ys)
    };
    G__7979.cljs$lang$maxFixedArity = 1;
    G__7979.cljs$lang$applyTo = function(arglist__7982) {
      var x = cljs.core.first(arglist__7982);
      var ys = cljs.core.rest(arglist__7982);
      return G__7979__delegate(x, ys)
    };
    G__7979.cljs$lang$arity$variadic = G__7979__delegate;
    return G__7979
  }();
  str_STAR_ = function(x, var_args) {
    var ys = var_args;
    switch(arguments.length) {
      case 0:
        return str_STAR___0.call(this);
      case 1:
        return str_STAR___1.call(this, x);
      default:
        return str_STAR___2.cljs$lang$arity$variadic(x, cljs.core.array_seq(arguments, 1))
    }
    throw"Invalid arity: " + arguments.length;
  };
  str_STAR_.cljs$lang$maxFixedArity = 1;
  str_STAR_.cljs$lang$applyTo = str_STAR___2.cljs$lang$applyTo;
  str_STAR_.cljs$lang$arity$0 = str_STAR___0;
  str_STAR_.cljs$lang$arity$1 = str_STAR___1;
  str_STAR_.cljs$lang$arity$variadic = str_STAR___2.cljs$lang$arity$variadic;
  return str_STAR_
}();
cljs.core.str = function() {
  var str = null;
  var str__0 = function() {
    return""
  };
  var str__1 = function(x) {
    if(cljs.core.symbol_QMARK_.call(null, x)) {
      return x.substring(2, x.length)
    }else {
      if(cljs.core.keyword_QMARK_.call(null, x)) {
        return cljs.core.str_STAR_.call(null, ":", x.substring(2, x.length))
      }else {
        if(x == null) {
          return""
        }else {
          if("\ufdd0'else") {
            return x.toString()
          }else {
            return null
          }
        }
      }
    }
  };
  var str__2 = function() {
    var G__7983__delegate = function(x, ys) {
      return function(sb, more) {
        while(true) {
          if(cljs.core.truth_(more)) {
            var G__7984 = sb.append(str.call(null, cljs.core.first.call(null, more)));
            var G__7985 = cljs.core.next.call(null, more);
            sb = G__7984;
            more = G__7985;
            continue
          }else {
            return cljs.core.str_STAR_.call(null, sb)
          }
          break
        }
      }.call(null, new goog.string.StringBuffer(str.call(null, x)), ys)
    };
    var G__7983 = function(x, var_args) {
      var ys = null;
      if(goog.isDef(var_args)) {
        ys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
      }
      return G__7983__delegate.call(this, x, ys)
    };
    G__7983.cljs$lang$maxFixedArity = 1;
    G__7983.cljs$lang$applyTo = function(arglist__7986) {
      var x = cljs.core.first(arglist__7986);
      var ys = cljs.core.rest(arglist__7986);
      return G__7983__delegate(x, ys)
    };
    G__7983.cljs$lang$arity$variadic = G__7983__delegate;
    return G__7983
  }();
  str = function(x, var_args) {
    var ys = var_args;
    switch(arguments.length) {
      case 0:
        return str__0.call(this);
      case 1:
        return str__1.call(this, x);
      default:
        return str__2.cljs$lang$arity$variadic(x, cljs.core.array_seq(arguments, 1))
    }
    throw"Invalid arity: " + arguments.length;
  };
  str.cljs$lang$maxFixedArity = 1;
  str.cljs$lang$applyTo = str__2.cljs$lang$applyTo;
  str.cljs$lang$arity$0 = str__0;
  str.cljs$lang$arity$1 = str__1;
  str.cljs$lang$arity$variadic = str__2.cljs$lang$arity$variadic;
  return str
}();
cljs.core.subs = function() {
  var subs = null;
  var subs__2 = function(s, start) {
    return s.substring(start)
  };
  var subs__3 = function(s, start, end) {
    return s.substring(start, end)
  };
  subs = function(s, start, end) {
    switch(arguments.length) {
      case 2:
        return subs__2.call(this, s, start);
      case 3:
        return subs__3.call(this, s, start, end)
    }
    throw"Invalid arity: " + arguments.length;
  };
  subs.cljs$lang$arity$2 = subs__2;
  subs.cljs$lang$arity$3 = subs__3;
  return subs
}();
cljs.core.format = function() {
  var format__delegate = function(fmt, args) {
    return cljs.core.apply.call(null, goog.string.format, fmt, args)
  };
  var format = function(fmt, var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return format__delegate.call(this, fmt, args)
  };
  format.cljs$lang$maxFixedArity = 1;
  format.cljs$lang$applyTo = function(arglist__7987) {
    var fmt = cljs.core.first(arglist__7987);
    var args = cljs.core.rest(arglist__7987);
    return format__delegate(fmt, args)
  };
  format.cljs$lang$arity$variadic = format__delegate;
  return format
}();
cljs.core.symbol = function() {
  var symbol = null;
  var symbol__1 = function(name) {
    if(cljs.core.symbol_QMARK_.call(null, name)) {
      name
    }else {
      if(cljs.core.keyword_QMARK_.call(null, name)) {
        cljs.core.str_STAR_.call(null, "\ufdd1", "'", cljs.core.subs.call(null, name, 2))
      }else {
      }
    }
    return cljs.core.str_STAR_.call(null, "\ufdd1", "'", name)
  };
  var symbol__2 = function(ns, name) {
    return symbol.call(null, cljs.core.str_STAR_.call(null, ns, "/", name))
  };
  symbol = function(ns, name) {
    switch(arguments.length) {
      case 1:
        return symbol__1.call(this, ns);
      case 2:
        return symbol__2.call(this, ns, name)
    }
    throw"Invalid arity: " + arguments.length;
  };
  symbol.cljs$lang$arity$1 = symbol__1;
  symbol.cljs$lang$arity$2 = symbol__2;
  return symbol
}();
cljs.core.keyword = function() {
  var keyword = null;
  var keyword__1 = function(name) {
    if(cljs.core.keyword_QMARK_.call(null, name)) {
      return name
    }else {
      if(cljs.core.symbol_QMARK_.call(null, name)) {
        return cljs.core.str_STAR_.call(null, "\ufdd0", "'", cljs.core.subs.call(null, name, 2))
      }else {
        if("\ufdd0'else") {
          return cljs.core.str_STAR_.call(null, "\ufdd0", "'", name)
        }else {
          return null
        }
      }
    }
  };
  var keyword__2 = function(ns, name) {
    return keyword.call(null, cljs.core.str_STAR_.call(null, ns, "/", name))
  };
  keyword = function(ns, name) {
    switch(arguments.length) {
      case 1:
        return keyword__1.call(this, ns);
      case 2:
        return keyword__2.call(this, ns, name)
    }
    throw"Invalid arity: " + arguments.length;
  };
  keyword.cljs$lang$arity$1 = keyword__1;
  keyword.cljs$lang$arity$2 = keyword__2;
  return keyword
}();
cljs.core.equiv_sequential = function equiv_sequential(x, y) {
  return cljs.core.boolean$.call(null, cljs.core.sequential_QMARK_.call(null, y) ? function() {
    var xs__7990 = cljs.core.seq.call(null, x);
    var ys__7991 = cljs.core.seq.call(null, y);
    while(true) {
      if(xs__7990 == null) {
        return ys__7991 == null
      }else {
        if(ys__7991 == null) {
          return false
        }else {
          if(cljs.core._EQ_.call(null, cljs.core.first.call(null, xs__7990), cljs.core.first.call(null, ys__7991))) {
            var G__7992 = cljs.core.next.call(null, xs__7990);
            var G__7993 = cljs.core.next.call(null, ys__7991);
            xs__7990 = G__7992;
            ys__7991 = G__7993;
            continue
          }else {
            if("\ufdd0'else") {
              return false
            }else {
              return null
            }
          }
        }
      }
      break
    }
  }() : null)
};
cljs.core.hash_combine = function hash_combine(seed, hash) {
  return seed ^ hash + 2654435769 + (seed << 6) + (seed >> 2)
};
cljs.core.hash_coll = function hash_coll(coll) {
  return cljs.core.reduce.call(null, function(p1__7994_SHARP_, p2__7995_SHARP_) {
    return cljs.core.hash_combine.call(null, p1__7994_SHARP_, cljs.core.hash.call(null, p2__7995_SHARP_, false))
  }, cljs.core.hash.call(null, cljs.core.first.call(null, coll), false), cljs.core.next.call(null, coll))
};
cljs.core.hash_imap = function hash_imap(m) {
  var h__7999 = 0;
  var s__8000 = cljs.core.seq.call(null, m);
  while(true) {
    if(s__8000) {
      var e__8001 = cljs.core.first.call(null, s__8000);
      var G__8002 = (h__7999 + (cljs.core.hash.call(null, cljs.core.key.call(null, e__8001)) ^ cljs.core.hash.call(null, cljs.core.val.call(null, e__8001)))) % 4503599627370496;
      var G__8003 = cljs.core.next.call(null, s__8000);
      h__7999 = G__8002;
      s__8000 = G__8003;
      continue
    }else {
      return h__7999
    }
    break
  }
};
cljs.core.hash_iset = function hash_iset(s) {
  var h__8007 = 0;
  var s__8008 = cljs.core.seq.call(null, s);
  while(true) {
    if(s__8008) {
      var e__8009 = cljs.core.first.call(null, s__8008);
      var G__8010 = (h__8007 + cljs.core.hash.call(null, e__8009)) % 4503599627370496;
      var G__8011 = cljs.core.next.call(null, s__8008);
      h__8007 = G__8010;
      s__8008 = G__8011;
      continue
    }else {
      return h__8007
    }
    break
  }
};
cljs.core.extend_object_BANG_ = function extend_object_BANG_(obj, fn_map) {
  var G__8032__8033 = cljs.core.seq.call(null, fn_map);
  if(G__8032__8033) {
    var G__8035__8037 = cljs.core.first.call(null, G__8032__8033);
    var vec__8036__8038 = G__8035__8037;
    var key_name__8039 = cljs.core.nth.call(null, vec__8036__8038, 0, null);
    var f__8040 = cljs.core.nth.call(null, vec__8036__8038, 1, null);
    var G__8032__8041 = G__8032__8033;
    var G__8035__8042 = G__8035__8037;
    var G__8032__8043 = G__8032__8041;
    while(true) {
      var vec__8044__8045 = G__8035__8042;
      var key_name__8046 = cljs.core.nth.call(null, vec__8044__8045, 0, null);
      var f__8047 = cljs.core.nth.call(null, vec__8044__8045, 1, null);
      var G__8032__8048 = G__8032__8043;
      var str_name__8049 = cljs.core.name.call(null, key_name__8046);
      obj[str_name__8049] = f__8047;
      var temp__4092__auto____8050 = cljs.core.next.call(null, G__8032__8048);
      if(temp__4092__auto____8050) {
        var G__8032__8051 = temp__4092__auto____8050;
        var G__8052 = cljs.core.first.call(null, G__8032__8051);
        var G__8053 = G__8032__8051;
        G__8035__8042 = G__8052;
        G__8032__8043 = G__8053;
        continue
      }else {
      }
      break
    }
  }else {
  }
  return obj
};
cljs.core.List = function(meta, first, rest, count, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.count = count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 65413358
};
cljs.core.List.cljs$lang$type = true;
cljs.core.List.cljs$lang$ctorPrSeq = function(this__2260__auto__) {
  return cljs.core.list.call(null, "cljs.core/List")
};
cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__8054 = this;
  var h__2143__auto____8055 = this__8054.__hash;
  if(!(h__2143__auto____8055 == null)) {
    return h__2143__auto____8055
  }else {
    var h__2143__auto____8056 = cljs.core.hash_coll.call(null, coll);
    this__8054.__hash = h__2143__auto____8056;
    return h__2143__auto____8056
  }
};
cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var this__8057 = this;
  if(this__8057.count === 1) {
    return null
  }else {
    return this__8057.rest
  }
};
cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__8058 = this;
  return new cljs.core.List(this__8058.meta, o, coll, this__8058.count + 1, null)
};
cljs.core.List.prototype.toString = function() {
  var this__8059 = this;
  var this__8060 = this;
  return cljs.core.pr_str.call(null, this__8060)
};
cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__8061 = this;
  return coll
};
cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__8062 = this;
  return this__8062.count
};
cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var this__8063 = this;
  return this__8063.first
};
cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var this__8064 = this;
  return coll.cljs$core$ISeq$_rest$arity$1(coll)
};
cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__8065 = this;
  return this__8065.first
};
cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__8066 = this;
  if(this__8066.count === 1) {
    return cljs.core.List.EMPTY
  }else {
    return this__8066.rest
  }
};
cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__8067 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__8068 = this;
  return new cljs.core.List(meta, this__8068.first, this__8068.rest, this__8068.count, this__8068.__hash)
};
cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__8069 = this;
  return this__8069.meta
};
cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__8070 = this;
  return cljs.core.List.EMPTY
};
cljs.core.List;
cljs.core.EmptyList = function(meta) {
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 65413326
};
cljs.core.EmptyList.cljs$lang$type = true;
cljs.core.EmptyList.cljs$lang$ctorPrSeq = function(this__2260__auto__) {
  return cljs.core.list.call(null, "cljs.core/EmptyList")
};
cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__8071 = this;
  return 0
};
cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var this__8072 = this;
  return null
};
cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__8073 = this;
  return new cljs.core.List(this__8073.meta, o, null, 1, null)
};
cljs.core.EmptyList.prototype.toString = function() {
  var this__8074 = this;
  var this__8075 = this;
  return cljs.core.pr_str.call(null, this__8075)
};
cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__8076 = this;
  return null
};
cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__8077 = this;
  return 0
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var this__8078 = this;
  return null
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var this__8079 = this;
  throw new Error("Can't pop empty list");
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__8080 = this;
  return null
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__8081 = this;
  return cljs.core.List.EMPTY
};
cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__8082 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__8083 = this;
  return new cljs.core.EmptyList(meta)
};
cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__8084 = this;
  return this__8084.meta
};
cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__8085 = this;
  return coll
};
cljs.core.EmptyList;
cljs.core.List.EMPTY = new cljs.core.EmptyList(null);
cljs.core.reversible_QMARK_ = function reversible_QMARK_(coll) {
  var G__8089__8090 = coll;
  if(G__8089__8090) {
    if(function() {
      var or__3943__auto____8091 = G__8089__8090.cljs$lang$protocol_mask$partition0$ & 134217728;
      if(or__3943__auto____8091) {
        return or__3943__auto____8091
      }else {
        return G__8089__8090.cljs$core$IReversible$
      }
    }()) {
      return true
    }else {
      if(!G__8089__8090.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IReversible, G__8089__8090)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IReversible, G__8089__8090)
  }
};
cljs.core.rseq = function rseq(coll) {
  return cljs.core._rseq.call(null, coll)
};
cljs.core.reverse = function reverse(coll) {
  if(cljs.core.reversible_QMARK_.call(null, coll)) {
    return cljs.core.rseq.call(null, coll)
  }else {
    return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, coll)
  }
};
cljs.core.list = function() {
  var list = null;
  var list__0 = function() {
    return cljs.core.List.EMPTY
  };
  var list__1 = function(x) {
    return cljs.core.conj.call(null, cljs.core.List.EMPTY, x)
  };
  var list__2 = function(x, y) {
    return cljs.core.conj.call(null, list.call(null, y), x)
  };
  var list__3 = function(x, y, z) {
    return cljs.core.conj.call(null, list.call(null, y, z), x)
  };
  var list__4 = function() {
    var G__8092__delegate = function(x, y, z, items) {
      return cljs.core.conj.call(null, cljs.core.conj.call(null, cljs.core.conj.call(null, cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, cljs.core.reverse.call(null, items)), z), y), x)
    };
    var G__8092 = function(x, y, z, var_args) {
      var items = null;
      if(goog.isDef(var_args)) {
        items = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__8092__delegate.call(this, x, y, z, items)
    };
    G__8092.cljs$lang$maxFixedArity = 3;
    G__8092.cljs$lang$applyTo = function(arglist__8093) {
      var x = cljs.core.first(arglist__8093);
      var y = cljs.core.first(cljs.core.next(arglist__8093));
      var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__8093)));
      var items = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__8093)));
      return G__8092__delegate(x, y, z, items)
    };
    G__8092.cljs$lang$arity$variadic = G__8092__delegate;
    return G__8092
  }();
  list = function(x, y, z, var_args) {
    var items = var_args;
    switch(arguments.length) {
      case 0:
        return list__0.call(this);
      case 1:
        return list__1.call(this, x);
      case 2:
        return list__2.call(this, x, y);
      case 3:
        return list__3.call(this, x, y, z);
      default:
        return list__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  list.cljs$lang$maxFixedArity = 3;
  list.cljs$lang$applyTo = list__4.cljs$lang$applyTo;
  list.cljs$lang$arity$0 = list__0;
  list.cljs$lang$arity$1 = list__1;
  list.cljs$lang$arity$2 = list__2;
  list.cljs$lang$arity$3 = list__3;
  list.cljs$lang$arity$variadic = list__4.cljs$lang$arity$variadic;
  return list
}();
cljs.core.Cons = function(meta, first, rest, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 65405164
};
cljs.core.Cons.cljs$lang$type = true;
cljs.core.Cons.cljs$lang$ctorPrSeq = function(this__2260__auto__) {
  return cljs.core.list.call(null, "cljs.core/Cons")
};
cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__8094 = this;
  var h__2143__auto____8095 = this__8094.__hash;
  if(!(h__2143__auto____8095 == null)) {
    return h__2143__auto____8095
  }else {
    var h__2143__auto____8096 = cljs.core.hash_coll.call(null, coll);
    this__8094.__hash = h__2143__auto____8096;
    return h__2143__auto____8096
  }
};
cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var this__8097 = this;
  if(this__8097.rest == null) {
    return null
  }else {
    return cljs.core._seq.call(null, this__8097.rest)
  }
};
cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__8098 = this;
  return new cljs.core.Cons(null, o, coll, this__8098.__hash)
};
cljs.core.Cons.prototype.toString = function() {
  var this__8099 = this;
  var this__8100 = this;
  return cljs.core.pr_str.call(null, this__8100)
};
cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__8101 = this;
  return coll
};
cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__8102 = this;
  return this__8102.first
};
cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__8103 = this;
  if(this__8103.rest == null) {
    return cljs.core.List.EMPTY
  }else {
    return this__8103.rest
  }
};
cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__8104 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__8105 = this;
  return new cljs.core.Cons(meta, this__8105.first, this__8105.rest, this__8105.__hash)
};
cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__8106 = this;
  return this__8106.meta
};
cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__8107 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, this__8107.meta)
};
cljs.core.Cons;
cljs.core.cons = function cons(x, coll) {
  if(function() {
    var or__3943__auto____8112 = coll == null;
    if(or__3943__auto____8112) {
      return or__3943__auto____8112
    }else {
      var G__8113__8114 = coll;
      if(G__8113__8114) {
        if(function() {
          var or__3943__auto____8115 = G__8113__8114.cljs$lang$protocol_mask$partition0$ & 64;
          if(or__3943__auto____8115) {
            return or__3943__auto____8115
          }else {
            return G__8113__8114.cljs$core$ISeq$
          }
        }()) {
          return true
        }else {
          if(!G__8113__8114.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__8113__8114)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__8113__8114)
      }
    }
  }()) {
    return new cljs.core.Cons(null, x, coll, null)
  }else {
    return new cljs.core.Cons(null, x, cljs.core.seq.call(null, coll), null)
  }
};
cljs.core.list_QMARK_ = function list_QMARK_(x) {
  var G__8119__8120 = x;
  if(G__8119__8120) {
    if(function() {
      var or__3943__auto____8121 = G__8119__8120.cljs$lang$protocol_mask$partition0$ & 33554432;
      if(or__3943__auto____8121) {
        return or__3943__auto____8121
      }else {
        return G__8119__8120.cljs$core$IList$
      }
    }()) {
      return true
    }else {
      if(!G__8119__8120.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IList, G__8119__8120)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IList, G__8119__8120)
  }
};
cljs.core.IReduce["string"] = true;
cljs.core._reduce["string"] = function() {
  var G__8122 = null;
  var G__8122__2 = function(string, f) {
    return cljs.core.ci_reduce.call(null, string, f)
  };
  var G__8122__3 = function(string, f, start) {
    return cljs.core.ci_reduce.call(null, string, f, start)
  };
  G__8122 = function(string, f, start) {
    switch(arguments.length) {
      case 2:
        return G__8122__2.call(this, string, f);
      case 3:
        return G__8122__3.call(this, string, f, start)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__8122
}();
cljs.core.ILookup["string"] = true;
cljs.core._lookup["string"] = function() {
  var G__8123 = null;
  var G__8123__2 = function(string, k) {
    return cljs.core._nth.call(null, string, k)
  };
  var G__8123__3 = function(string, k, not_found) {
    return cljs.core._nth.call(null, string, k, not_found)
  };
  G__8123 = function(string, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__8123__2.call(this, string, k);
      case 3:
        return G__8123__3.call(this, string, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__8123
}();
cljs.core.IIndexed["string"] = true;
cljs.core._nth["string"] = function() {
  var G__8124 = null;
  var G__8124__2 = function(string, n) {
    if(n < cljs.core._count.call(null, string)) {
      return string.charAt(n)
    }else {
      return null
    }
  };
  var G__8124__3 = function(string, n, not_found) {
    if(n < cljs.core._count.call(null, string)) {
      return string.charAt(n)
    }else {
      return not_found
    }
  };
  G__8124 = function(string, n, not_found) {
    switch(arguments.length) {
      case 2:
        return G__8124__2.call(this, string, n);
      case 3:
        return G__8124__3.call(this, string, n, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__8124
}();
cljs.core.ICounted["string"] = true;
cljs.core._count["string"] = function(s) {
  return s.length
};
cljs.core.ISeqable["string"] = true;
cljs.core._seq["string"] = function(string) {
  return cljs.core.prim_seq.call(null, string, 0)
};
cljs.core.IHash["string"] = true;
cljs.core._hash["string"] = function(o) {
  return goog.string.hashCode(o)
};
cljs.core.Keyword = function(k) {
  this.k = k;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 1
};
cljs.core.Keyword.cljs$lang$type = true;
cljs.core.Keyword.cljs$lang$ctorPrSeq = function(this__2260__auto__) {
  return cljs.core.list.call(null, "cljs.core/Keyword")
};
cljs.core.Keyword.prototype.call = function() {
  var G__8136 = null;
  var G__8136__2 = function(this_sym8127, coll) {
    var this__8129 = this;
    var this_sym8127__8130 = this;
    var ___8131 = this_sym8127__8130;
    if(coll == null) {
      return null
    }else {
      var strobj__8132 = coll.strobj;
      if(strobj__8132 == null) {
        return cljs.core._lookup.call(null, coll, this__8129.k, null)
      }else {
        return strobj__8132[this__8129.k]
      }
    }
  };
  var G__8136__3 = function(this_sym8128, coll, not_found) {
    var this__8129 = this;
    var this_sym8128__8133 = this;
    var ___8134 = this_sym8128__8133;
    if(coll == null) {
      return not_found
    }else {
      return cljs.core._lookup.call(null, coll, this__8129.k, not_found)
    }
  };
  G__8136 = function(this_sym8128, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__8136__2.call(this, this_sym8128, coll);
      case 3:
        return G__8136__3.call(this, this_sym8128, coll, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__8136
}();
cljs.core.Keyword.prototype.apply = function(this_sym8125, args8126) {
  var this__8135 = this;
  return this_sym8125.call.apply(this_sym8125, [this_sym8125].concat(args8126.slice()))
};
cljs.core.Keyword;
String.prototype.cljs$core$IFn$ = true;
String.prototype.call = function() {
  var G__8145 = null;
  var G__8145__2 = function(this_sym8139, coll) {
    var this_sym8139__8141 = this;
    var this__8142 = this_sym8139__8141;
    return cljs.core._lookup.call(null, coll, this__8142.toString(), null)
  };
  var G__8145__3 = function(this_sym8140, coll, not_found) {
    var this_sym8140__8143 = this;
    var this__8144 = this_sym8140__8143;
    return cljs.core._lookup.call(null, coll, this__8144.toString(), not_found)
  };
  G__8145 = function(this_sym8140, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__8145__2.call(this, this_sym8140, coll);
      case 3:
        return G__8145__3.call(this, this_sym8140, coll, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__8145
}();
String.prototype.apply = function(this_sym8137, args8138) {
  return this_sym8137.call.apply(this_sym8137, [this_sym8137].concat(args8138.slice()))
};
String.prototype.apply = function(s, args) {
  if(cljs.core.count.call(null, args) < 2) {
    return cljs.core._lookup.call(null, args[0], s, null)
  }else {
    return cljs.core._lookup.call(null, args[0], s, args[1])
  }
};
cljs.core.lazy_seq_value = function lazy_seq_value(lazy_seq) {
  var x__8147 = lazy_seq.x;
  if(lazy_seq.realized) {
    return x__8147
  }else {
    lazy_seq.x = x__8147.call(null);
    lazy_seq.realized = true;
    return lazy_seq.x
  }
};
cljs.core.LazySeq = function(meta, realized, x, __hash) {
  this.meta = meta;
  this.realized = realized;
  this.x = x;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850700
};
cljs.core.LazySeq.cljs$lang$type = true;
cljs.core.LazySeq.cljs$lang$ctorPrSeq = function(this__2260__auto__) {
  return cljs.core.list.call(null, "cljs.core/LazySeq")
};
cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__8148 = this;
  var h__2143__auto____8149 = this__8148.__hash;
  if(!(h__2143__auto____8149 == null)) {
    return h__2143__auto____8149
  }else {
    var h__2143__auto____8150 = cljs.core.hash_coll.call(null, coll);
    this__8148.__hash = h__2143__auto____8150;
    return h__2143__auto____8150
  }
};
cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var this__8151 = this;
  return cljs.core._seq.call(null, coll.cljs$core$ISeq$_rest$arity$1(coll))
};
cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__8152 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.LazySeq.prototype.toString = function() {
  var this__8153 = this;
  var this__8154 = this;
  return cljs.core.pr_str.call(null, this__8154)
};
cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__8155 = this;
  return cljs.core.seq.call(null, cljs.core.lazy_seq_value.call(null, coll))
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__8156 = this;
  return cljs.core.first.call(null, cljs.core.lazy_seq_value.call(null, coll))
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__8157 = this;
  return cljs.core.rest.call(null, cljs.core.lazy_seq_value.call(null, coll))
};
cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__8158 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__8159 = this;
  return new cljs.core.LazySeq(meta, this__8159.realized, this__8159.x, this__8159.__hash)
};
cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__8160 = this;
  return this__8160.meta
};
cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__8161 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, this__8161.meta)
};
cljs.core.LazySeq;
cljs.core.ChunkBuffer = function(buf, end) {
  this.buf = buf;
  this.end = end;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2
};
cljs.core.ChunkBuffer.cljs$lang$type = true;
cljs.core.ChunkBuffer.cljs$lang$ctorPrSeq = function(this__2260__auto__) {
  return cljs.core.list.call(null, "cljs.core/ChunkBuffer")
};
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var this__8162 = this;
  return this__8162.end
};
cljs.core.ChunkBuffer.prototype.add = function(o) {
  var this__8163 = this;
  var ___8164 = this;
  this__8163.buf[this__8163.end] = o;
  return this__8163.end = this__8163.end + 1
};
cljs.core.ChunkBuffer.prototype.chunk = function(o) {
  var this__8165 = this;
  var ___8166 = this;
  var ret__8167 = new cljs.core.ArrayChunk(this__8165.buf, 0, this__8165.end);
  this__8165.buf = null;
  return ret__8167
};
cljs.core.ChunkBuffer;
cljs.core.chunk_buffer = function chunk_buffer(capacity) {
  return new cljs.core.ChunkBuffer(cljs.core.make_array.call(null, capacity), 0)
};
cljs.core.ArrayChunk = function(arr, off, end) {
  this.arr = arr;
  this.off = off;
  this.end = end;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 524306
};
cljs.core.ArrayChunk.cljs$lang$type = true;
cljs.core.ArrayChunk.cljs$lang$ctorPrSeq = function(this__2260__auto__) {
  return cljs.core.list.call(null, "cljs.core/ArrayChunk")
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var this__8168 = this;
  return cljs.core.ci_reduce.call(null, coll, f, this__8168.arr[this__8168.off], this__8168.off + 1)
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var this__8169 = this;
  return cljs.core.ci_reduce.call(null, coll, f, start, this__8169.off)
};
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = true;
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = function(coll) {
  var this__8170 = this;
  if(this__8170.off === this__8170.end) {
    throw new Error("-drop-first of empty chunk");
  }else {
    return new cljs.core.ArrayChunk(this__8170.arr, this__8170.off + 1, this__8170.end)
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, i) {
  var this__8171 = this;
  return this__8171.arr[this__8171.off + i]
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, i, not_found) {
  var this__8172 = this;
  if(function() {
    var and__3941__auto____8173 = i >= 0;
    if(and__3941__auto____8173) {
      return i < this__8172.end - this__8172.off
    }else {
      return and__3941__auto____8173
    }
  }()) {
    return this__8172.arr[this__8172.off + i]
  }else {
    return not_found
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var this__8174 = this;
  return this__8174.end - this__8174.off
};
cljs.core.ArrayChunk;
cljs.core.array_chunk = function() {
  var array_chunk = null;
  var array_chunk__1 = function(arr) {
    return array_chunk.call(null, arr, 0, arr.length)
  };
  var array_chunk__2 = function(arr, off) {
    return array_chunk.call(null, arr, off, arr.length)
  };
  var array_chunk__3 = function(arr, off, end) {
    return new cljs.core.ArrayChunk(arr, off, end)
  };
  array_chunk = function(arr, off, end) {
    switch(arguments.length) {
      case 1:
        return array_chunk__1.call(this, arr);
      case 2:
        return array_chunk__2.call(this, arr, off);
      case 3:
        return array_chunk__3.call(this, arr, off, end)
    }
    throw"Invalid arity: " + arguments.length;
  };
  array_chunk.cljs$lang$arity$1 = array_chunk__1;
  array_chunk.cljs$lang$arity$2 = array_chunk__2;
  array_chunk.cljs$lang$arity$3 = array_chunk__3;
  return array_chunk
}();
cljs.core.ChunkedCons = function(chunk, more, meta) {
  this.chunk = chunk;
  this.more = more;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 27656296
};
cljs.core.ChunkedCons.cljs$lang$type = true;
cljs.core.ChunkedCons.cljs$lang$ctorPrSeq = function(this__2260__auto__) {
  return cljs.core.list.call(null, "cljs.core/ChunkedCons")
};
cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = function(this$, o) {
  var this__8175 = this;
  return cljs.core.cons.call(null, o, this$)
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__8176 = this;
  return coll
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__8177 = this;
  return cljs.core._nth.call(null, this__8177.chunk, 0)
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__8178 = this;
  if(cljs.core._count.call(null, this__8178.chunk) > 1) {
    return new cljs.core.ChunkedCons(cljs.core._drop_first.call(null, this__8178.chunk), this__8178.more, this__8178.meta)
  }else {
    if(this__8178.more == null) {
      return cljs.core.List.EMPTY
    }else {
      return this__8178.more
    }
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$ = true;
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var this__8179 = this;
  if(this__8179.more == null) {
    return null
  }else {
    return this__8179.more
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__8180 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var this__8181 = this;
  return new cljs.core.ChunkedCons(this__8181.chunk, this__8181.more, m)
};
cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__8182 = this;
  return this__8182.meta
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$ = true;
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var this__8183 = this;
  return this__8183.chunk
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var this__8184 = this;
  if(this__8184.more == null) {
    return cljs.core.List.EMPTY
  }else {
    return this__8184.more
  }
};
cljs.core.ChunkedCons;
cljs.core.chunk_cons = function chunk_cons(chunk, rest) {
  if(cljs.core._count.call(null, chunk) === 0) {
    return rest
  }else {
    return new cljs.core.ChunkedCons(chunk, rest, null)
  }
};
cljs.core.chunk_append = function chunk_append(b, x) {
  return b.add(x)
};
cljs.core.chunk = function chunk(b) {
  return b.chunk()
};
cljs.core.chunk_first = function chunk_first(s) {
  return cljs.core._chunked_first.call(null, s)
};
cljs.core.chunk_rest = function chunk_rest(s) {
  return cljs.core._chunked_rest.call(null, s)
};
cljs.core.chunk_next = function chunk_next(s) {
  if(function() {
    var G__8188__8189 = s;
    if(G__8188__8189) {
      if(cljs.core.truth_(function() {
        var or__3943__auto____8190 = null;
        if(cljs.core.truth_(or__3943__auto____8190)) {
          return or__3943__auto____8190
        }else {
          return G__8188__8189.cljs$core$IChunkedNext$
        }
      }())) {
        return true
      }else {
        if(!G__8188__8189.cljs$lang$protocol_mask$partition$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.IChunkedNext, G__8188__8189)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.IChunkedNext, G__8188__8189)
    }
  }()) {
    return cljs.core._chunked_next.call(null, s)
  }else {
    return cljs.core.seq.call(null, cljs.core._chunked_rest.call(null, s))
  }
};
cljs.core.to_array = function to_array(s) {
  var ary__8193 = [];
  var s__8194 = s;
  while(true) {
    if(cljs.core.seq.call(null, s__8194)) {
      ary__8193.push(cljs.core.first.call(null, s__8194));
      var G__8195 = cljs.core.next.call(null, s__8194);
      s__8194 = G__8195;
      continue
    }else {
      return ary__8193
    }
    break
  }
};
cljs.core.to_array_2d = function to_array_2d(coll) {
  var ret__8199 = cljs.core.make_array.call(null, cljs.core.count.call(null, coll));
  var i__8200 = 0;
  var xs__8201 = cljs.core.seq.call(null, coll);
  while(true) {
    if(xs__8201) {
      ret__8199[i__8200] = cljs.core.to_array.call(null, cljs.core.first.call(null, xs__8201));
      var G__8202 = i__8200 + 1;
      var G__8203 = cljs.core.next.call(null, xs__8201);
      i__8200 = G__8202;
      xs__8201 = G__8203;
      continue
    }else {
    }
    break
  }
  return ret__8199
};
cljs.core.long_array = function() {
  var long_array = null;
  var long_array__1 = function(size_or_seq) {
    if(cljs.core.number_QMARK_.call(null, size_or_seq)) {
      return long_array.call(null, size_or_seq, null)
    }else {
      if(cljs.core.seq_QMARK_.call(null, size_or_seq)) {
        return cljs.core.into_array.call(null, size_or_seq)
      }else {
        if("\ufdd0'else") {
          throw new Error("long-array called with something other than size or ISeq");
        }else {
          return null
        }
      }
    }
  };
  var long_array__2 = function(size, init_val_or_seq) {
    var a__8211 = cljs.core.make_array.call(null, size);
    if(cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s__8212 = cljs.core.seq.call(null, init_val_or_seq);
      var i__8213 = 0;
      var s__8214 = s__8212;
      while(true) {
        if(cljs.core.truth_(function() {
          var and__3941__auto____8215 = s__8214;
          if(and__3941__auto____8215) {
            return i__8213 < size
          }else {
            return and__3941__auto____8215
          }
        }())) {
          a__8211[i__8213] = cljs.core.first.call(null, s__8214);
          var G__8218 = i__8213 + 1;
          var G__8219 = cljs.core.next.call(null, s__8214);
          i__8213 = G__8218;
          s__8214 = G__8219;
          continue
        }else {
          return a__8211
        }
        break
      }
    }else {
      var n__2478__auto____8216 = size;
      var i__8217 = 0;
      while(true) {
        if(i__8217 < n__2478__auto____8216) {
          a__8211[i__8217] = init_val_or_seq;
          var G__8220 = i__8217 + 1;
          i__8217 = G__8220;
          continue
        }else {
        }
        break
      }
      return a__8211
    }
  };
  long_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return long_array__1.call(this, size);
      case 2:
        return long_array__2.call(this, size, init_val_or_seq)
    }
    throw"Invalid arity: " + arguments.length;
  };
  long_array.cljs$lang$arity$1 = long_array__1;
  long_array.cljs$lang$arity$2 = long_array__2;
  return long_array
}();
cljs.core.double_array = function() {
  var double_array = null;
  var double_array__1 = function(size_or_seq) {
    if(cljs.core.number_QMARK_.call(null, size_or_seq)) {
      return double_array.call(null, size_or_seq, null)
    }else {
      if(cljs.core.seq_QMARK_.call(null, size_or_seq)) {
        return cljs.core.into_array.call(null, size_or_seq)
      }else {
        if("\ufdd0'else") {
          throw new Error("double-array called with something other than size or ISeq");
        }else {
          return null
        }
      }
    }
  };
  var double_array__2 = function(size, init_val_or_seq) {
    var a__8228 = cljs.core.make_array.call(null, size);
    if(cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s__8229 = cljs.core.seq.call(null, init_val_or_seq);
      var i__8230 = 0;
      var s__8231 = s__8229;
      while(true) {
        if(cljs.core.truth_(function() {
          var and__3941__auto____8232 = s__8231;
          if(and__3941__auto____8232) {
            return i__8230 < size
          }else {
            return and__3941__auto____8232
          }
        }())) {
          a__8228[i__8230] = cljs.core.first.call(null, s__8231);
          var G__8235 = i__8230 + 1;
          var G__8236 = cljs.core.next.call(null, s__8231);
          i__8230 = G__8235;
          s__8231 = G__8236;
          continue
        }else {
          return a__8228
        }
        break
      }
    }else {
      var n__2478__auto____8233 = size;
      var i__8234 = 0;
      while(true) {
        if(i__8234 < n__2478__auto____8233) {
          a__8228[i__8234] = init_val_or_seq;
          var G__8237 = i__8234 + 1;
          i__8234 = G__8237;
          continue
        }else {
        }
        break
      }
      return a__8228
    }
  };
  double_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return double_array__1.call(this, size);
      case 2:
        return double_array__2.call(this, size, init_val_or_seq)
    }
    throw"Invalid arity: " + arguments.length;
  };
  double_array.cljs$lang$arity$1 = double_array__1;
  double_array.cljs$lang$arity$2 = double_array__2;
  return double_array
}();
cljs.core.object_array = function() {
  var object_array = null;
  var object_array__1 = function(size_or_seq) {
    if(cljs.core.number_QMARK_.call(null, size_or_seq)) {
      return object_array.call(null, size_or_seq, null)
    }else {
      if(cljs.core.seq_QMARK_.call(null, size_or_seq)) {
        return cljs.core.into_array.call(null, size_or_seq)
      }else {
        if("\ufdd0'else") {
          throw new Error("object-array called with something other than size or ISeq");
        }else {
          return null
        }
      }
    }
  };
  var object_array__2 = function(size, init_val_or_seq) {
    var a__8245 = cljs.core.make_array.call(null, size);
    if(cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s__8246 = cljs.core.seq.call(null, init_val_or_seq);
      var i__8247 = 0;
      var s__8248 = s__8246;
      while(true) {
        if(cljs.core.truth_(function() {
          var and__3941__auto____8249 = s__8248;
          if(and__3941__auto____8249) {
            return i__8247 < size
          }else {
            return and__3941__auto____8249
          }
        }())) {
          a__8245[i__8247] = cljs.core.first.call(null, s__8248);
          var G__8252 = i__8247 + 1;
          var G__8253 = cljs.core.next.call(null, s__8248);
          i__8247 = G__8252;
          s__8248 = G__8253;
          continue
        }else {
          return a__8245
        }
        break
      }
    }else {
      var n__2478__auto____8250 = size;
      var i__8251 = 0;
      while(true) {
        if(i__8251 < n__2478__auto____8250) {
          a__8245[i__8251] = init_val_or_seq;
          var G__8254 = i__8251 + 1;
          i__8251 = G__8254;
          continue
        }else {
        }
        break
      }
      return a__8245
    }
  };
  object_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return object_array__1.call(this, size);
      case 2:
        return object_array__2.call(this, size, init_val_or_seq)
    }
    throw"Invalid arity: " + arguments.length;
  };
  object_array.cljs$lang$arity$1 = object_array__1;
  object_array.cljs$lang$arity$2 = object_array__2;
  return object_array
}();
cljs.core.bounded_count = function bounded_count(s, n) {
  if(cljs.core.counted_QMARK_.call(null, s)) {
    return cljs.core.count.call(null, s)
  }else {
    var s__8259 = s;
    var i__8260 = n;
    var sum__8261 = 0;
    while(true) {
      if(cljs.core.truth_(function() {
        var and__3941__auto____8262 = i__8260 > 0;
        if(and__3941__auto____8262) {
          return cljs.core.seq.call(null, s__8259)
        }else {
          return and__3941__auto____8262
        }
      }())) {
        var G__8263 = cljs.core.next.call(null, s__8259);
        var G__8264 = i__8260 - 1;
        var G__8265 = sum__8261 + 1;
        s__8259 = G__8263;
        i__8260 = G__8264;
        sum__8261 = G__8265;
        continue
      }else {
        return sum__8261
      }
      break
    }
  }
};
cljs.core.spread = function spread(arglist) {
  if(arglist == null) {
    return null
  }else {
    if(cljs.core.next.call(null, arglist) == null) {
      return cljs.core.seq.call(null, cljs.core.first.call(null, arglist))
    }else {
      if("\ufdd0'else") {
        return cljs.core.cons.call(null, cljs.core.first.call(null, arglist), spread.call(null, cljs.core.next.call(null, arglist)))
      }else {
        return null
      }
    }
  }
};
cljs.core.concat = function() {
  var concat = null;
  var concat__0 = function() {
    return new cljs.core.LazySeq(null, false, function() {
      return null
    }, null)
  };
  var concat__1 = function(x) {
    return new cljs.core.LazySeq(null, false, function() {
      return x
    }, null)
  };
  var concat__2 = function(x, y) {
    return new cljs.core.LazySeq(null, false, function() {
      var s__8270 = cljs.core.seq.call(null, x);
      if(s__8270) {
        if(cljs.core.chunked_seq_QMARK_.call(null, s__8270)) {
          return cljs.core.chunk_cons.call(null, cljs.core.chunk_first.call(null, s__8270), concat.call(null, cljs.core.chunk_rest.call(null, s__8270), y))
        }else {
          return cljs.core.cons.call(null, cljs.core.first.call(null, s__8270), concat.call(null, cljs.core.rest.call(null, s__8270), y))
        }
      }else {
        return y
      }
    }, null)
  };
  var concat__3 = function() {
    var G__8274__delegate = function(x, y, zs) {
      var cat__8273 = function cat(xys, zs) {
        return new cljs.core.LazySeq(null, false, function() {
          var xys__8272 = cljs.core.seq.call(null, xys);
          if(xys__8272) {
            if(cljs.core.chunked_seq_QMARK_.call(null, xys__8272)) {
              return cljs.core.chunk_cons.call(null, cljs.core.chunk_first.call(null, xys__8272), cat.call(null, cljs.core.chunk_rest.call(null, xys__8272), zs))
            }else {
              return cljs.core.cons.call(null, cljs.core.first.call(null, xys__8272), cat.call(null, cljs.core.rest.call(null, xys__8272), zs))
            }
          }else {
            if(cljs.core.truth_(zs)) {
              return cat.call(null, cljs.core.first.call(null, zs), cljs.core.next.call(null, zs))
            }else {
              return null
            }
          }
        }, null)
      };
      return cat__8273.call(null, concat.call(null, x, y), zs)
    };
    var G__8274 = function(x, y, var_args) {
      var zs = null;
      if(goog.isDef(var_args)) {
        zs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__8274__delegate.call(this, x, y, zs)
    };
    G__8274.cljs$lang$maxFixedArity = 2;
    G__8274.cljs$lang$applyTo = function(arglist__8275) {
      var x = cljs.core.first(arglist__8275);
      var y = cljs.core.first(cljs.core.next(arglist__8275));
      var zs = cljs.core.rest(cljs.core.next(arglist__8275));
      return G__8274__delegate(x, y, zs)
    };
    G__8274.cljs$lang$arity$variadic = G__8274__delegate;
    return G__8274
  }();
  concat = function(x, y, var_args) {
    var zs = var_args;
    switch(arguments.length) {
      case 0:
        return concat__0.call(this);
      case 1:
        return concat__1.call(this, x);
      case 2:
        return concat__2.call(this, x, y);
      default:
        return concat__3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  concat.cljs$lang$maxFixedArity = 2;
  concat.cljs$lang$applyTo = concat__3.cljs$lang$applyTo;
  concat.cljs$lang$arity$0 = concat__0;
  concat.cljs$lang$arity$1 = concat__1;
  concat.cljs$lang$arity$2 = concat__2;
  concat.cljs$lang$arity$variadic = concat__3.cljs$lang$arity$variadic;
  return concat
}();
cljs.core.list_STAR_ = function() {
  var list_STAR_ = null;
  var list_STAR___1 = function(args) {
    return cljs.core.seq.call(null, args)
  };
  var list_STAR___2 = function(a, args) {
    return cljs.core.cons.call(null, a, args)
  };
  var list_STAR___3 = function(a, b, args) {
    return cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, args))
  };
  var list_STAR___4 = function(a, b, c, args) {
    return cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, cljs.core.cons.call(null, c, args)))
  };
  var list_STAR___5 = function() {
    var G__8276__delegate = function(a, b, c, d, more) {
      return cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, cljs.core.cons.call(null, c, cljs.core.cons.call(null, d, cljs.core.spread.call(null, more)))))
    };
    var G__8276 = function(a, b, c, d, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0)
      }
      return G__8276__delegate.call(this, a, b, c, d, more)
    };
    G__8276.cljs$lang$maxFixedArity = 4;
    G__8276.cljs$lang$applyTo = function(arglist__8277) {
      var a = cljs.core.first(arglist__8277);
      var b = cljs.core.first(cljs.core.next(arglist__8277));
      var c = cljs.core.first(cljs.core.next(cljs.core.next(arglist__8277)));
      var d = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(arglist__8277))));
      var more = cljs.core.rest(cljs.core.next(cljs.core.next(cljs.core.next(arglist__8277))));
      return G__8276__delegate(a, b, c, d, more)
    };
    G__8276.cljs$lang$arity$variadic = G__8276__delegate;
    return G__8276
  }();
  list_STAR_ = function(a, b, c, d, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return list_STAR___1.call(this, a);
      case 2:
        return list_STAR___2.call(this, a, b);
      case 3:
        return list_STAR___3.call(this, a, b, c);
      case 4:
        return list_STAR___4.call(this, a, b, c, d);
      default:
        return list_STAR___5.cljs$lang$arity$variadic(a, b, c, d, cljs.core.array_seq(arguments, 4))
    }
    throw"Invalid arity: " + arguments.length;
  };
  list_STAR_.cljs$lang$maxFixedArity = 4;
  list_STAR_.cljs$lang$applyTo = list_STAR___5.cljs$lang$applyTo;
  list_STAR_.cljs$lang$arity$1 = list_STAR___1;
  list_STAR_.cljs$lang$arity$2 = list_STAR___2;
  list_STAR_.cljs$lang$arity$3 = list_STAR___3;
  list_STAR_.cljs$lang$arity$4 = list_STAR___4;
  list_STAR_.cljs$lang$arity$variadic = list_STAR___5.cljs$lang$arity$variadic;
  return list_STAR_
}();
cljs.core.transient$ = function transient$(coll) {
  return cljs.core._as_transient.call(null, coll)
};
cljs.core.persistent_BANG_ = function persistent_BANG_(tcoll) {
  return cljs.core._persistent_BANG_.call(null, tcoll)
};
cljs.core.conj_BANG_ = function conj_BANG_(tcoll, val) {
  return cljs.core._conj_BANG_.call(null, tcoll, val)
};
cljs.core.assoc_BANG_ = function assoc_BANG_(tcoll, key, val) {
  return cljs.core._assoc_BANG_.call(null, tcoll, key, val)
};
cljs.core.dissoc_BANG_ = function dissoc_BANG_(tcoll, key) {
  return cljs.core._dissoc_BANG_.call(null, tcoll, key)
};
cljs.core.pop_BANG_ = function pop_BANG_(tcoll) {
  return cljs.core._pop_BANG_.call(null, tcoll)
};
cljs.core.disj_BANG_ = function disj_BANG_(tcoll, val) {
  return cljs.core._disjoin_BANG_.call(null, tcoll, val)
};
cljs.core.apply_to = function apply_to(f, argc, args) {
  var args__8319 = cljs.core.seq.call(null, args);
  if(argc === 0) {
    return f.call(null)
  }else {
    var a__8320 = cljs.core._first.call(null, args__8319);
    var args__8321 = cljs.core._rest.call(null, args__8319);
    if(argc === 1) {
      if(f.cljs$lang$arity$1) {
        return f.cljs$lang$arity$1(a__8320)
      }else {
        return f.call(null, a__8320)
      }
    }else {
      var b__8322 = cljs.core._first.call(null, args__8321);
      var args__8323 = cljs.core._rest.call(null, args__8321);
      if(argc === 2) {
        if(f.cljs$lang$arity$2) {
          return f.cljs$lang$arity$2(a__8320, b__8322)
        }else {
          return f.call(null, a__8320, b__8322)
        }
      }else {
        var c__8324 = cljs.core._first.call(null, args__8323);
        var args__8325 = cljs.core._rest.call(null, args__8323);
        if(argc === 3) {
          if(f.cljs$lang$arity$3) {
            return f.cljs$lang$arity$3(a__8320, b__8322, c__8324)
          }else {
            return f.call(null, a__8320, b__8322, c__8324)
          }
        }else {
          var d__8326 = cljs.core._first.call(null, args__8325);
          var args__8327 = cljs.core._rest.call(null, args__8325);
          if(argc === 4) {
            if(f.cljs$lang$arity$4) {
              return f.cljs$lang$arity$4(a__8320, b__8322, c__8324, d__8326)
            }else {
              return f.call(null, a__8320, b__8322, c__8324, d__8326)
            }
          }else {
            var e__8328 = cljs.core._first.call(null, args__8327);
            var args__8329 = cljs.core._rest.call(null, args__8327);
            if(argc === 5) {
              if(f.cljs$lang$arity$5) {
                return f.cljs$lang$arity$5(a__8320, b__8322, c__8324, d__8326, e__8328)
              }else {
                return f.call(null, a__8320, b__8322, c__8324, d__8326, e__8328)
              }
            }else {
              var f__8330 = cljs.core._first.call(null, args__8329);
              var args__8331 = cljs.core._rest.call(null, args__8329);
              if(argc === 6) {
                if(f__8330.cljs$lang$arity$6) {
                  return f__8330.cljs$lang$arity$6(a__8320, b__8322, c__8324, d__8326, e__8328, f__8330)
                }else {
                  return f__8330.call(null, a__8320, b__8322, c__8324, d__8326, e__8328, f__8330)
                }
              }else {
                var g__8332 = cljs.core._first.call(null, args__8331);
                var args__8333 = cljs.core._rest.call(null, args__8331);
                if(argc === 7) {
                  if(f__8330.cljs$lang$arity$7) {
                    return f__8330.cljs$lang$arity$7(a__8320, b__8322, c__8324, d__8326, e__8328, f__8330, g__8332)
                  }else {
                    return f__8330.call(null, a__8320, b__8322, c__8324, d__8326, e__8328, f__8330, g__8332)
                  }
                }else {
                  var h__8334 = cljs.core._first.call(null, args__8333);
                  var args__8335 = cljs.core._rest.call(null, args__8333);
                  if(argc === 8) {
                    if(f__8330.cljs$lang$arity$8) {
                      return f__8330.cljs$lang$arity$8(a__8320, b__8322, c__8324, d__8326, e__8328, f__8330, g__8332, h__8334)
                    }else {
                      return f__8330.call(null, a__8320, b__8322, c__8324, d__8326, e__8328, f__8330, g__8332, h__8334)
                    }
                  }else {
                    var i__8336 = cljs.core._first.call(null, args__8335);
                    var args__8337 = cljs.core._rest.call(null, args__8335);
                    if(argc === 9) {
                      if(f__8330.cljs$lang$arity$9) {
                        return f__8330.cljs$lang$arity$9(a__8320, b__8322, c__8324, d__8326, e__8328, f__8330, g__8332, h__8334, i__8336)
                      }else {
                        return f__8330.call(null, a__8320, b__8322, c__8324, d__8326, e__8328, f__8330, g__8332, h__8334, i__8336)
                      }
                    }else {
                      var j__8338 = cljs.core._first.call(null, args__8337);
                      var args__8339 = cljs.core._rest.call(null, args__8337);
                      if(argc === 10) {
                        if(f__8330.cljs$lang$arity$10) {
                          return f__8330.cljs$lang$arity$10(a__8320, b__8322, c__8324, d__8326, e__8328, f__8330, g__8332, h__8334, i__8336, j__8338)
                        }else {
                          return f__8330.call(null, a__8320, b__8322, c__8324, d__8326, e__8328, f__8330, g__8332, h__8334, i__8336, j__8338)
                        }
                      }else {
                        var k__8340 = cljs.core._first.call(null, args__8339);
                        var args__8341 = cljs.core._rest.call(null, args__8339);
                        if(argc === 11) {
                          if(f__8330.cljs$lang$arity$11) {
                            return f__8330.cljs$lang$arity$11(a__8320, b__8322, c__8324, d__8326, e__8328, f__8330, g__8332, h__8334, i__8336, j__8338, k__8340)
                          }else {
                            return f__8330.call(null, a__8320, b__8322, c__8324, d__8326, e__8328, f__8330, g__8332, h__8334, i__8336, j__8338, k__8340)
                          }
                        }else {
                          var l__8342 = cljs.core._first.call(null, args__8341);
                          var args__8343 = cljs.core._rest.call(null, args__8341);
                          if(argc === 12) {
                            if(f__8330.cljs$lang$arity$12) {
                              return f__8330.cljs$lang$arity$12(a__8320, b__8322, c__8324, d__8326, e__8328, f__8330, g__8332, h__8334, i__8336, j__8338, k__8340, l__8342)
                            }else {
                              return f__8330.call(null, a__8320, b__8322, c__8324, d__8326, e__8328, f__8330, g__8332, h__8334, i__8336, j__8338, k__8340, l__8342)
                            }
                          }else {
                            var m__8344 = cljs.core._first.call(null, args__8343);
                            var args__8345 = cljs.core._rest.call(null, args__8343);
                            if(argc === 13) {
                              if(f__8330.cljs$lang$arity$13) {
                                return f__8330.cljs$lang$arity$13(a__8320, b__8322, c__8324, d__8326, e__8328, f__8330, g__8332, h__8334, i__8336, j__8338, k__8340, l__8342, m__8344)
                              }else {
                                return f__8330.call(null, a__8320, b__8322, c__8324, d__8326, e__8328, f__8330, g__8332, h__8334, i__8336, j__8338, k__8340, l__8342, m__8344)
                              }
                            }else {
                              var n__8346 = cljs.core._first.call(null, args__8345);
                              var args__8347 = cljs.core._rest.call(null, args__8345);
                              if(argc === 14) {
                                if(f__8330.cljs$lang$arity$14) {
                                  return f__8330.cljs$lang$arity$14(a__8320, b__8322, c__8324, d__8326, e__8328, f__8330, g__8332, h__8334, i__8336, j__8338, k__8340, l__8342, m__8344, n__8346)
                                }else {
                                  return f__8330.call(null, a__8320, b__8322, c__8324, d__8326, e__8328, f__8330, g__8332, h__8334, i__8336, j__8338, k__8340, l__8342, m__8344, n__8346)
                                }
                              }else {
                                var o__8348 = cljs.core._first.call(null, args__8347);
                                var args__8349 = cljs.core._rest.call(null, args__8347);
                                if(argc === 15) {
                                  if(f__8330.cljs$lang$arity$15) {
                                    return f__8330.cljs$lang$arity$15(a__8320, b__8322, c__8324, d__8326, e__8328, f__8330, g__8332, h__8334, i__8336, j__8338, k__8340, l__8342, m__8344, n__8346, o__8348)
                                  }else {
                                    return f__8330.call(null, a__8320, b__8322, c__8324, d__8326, e__8328, f__8330, g__8332, h__8334, i__8336, j__8338, k__8340, l__8342, m__8344, n__8346, o__8348)
                                  }
                                }else {
                                  var p__8350 = cljs.core._first.call(null, args__8349);
                                  var args__8351 = cljs.core._rest.call(null, args__8349);
                                  if(argc === 16) {
                                    if(f__8330.cljs$lang$arity$16) {
                                      return f__8330.cljs$lang$arity$16(a__8320, b__8322, c__8324, d__8326, e__8328, f__8330, g__8332, h__8334, i__8336, j__8338, k__8340, l__8342, m__8344, n__8346, o__8348, p__8350)
                                    }else {
                                      return f__8330.call(null, a__8320, b__8322, c__8324, d__8326, e__8328, f__8330, g__8332, h__8334, i__8336, j__8338, k__8340, l__8342, m__8344, n__8346, o__8348, p__8350)
                                    }
                                  }else {
                                    var q__8352 = cljs.core._first.call(null, args__8351);
                                    var args__8353 = cljs.core._rest.call(null, args__8351);
                                    if(argc === 17) {
                                      if(f__8330.cljs$lang$arity$17) {
                                        return f__8330.cljs$lang$arity$17(a__8320, b__8322, c__8324, d__8326, e__8328, f__8330, g__8332, h__8334, i__8336, j__8338, k__8340, l__8342, m__8344, n__8346, o__8348, p__8350, q__8352)
                                      }else {
                                        return f__8330.call(null, a__8320, b__8322, c__8324, d__8326, e__8328, f__8330, g__8332, h__8334, i__8336, j__8338, k__8340, l__8342, m__8344, n__8346, o__8348, p__8350, q__8352)
                                      }
                                    }else {
                                      var r__8354 = cljs.core._first.call(null, args__8353);
                                      var args__8355 = cljs.core._rest.call(null, args__8353);
                                      if(argc === 18) {
                                        if(f__8330.cljs$lang$arity$18) {
                                          return f__8330.cljs$lang$arity$18(a__8320, b__8322, c__8324, d__8326, e__8328, f__8330, g__8332, h__8334, i__8336, j__8338, k__8340, l__8342, m__8344, n__8346, o__8348, p__8350, q__8352, r__8354)
                                        }else {
                                          return f__8330.call(null, a__8320, b__8322, c__8324, d__8326, e__8328, f__8330, g__8332, h__8334, i__8336, j__8338, k__8340, l__8342, m__8344, n__8346, o__8348, p__8350, q__8352, r__8354)
                                        }
                                      }else {
                                        var s__8356 = cljs.core._first.call(null, args__8355);
                                        var args__8357 = cljs.core._rest.call(null, args__8355);
                                        if(argc === 19) {
                                          if(f__8330.cljs$lang$arity$19) {
                                            return f__8330.cljs$lang$arity$19(a__8320, b__8322, c__8324, d__8326, e__8328, f__8330, g__8332, h__8334, i__8336, j__8338, k__8340, l__8342, m__8344, n__8346, o__8348, p__8350, q__8352, r__8354, s__8356)
                                          }else {
                                            return f__8330.call(null, a__8320, b__8322, c__8324, d__8326, e__8328, f__8330, g__8332, h__8334, i__8336, j__8338, k__8340, l__8342, m__8344, n__8346, o__8348, p__8350, q__8352, r__8354, s__8356)
                                          }
                                        }else {
                                          var t__8358 = cljs.core._first.call(null, args__8357);
                                          var args__8359 = cljs.core._rest.call(null, args__8357);
                                          if(argc === 20) {
                                            if(f__8330.cljs$lang$arity$20) {
                                              return f__8330.cljs$lang$arity$20(a__8320, b__8322, c__8324, d__8326, e__8328, f__8330, g__8332, h__8334, i__8336, j__8338, k__8340, l__8342, m__8344, n__8346, o__8348, p__8350, q__8352, r__8354, s__8356, t__8358)
                                            }else {
                                              return f__8330.call(null, a__8320, b__8322, c__8324, d__8326, e__8328, f__8330, g__8332, h__8334, i__8336, j__8338, k__8340, l__8342, m__8344, n__8346, o__8348, p__8350, q__8352, r__8354, s__8356, t__8358)
                                            }
                                          }else {
                                            throw new Error("Only up to 20 arguments supported on functions");
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.apply = function() {
  var apply = null;
  var apply__2 = function(f, args) {
    var fixed_arity__8374 = f.cljs$lang$maxFixedArity;
    if(cljs.core.truth_(f.cljs$lang$applyTo)) {
      var bc__8375 = cljs.core.bounded_count.call(null, args, fixed_arity__8374 + 1);
      if(bc__8375 <= fixed_arity__8374) {
        return cljs.core.apply_to.call(null, f, bc__8375, args)
      }else {
        return f.cljs$lang$applyTo(args)
      }
    }else {
      return f.apply(f, cljs.core.to_array.call(null, args))
    }
  };
  var apply__3 = function(f, x, args) {
    var arglist__8376 = cljs.core.list_STAR_.call(null, x, args);
    var fixed_arity__8377 = f.cljs$lang$maxFixedArity;
    if(cljs.core.truth_(f.cljs$lang$applyTo)) {
      var bc__8378 = cljs.core.bounded_count.call(null, arglist__8376, fixed_arity__8377 + 1);
      if(bc__8378 <= fixed_arity__8377) {
        return cljs.core.apply_to.call(null, f, bc__8378, arglist__8376)
      }else {
        return f.cljs$lang$applyTo(arglist__8376)
      }
    }else {
      return f.apply(f, cljs.core.to_array.call(null, arglist__8376))
    }
  };
  var apply__4 = function(f, x, y, args) {
    var arglist__8379 = cljs.core.list_STAR_.call(null, x, y, args);
    var fixed_arity__8380 = f.cljs$lang$maxFixedArity;
    if(cljs.core.truth_(f.cljs$lang$applyTo)) {
      var bc__8381 = cljs.core.bounded_count.call(null, arglist__8379, fixed_arity__8380 + 1);
      if(bc__8381 <= fixed_arity__8380) {
        return cljs.core.apply_to.call(null, f, bc__8381, arglist__8379)
      }else {
        return f.cljs$lang$applyTo(arglist__8379)
      }
    }else {
      return f.apply(f, cljs.core.to_array.call(null, arglist__8379))
    }
  };
  var apply__5 = function(f, x, y, z, args) {
    var arglist__8382 = cljs.core.list_STAR_.call(null, x, y, z, args);
    var fixed_arity__8383 = f.cljs$lang$maxFixedArity;
    if(cljs.core.truth_(f.cljs$lang$applyTo)) {
      var bc__8384 = cljs.core.bounded_count.call(null, arglist__8382, fixed_arity__8383 + 1);
      if(bc__8384 <= fixed_arity__8383) {
        return cljs.core.apply_to.call(null, f, bc__8384, arglist__8382)
      }else {
        return f.cljs$lang$applyTo(arglist__8382)
      }
    }else {
      return f.apply(f, cljs.core.to_array.call(null, arglist__8382))
    }
  };
  var apply__6 = function() {
    var G__8388__delegate = function(f, a, b, c, d, args) {
      var arglist__8385 = cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, cljs.core.cons.call(null, c, cljs.core.cons.call(null, d, cljs.core.spread.call(null, args)))));
      var fixed_arity__8386 = f.cljs$lang$maxFixedArity;
      if(cljs.core.truth_(f.cljs$lang$applyTo)) {
        var bc__8387 = cljs.core.bounded_count.call(null, arglist__8385, fixed_arity__8386 + 1);
        if(bc__8387 <= fixed_arity__8386) {
          return cljs.core.apply_to.call(null, f, bc__8387, arglist__8385)
        }else {
          return f.cljs$lang$applyTo(arglist__8385)
        }
      }else {
        return f.apply(f, cljs.core.to_array.call(null, arglist__8385))
      }
    };
    var G__8388 = function(f, a, b, c, d, var_args) {
      var args = null;
      if(goog.isDef(var_args)) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 5), 0)
      }
      return G__8388__delegate.call(this, f, a, b, c, d, args)
    };
    G__8388.cljs$lang$maxFixedArity = 5;
    G__8388.cljs$lang$applyTo = function(arglist__8389) {
      var f = cljs.core.first(arglist__8389);
      var a = cljs.core.first(cljs.core.next(arglist__8389));
      var b = cljs.core.first(cljs.core.next(cljs.core.next(arglist__8389)));
      var c = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(arglist__8389))));
      var d = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(cljs.core.next(arglist__8389)))));
      var args = cljs.core.rest(cljs.core.next(cljs.core.next(cljs.core.next(cljs.core.next(arglist__8389)))));
      return G__8388__delegate(f, a, b, c, d, args)
    };
    G__8388.cljs$lang$arity$variadic = G__8388__delegate;
    return G__8388
  }();
  apply = function(f, a, b, c, d, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 2:
        return apply__2.call(this, f, a);
      case 3:
        return apply__3.call(this, f, a, b);
      case 4:
        return apply__4.call(this, f, a, b, c);
      case 5:
        return apply__5.call(this, f, a, b, c, d);
      default:
        return apply__6.cljs$lang$arity$variadic(f, a, b, c, d, cljs.core.array_seq(arguments, 5))
    }
    throw"Invalid arity: " + arguments.length;
  };
  apply.cljs$lang$maxFixedArity = 5;
  apply.cljs$lang$applyTo = apply__6.cljs$lang$applyTo;
  apply.cljs$lang$arity$2 = apply__2;
  apply.cljs$lang$arity$3 = apply__3;
  apply.cljs$lang$arity$4 = apply__4;
  apply.cljs$lang$arity$5 = apply__5;
  apply.cljs$lang$arity$variadic = apply__6.cljs$lang$arity$variadic;
  return apply
}();
cljs.core.vary_meta = function() {
  var vary_meta__delegate = function(obj, f, args) {
    return cljs.core.with_meta.call(null, obj, cljs.core.apply.call(null, f, cljs.core.meta.call(null, obj), args))
  };
  var vary_meta = function(obj, f, var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return vary_meta__delegate.call(this, obj, f, args)
  };
  vary_meta.cljs$lang$maxFixedArity = 2;
  vary_meta.cljs$lang$applyTo = function(arglist__8390) {
    var obj = cljs.core.first(arglist__8390);
    var f = cljs.core.first(cljs.core.next(arglist__8390));
    var args = cljs.core.rest(cljs.core.next(arglist__8390));
    return vary_meta__delegate(obj, f, args)
  };
  vary_meta.cljs$lang$arity$variadic = vary_meta__delegate;
  return vary_meta
}();
cljs.core.not_EQ_ = function() {
  var not_EQ_ = null;
  var not_EQ___1 = function(x) {
    return false
  };
  var not_EQ___2 = function(x, y) {
    return!cljs.core._EQ_.call(null, x, y)
  };
  var not_EQ___3 = function() {
    var G__8391__delegate = function(x, y, more) {
      return cljs.core.not.call(null, cljs.core.apply.call(null, cljs.core._EQ_, x, y, more))
    };
    var G__8391 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__8391__delegate.call(this, x, y, more)
    };
    G__8391.cljs$lang$maxFixedArity = 2;
    G__8391.cljs$lang$applyTo = function(arglist__8392) {
      var x = cljs.core.first(arglist__8392);
      var y = cljs.core.first(cljs.core.next(arglist__8392));
      var more = cljs.core.rest(cljs.core.next(arglist__8392));
      return G__8391__delegate(x, y, more)
    };
    G__8391.cljs$lang$arity$variadic = G__8391__delegate;
    return G__8391
  }();
  not_EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return not_EQ___1.call(this, x);
      case 2:
        return not_EQ___2.call(this, x, y);
      default:
        return not_EQ___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  not_EQ_.cljs$lang$maxFixedArity = 2;
  not_EQ_.cljs$lang$applyTo = not_EQ___3.cljs$lang$applyTo;
  not_EQ_.cljs$lang$arity$1 = not_EQ___1;
  not_EQ_.cljs$lang$arity$2 = not_EQ___2;
  not_EQ_.cljs$lang$arity$variadic = not_EQ___3.cljs$lang$arity$variadic;
  return not_EQ_
}();
cljs.core.not_empty = function not_empty(coll) {
  if(cljs.core.seq.call(null, coll)) {
    return coll
  }else {
    return null
  }
};
cljs.core.every_QMARK_ = function every_QMARK_(pred, coll) {
  while(true) {
    if(cljs.core.seq.call(null, coll) == null) {
      return true
    }else {
      if(cljs.core.truth_(pred.call(null, cljs.core.first.call(null, coll)))) {
        var G__8393 = pred;
        var G__8394 = cljs.core.next.call(null, coll);
        pred = G__8393;
        coll = G__8394;
        continue
      }else {
        if("\ufdd0'else") {
          return false
        }else {
          return null
        }
      }
    }
    break
  }
};
cljs.core.not_every_QMARK_ = function not_every_QMARK_(pred, coll) {
  return!cljs.core.every_QMARK_.call(null, pred, coll)
};
cljs.core.some = function some(pred, coll) {
  while(true) {
    if(cljs.core.seq.call(null, coll)) {
      var or__3943__auto____8396 = pred.call(null, cljs.core.first.call(null, coll));
      if(cljs.core.truth_(or__3943__auto____8396)) {
        return or__3943__auto____8396
      }else {
        var G__8397 = pred;
        var G__8398 = cljs.core.next.call(null, coll);
        pred = G__8397;
        coll = G__8398;
        continue
      }
    }else {
      return null
    }
    break
  }
};
cljs.core.not_any_QMARK_ = function not_any_QMARK_(pred, coll) {
  return cljs.core.not.call(null, cljs.core.some.call(null, pred, coll))
};
cljs.core.even_QMARK_ = function even_QMARK_(n) {
  if(cljs.core.integer_QMARK_.call(null, n)) {
    return(n & 1) === 0
  }else {
    throw new Error([cljs.core.str("Argument must be an integer: "), cljs.core.str(n)].join(""));
  }
};
cljs.core.odd_QMARK_ = function odd_QMARK_(n) {
  return!cljs.core.even_QMARK_.call(null, n)
};
cljs.core.identity = function identity(x) {
  return x
};
cljs.core.complement = function complement(f) {
  return function() {
    var G__8399 = null;
    var G__8399__0 = function() {
      return cljs.core.not.call(null, f.call(null))
    };
    var G__8399__1 = function(x) {
      return cljs.core.not.call(null, f.call(null, x))
    };
    var G__8399__2 = function(x, y) {
      return cljs.core.not.call(null, f.call(null, x, y))
    };
    var G__8399__3 = function() {
      var G__8400__delegate = function(x, y, zs) {
        return cljs.core.not.call(null, cljs.core.apply.call(null, f, x, y, zs))
      };
      var G__8400 = function(x, y, var_args) {
        var zs = null;
        if(goog.isDef(var_args)) {
          zs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
        }
        return G__8400__delegate.call(this, x, y, zs)
      };
      G__8400.cljs$lang$maxFixedArity = 2;
      G__8400.cljs$lang$applyTo = function(arglist__8401) {
        var x = cljs.core.first(arglist__8401);
        var y = cljs.core.first(cljs.core.next(arglist__8401));
        var zs = cljs.core.rest(cljs.core.next(arglist__8401));
        return G__8400__delegate(x, y, zs)
      };
      G__8400.cljs$lang$arity$variadic = G__8400__delegate;
      return G__8400
    }();
    G__8399 = function(x, y, var_args) {
      var zs = var_args;
      switch(arguments.length) {
        case 0:
          return G__8399__0.call(this);
        case 1:
          return G__8399__1.call(this, x);
        case 2:
          return G__8399__2.call(this, x, y);
        default:
          return G__8399__3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
      }
      throw"Invalid arity: " + arguments.length;
    };
    G__8399.cljs$lang$maxFixedArity = 2;
    G__8399.cljs$lang$applyTo = G__8399__3.cljs$lang$applyTo;
    return G__8399
  }()
};
cljs.core.constantly = function constantly(x) {
  return function() {
    var G__8402__delegate = function(args) {
      return x
    };
    var G__8402 = function(var_args) {
      var args = null;
      if(goog.isDef(var_args)) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
      }
      return G__8402__delegate.call(this, args)
    };
    G__8402.cljs$lang$maxFixedArity = 0;
    G__8402.cljs$lang$applyTo = function(arglist__8403) {
      var args = cljs.core.seq(arglist__8403);
      return G__8402__delegate(args)
    };
    G__8402.cljs$lang$arity$variadic = G__8402__delegate;
    return G__8402
  }()
};
cljs.core.comp = function() {
  var comp = null;
  var comp__0 = function() {
    return cljs.core.identity
  };
  var comp__1 = function(f) {
    return f
  };
  var comp__2 = function(f, g) {
    return function() {
      var G__8410 = null;
      var G__8410__0 = function() {
        return f.call(null, g.call(null))
      };
      var G__8410__1 = function(x) {
        return f.call(null, g.call(null, x))
      };
      var G__8410__2 = function(x, y) {
        return f.call(null, g.call(null, x, y))
      };
      var G__8410__3 = function(x, y, z) {
        return f.call(null, g.call(null, x, y, z))
      };
      var G__8410__4 = function() {
        var G__8411__delegate = function(x, y, z, args) {
          return f.call(null, cljs.core.apply.call(null, g, x, y, z, args))
        };
        var G__8411 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__8411__delegate.call(this, x, y, z, args)
        };
        G__8411.cljs$lang$maxFixedArity = 3;
        G__8411.cljs$lang$applyTo = function(arglist__8412) {
          var x = cljs.core.first(arglist__8412);
          var y = cljs.core.first(cljs.core.next(arglist__8412));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__8412)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__8412)));
          return G__8411__delegate(x, y, z, args)
        };
        G__8411.cljs$lang$arity$variadic = G__8411__delegate;
        return G__8411
      }();
      G__8410 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__8410__0.call(this);
          case 1:
            return G__8410__1.call(this, x);
          case 2:
            return G__8410__2.call(this, x, y);
          case 3:
            return G__8410__3.call(this, x, y, z);
          default:
            return G__8410__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__8410.cljs$lang$maxFixedArity = 3;
      G__8410.cljs$lang$applyTo = G__8410__4.cljs$lang$applyTo;
      return G__8410
    }()
  };
  var comp__3 = function(f, g, h) {
    return function() {
      var G__8413 = null;
      var G__8413__0 = function() {
        return f.call(null, g.call(null, h.call(null)))
      };
      var G__8413__1 = function(x) {
        return f.call(null, g.call(null, h.call(null, x)))
      };
      var G__8413__2 = function(x, y) {
        return f.call(null, g.call(null, h.call(null, x, y)))
      };
      var G__8413__3 = function(x, y, z) {
        return f.call(null, g.call(null, h.call(null, x, y, z)))
      };
      var G__8413__4 = function() {
        var G__8414__delegate = function(x, y, z, args) {
          return f.call(null, g.call(null, cljs.core.apply.call(null, h, x, y, z, args)))
        };
        var G__8414 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__8414__delegate.call(this, x, y, z, args)
        };
        G__8414.cljs$lang$maxFixedArity = 3;
        G__8414.cljs$lang$applyTo = function(arglist__8415) {
          var x = cljs.core.first(arglist__8415);
          var y = cljs.core.first(cljs.core.next(arglist__8415));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__8415)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__8415)));
          return G__8414__delegate(x, y, z, args)
        };
        G__8414.cljs$lang$arity$variadic = G__8414__delegate;
        return G__8414
      }();
      G__8413 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__8413__0.call(this);
          case 1:
            return G__8413__1.call(this, x);
          case 2:
            return G__8413__2.call(this, x, y);
          case 3:
            return G__8413__3.call(this, x, y, z);
          default:
            return G__8413__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__8413.cljs$lang$maxFixedArity = 3;
      G__8413.cljs$lang$applyTo = G__8413__4.cljs$lang$applyTo;
      return G__8413
    }()
  };
  var comp__4 = function() {
    var G__8416__delegate = function(f1, f2, f3, fs) {
      var fs__8407 = cljs.core.reverse.call(null, cljs.core.list_STAR_.call(null, f1, f2, f3, fs));
      return function() {
        var G__8417__delegate = function(args) {
          var ret__8408 = cljs.core.apply.call(null, cljs.core.first.call(null, fs__8407), args);
          var fs__8409 = cljs.core.next.call(null, fs__8407);
          while(true) {
            if(fs__8409) {
              var G__8418 = cljs.core.first.call(null, fs__8409).call(null, ret__8408);
              var G__8419 = cljs.core.next.call(null, fs__8409);
              ret__8408 = G__8418;
              fs__8409 = G__8419;
              continue
            }else {
              return ret__8408
            }
            break
          }
        };
        var G__8417 = function(var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
          }
          return G__8417__delegate.call(this, args)
        };
        G__8417.cljs$lang$maxFixedArity = 0;
        G__8417.cljs$lang$applyTo = function(arglist__8420) {
          var args = cljs.core.seq(arglist__8420);
          return G__8417__delegate(args)
        };
        G__8417.cljs$lang$arity$variadic = G__8417__delegate;
        return G__8417
      }()
    };
    var G__8416 = function(f1, f2, f3, var_args) {
      var fs = null;
      if(goog.isDef(var_args)) {
        fs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__8416__delegate.call(this, f1, f2, f3, fs)
    };
    G__8416.cljs$lang$maxFixedArity = 3;
    G__8416.cljs$lang$applyTo = function(arglist__8421) {
      var f1 = cljs.core.first(arglist__8421);
      var f2 = cljs.core.first(cljs.core.next(arglist__8421));
      var f3 = cljs.core.first(cljs.core.next(cljs.core.next(arglist__8421)));
      var fs = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__8421)));
      return G__8416__delegate(f1, f2, f3, fs)
    };
    G__8416.cljs$lang$arity$variadic = G__8416__delegate;
    return G__8416
  }();
  comp = function(f1, f2, f3, var_args) {
    var fs = var_args;
    switch(arguments.length) {
      case 0:
        return comp__0.call(this);
      case 1:
        return comp__1.call(this, f1);
      case 2:
        return comp__2.call(this, f1, f2);
      case 3:
        return comp__3.call(this, f1, f2, f3);
      default:
        return comp__4.cljs$lang$arity$variadic(f1, f2, f3, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  comp.cljs$lang$maxFixedArity = 3;
  comp.cljs$lang$applyTo = comp__4.cljs$lang$applyTo;
  comp.cljs$lang$arity$0 = comp__0;
  comp.cljs$lang$arity$1 = comp__1;
  comp.cljs$lang$arity$2 = comp__2;
  comp.cljs$lang$arity$3 = comp__3;
  comp.cljs$lang$arity$variadic = comp__4.cljs$lang$arity$variadic;
  return comp
}();
cljs.core.partial = function() {
  var partial = null;
  var partial__2 = function(f, arg1) {
    return function() {
      var G__8422__delegate = function(args) {
        return cljs.core.apply.call(null, f, arg1, args)
      };
      var G__8422 = function(var_args) {
        var args = null;
        if(goog.isDef(var_args)) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
        }
        return G__8422__delegate.call(this, args)
      };
      G__8422.cljs$lang$maxFixedArity = 0;
      G__8422.cljs$lang$applyTo = function(arglist__8423) {
        var args = cljs.core.seq(arglist__8423);
        return G__8422__delegate(args)
      };
      G__8422.cljs$lang$arity$variadic = G__8422__delegate;
      return G__8422
    }()
  };
  var partial__3 = function(f, arg1, arg2) {
    return function() {
      var G__8424__delegate = function(args) {
        return cljs.core.apply.call(null, f, arg1, arg2, args)
      };
      var G__8424 = function(var_args) {
        var args = null;
        if(goog.isDef(var_args)) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
        }
        return G__8424__delegate.call(this, args)
      };
      G__8424.cljs$lang$maxFixedArity = 0;
      G__8424.cljs$lang$applyTo = function(arglist__8425) {
        var args = cljs.core.seq(arglist__8425);
        return G__8424__delegate(args)
      };
      G__8424.cljs$lang$arity$variadic = G__8424__delegate;
      return G__8424
    }()
  };
  var partial__4 = function(f, arg1, arg2, arg3) {
    return function() {
      var G__8426__delegate = function(args) {
        return cljs.core.apply.call(null, f, arg1, arg2, arg3, args)
      };
      var G__8426 = function(var_args) {
        var args = null;
        if(goog.isDef(var_args)) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
        }
        return G__8426__delegate.call(this, args)
      };
      G__8426.cljs$lang$maxFixedArity = 0;
      G__8426.cljs$lang$applyTo = function(arglist__8427) {
        var args = cljs.core.seq(arglist__8427);
        return G__8426__delegate(args)
      };
      G__8426.cljs$lang$arity$variadic = G__8426__delegate;
      return G__8426
    }()
  };
  var partial__5 = function() {
    var G__8428__delegate = function(f, arg1, arg2, arg3, more) {
      return function() {
        var G__8429__delegate = function(args) {
          return cljs.core.apply.call(null, f, arg1, arg2, arg3, cljs.core.concat.call(null, more, args))
        };
        var G__8429 = function(var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
          }
          return G__8429__delegate.call(this, args)
        };
        G__8429.cljs$lang$maxFixedArity = 0;
        G__8429.cljs$lang$applyTo = function(arglist__8430) {
          var args = cljs.core.seq(arglist__8430);
          return G__8429__delegate(args)
        };
        G__8429.cljs$lang$arity$variadic = G__8429__delegate;
        return G__8429
      }()
    };
    var G__8428 = function(f, arg1, arg2, arg3, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0)
      }
      return G__8428__delegate.call(this, f, arg1, arg2, arg3, more)
    };
    G__8428.cljs$lang$maxFixedArity = 4;
    G__8428.cljs$lang$applyTo = function(arglist__8431) {
      var f = cljs.core.first(arglist__8431);
      var arg1 = cljs.core.first(cljs.core.next(arglist__8431));
      var arg2 = cljs.core.first(cljs.core.next(cljs.core.next(arglist__8431)));
      var arg3 = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(arglist__8431))));
      var more = cljs.core.rest(cljs.core.next(cljs.core.next(cljs.core.next(arglist__8431))));
      return G__8428__delegate(f, arg1, arg2, arg3, more)
    };
    G__8428.cljs$lang$arity$variadic = G__8428__delegate;
    return G__8428
  }();
  partial = function(f, arg1, arg2, arg3, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return partial__2.call(this, f, arg1);
      case 3:
        return partial__3.call(this, f, arg1, arg2);
      case 4:
        return partial__4.call(this, f, arg1, arg2, arg3);
      default:
        return partial__5.cljs$lang$arity$variadic(f, arg1, arg2, arg3, cljs.core.array_seq(arguments, 4))
    }
    throw"Invalid arity: " + arguments.length;
  };
  partial.cljs$lang$maxFixedArity = 4;
  partial.cljs$lang$applyTo = partial__5.cljs$lang$applyTo;
  partial.cljs$lang$arity$2 = partial__2;
  partial.cljs$lang$arity$3 = partial__3;
  partial.cljs$lang$arity$4 = partial__4;
  partial.cljs$lang$arity$variadic = partial__5.cljs$lang$arity$variadic;
  return partial
}();
cljs.core.fnil = function() {
  var fnil = null;
  var fnil__2 = function(f, x) {
    return function() {
      var G__8432 = null;
      var G__8432__1 = function(a) {
        return f.call(null, a == null ? x : a)
      };
      var G__8432__2 = function(a, b) {
        return f.call(null, a == null ? x : a, b)
      };
      var G__8432__3 = function(a, b, c) {
        return f.call(null, a == null ? x : a, b, c)
      };
      var G__8432__4 = function() {
        var G__8433__delegate = function(a, b, c, ds) {
          return cljs.core.apply.call(null, f, a == null ? x : a, b, c, ds)
        };
        var G__8433 = function(a, b, c, var_args) {
          var ds = null;
          if(goog.isDef(var_args)) {
            ds = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__8433__delegate.call(this, a, b, c, ds)
        };
        G__8433.cljs$lang$maxFixedArity = 3;
        G__8433.cljs$lang$applyTo = function(arglist__8434) {
          var a = cljs.core.first(arglist__8434);
          var b = cljs.core.first(cljs.core.next(arglist__8434));
          var c = cljs.core.first(cljs.core.next(cljs.core.next(arglist__8434)));
          var ds = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__8434)));
          return G__8433__delegate(a, b, c, ds)
        };
        G__8433.cljs$lang$arity$variadic = G__8433__delegate;
        return G__8433
      }();
      G__8432 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 1:
            return G__8432__1.call(this, a);
          case 2:
            return G__8432__2.call(this, a, b);
          case 3:
            return G__8432__3.call(this, a, b, c);
          default:
            return G__8432__4.cljs$lang$arity$variadic(a, b, c, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__8432.cljs$lang$maxFixedArity = 3;
      G__8432.cljs$lang$applyTo = G__8432__4.cljs$lang$applyTo;
      return G__8432
    }()
  };
  var fnil__3 = function(f, x, y) {
    return function() {
      var G__8435 = null;
      var G__8435__2 = function(a, b) {
        return f.call(null, a == null ? x : a, b == null ? y : b)
      };
      var G__8435__3 = function(a, b, c) {
        return f.call(null, a == null ? x : a, b == null ? y : b, c)
      };
      var G__8435__4 = function() {
        var G__8436__delegate = function(a, b, c, ds) {
          return cljs.core.apply.call(null, f, a == null ? x : a, b == null ? y : b, c, ds)
        };
        var G__8436 = function(a, b, c, var_args) {
          var ds = null;
          if(goog.isDef(var_args)) {
            ds = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__8436__delegate.call(this, a, b, c, ds)
        };
        G__8436.cljs$lang$maxFixedArity = 3;
        G__8436.cljs$lang$applyTo = function(arglist__8437) {
          var a = cljs.core.first(arglist__8437);
          var b = cljs.core.first(cljs.core.next(arglist__8437));
          var c = cljs.core.first(cljs.core.next(cljs.core.next(arglist__8437)));
          var ds = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__8437)));
          return G__8436__delegate(a, b, c, ds)
        };
        G__8436.cljs$lang$arity$variadic = G__8436__delegate;
        return G__8436
      }();
      G__8435 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 2:
            return G__8435__2.call(this, a, b);
          case 3:
            return G__8435__3.call(this, a, b, c);
          default:
            return G__8435__4.cljs$lang$arity$variadic(a, b, c, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__8435.cljs$lang$maxFixedArity = 3;
      G__8435.cljs$lang$applyTo = G__8435__4.cljs$lang$applyTo;
      return G__8435
    }()
  };
  var fnil__4 = function(f, x, y, z) {
    return function() {
      var G__8438 = null;
      var G__8438__2 = function(a, b) {
        return f.call(null, a == null ? x : a, b == null ? y : b)
      };
      var G__8438__3 = function(a, b, c) {
        return f.call(null, a == null ? x : a, b == null ? y : b, c == null ? z : c)
      };
      var G__8438__4 = function() {
        var G__8439__delegate = function(a, b, c, ds) {
          return cljs.core.apply.call(null, f, a == null ? x : a, b == null ? y : b, c == null ? z : c, ds)
        };
        var G__8439 = function(a, b, c, var_args) {
          var ds = null;
          if(goog.isDef(var_args)) {
            ds = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__8439__delegate.call(this, a, b, c, ds)
        };
        G__8439.cljs$lang$maxFixedArity = 3;
        G__8439.cljs$lang$applyTo = function(arglist__8440) {
          var a = cljs.core.first(arglist__8440);
          var b = cljs.core.first(cljs.core.next(arglist__8440));
          var c = cljs.core.first(cljs.core.next(cljs.core.next(arglist__8440)));
          var ds = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__8440)));
          return G__8439__delegate(a, b, c, ds)
        };
        G__8439.cljs$lang$arity$variadic = G__8439__delegate;
        return G__8439
      }();
      G__8438 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 2:
            return G__8438__2.call(this, a, b);
          case 3:
            return G__8438__3.call(this, a, b, c);
          default:
            return G__8438__4.cljs$lang$arity$variadic(a, b, c, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__8438.cljs$lang$maxFixedArity = 3;
      G__8438.cljs$lang$applyTo = G__8438__4.cljs$lang$applyTo;
      return G__8438
    }()
  };
  fnil = function(f, x, y, z) {
    switch(arguments.length) {
      case 2:
        return fnil__2.call(this, f, x);
      case 3:
        return fnil__3.call(this, f, x, y);
      case 4:
        return fnil__4.call(this, f, x, y, z)
    }
    throw"Invalid arity: " + arguments.length;
  };
  fnil.cljs$lang$arity$2 = fnil__2;
  fnil.cljs$lang$arity$3 = fnil__3;
  fnil.cljs$lang$arity$4 = fnil__4;
  return fnil
}();
cljs.core.map_indexed = function map_indexed(f, coll) {
  var mapi__8456 = function mapi(idx, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__4092__auto____8464 = cljs.core.seq.call(null, coll);
      if(temp__4092__auto____8464) {
        var s__8465 = temp__4092__auto____8464;
        if(cljs.core.chunked_seq_QMARK_.call(null, s__8465)) {
          var c__8466 = cljs.core.chunk_first.call(null, s__8465);
          var size__8467 = cljs.core.count.call(null, c__8466);
          var b__8468 = cljs.core.chunk_buffer.call(null, size__8467);
          var n__2478__auto____8469 = size__8467;
          var i__8470 = 0;
          while(true) {
            if(i__8470 < n__2478__auto____8469) {
              cljs.core.chunk_append.call(null, b__8468, f.call(null, idx + i__8470, cljs.core._nth.call(null, c__8466, i__8470)));
              var G__8471 = i__8470 + 1;
              i__8470 = G__8471;
              continue
            }else {
            }
            break
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__8468), mapi.call(null, idx + size__8467, cljs.core.chunk_rest.call(null, s__8465)))
        }else {
          return cljs.core.cons.call(null, f.call(null, idx, cljs.core.first.call(null, s__8465)), mapi.call(null, idx + 1, cljs.core.rest.call(null, s__8465)))
        }
      }else {
        return null
      }
    }, null)
  };
  return mapi__8456.call(null, 0, coll)
};
cljs.core.keep = function keep(f, coll) {
  return new cljs.core.LazySeq(null, false, function() {
    var temp__4092__auto____8481 = cljs.core.seq.call(null, coll);
    if(temp__4092__auto____8481) {
      var s__8482 = temp__4092__auto____8481;
      if(cljs.core.chunked_seq_QMARK_.call(null, s__8482)) {
        var c__8483 = cljs.core.chunk_first.call(null, s__8482);
        var size__8484 = cljs.core.count.call(null, c__8483);
        var b__8485 = cljs.core.chunk_buffer.call(null, size__8484);
        var n__2478__auto____8486 = size__8484;
        var i__8487 = 0;
        while(true) {
          if(i__8487 < n__2478__auto____8486) {
            var x__8488 = f.call(null, cljs.core._nth.call(null, c__8483, i__8487));
            if(x__8488 == null) {
            }else {
              cljs.core.chunk_append.call(null, b__8485, x__8488)
            }
            var G__8490 = i__8487 + 1;
            i__8487 = G__8490;
            continue
          }else {
          }
          break
        }
        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__8485), keep.call(null, f, cljs.core.chunk_rest.call(null, s__8482)))
      }else {
        var x__8489 = f.call(null, cljs.core.first.call(null, s__8482));
        if(x__8489 == null) {
          return keep.call(null, f, cljs.core.rest.call(null, s__8482))
        }else {
          return cljs.core.cons.call(null, x__8489, keep.call(null, f, cljs.core.rest.call(null, s__8482)))
        }
      }
    }else {
      return null
    }
  }, null)
};
cljs.core.keep_indexed = function keep_indexed(f, coll) {
  var keepi__8516 = function keepi(idx, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__4092__auto____8526 = cljs.core.seq.call(null, coll);
      if(temp__4092__auto____8526) {
        var s__8527 = temp__4092__auto____8526;
        if(cljs.core.chunked_seq_QMARK_.call(null, s__8527)) {
          var c__8528 = cljs.core.chunk_first.call(null, s__8527);
          var size__8529 = cljs.core.count.call(null, c__8528);
          var b__8530 = cljs.core.chunk_buffer.call(null, size__8529);
          var n__2478__auto____8531 = size__8529;
          var i__8532 = 0;
          while(true) {
            if(i__8532 < n__2478__auto____8531) {
              var x__8533 = f.call(null, idx + i__8532, cljs.core._nth.call(null, c__8528, i__8532));
              if(x__8533 == null) {
              }else {
                cljs.core.chunk_append.call(null, b__8530, x__8533)
              }
              var G__8535 = i__8532 + 1;
              i__8532 = G__8535;
              continue
            }else {
            }
            break
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__8530), keepi.call(null, idx + size__8529, cljs.core.chunk_rest.call(null, s__8527)))
        }else {
          var x__8534 = f.call(null, idx, cljs.core.first.call(null, s__8527));
          if(x__8534 == null) {
            return keepi.call(null, idx + 1, cljs.core.rest.call(null, s__8527))
          }else {
            return cljs.core.cons.call(null, x__8534, keepi.call(null, idx + 1, cljs.core.rest.call(null, s__8527)))
          }
        }
      }else {
        return null
      }
    }, null)
  };
  return keepi__8516.call(null, 0, coll)
};
cljs.core.every_pred = function() {
  var every_pred = null;
  var every_pred__1 = function(p) {
    return function() {
      var ep1 = null;
      var ep1__0 = function() {
        return true
      };
      var ep1__1 = function(x) {
        return cljs.core.boolean$.call(null, p.call(null, x))
      };
      var ep1__2 = function(x, y) {
        return cljs.core.boolean$.call(null, function() {
          var and__3941__auto____8621 = p.call(null, x);
          if(cljs.core.truth_(and__3941__auto____8621)) {
            return p.call(null, y)
          }else {
            return and__3941__auto____8621
          }
        }())
      };
      var ep1__3 = function(x, y, z) {
        return cljs.core.boolean$.call(null, function() {
          var and__3941__auto____8622 = p.call(null, x);
          if(cljs.core.truth_(and__3941__auto____8622)) {
            var and__3941__auto____8623 = p.call(null, y);
            if(cljs.core.truth_(and__3941__auto____8623)) {
              return p.call(null, z)
            }else {
              return and__3941__auto____8623
            }
          }else {
            return and__3941__auto____8622
          }
        }())
      };
      var ep1__4 = function() {
        var G__8692__delegate = function(x, y, z, args) {
          return cljs.core.boolean$.call(null, function() {
            var and__3941__auto____8624 = ep1.call(null, x, y, z);
            if(cljs.core.truth_(and__3941__auto____8624)) {
              return cljs.core.every_QMARK_.call(null, p, args)
            }else {
              return and__3941__auto____8624
            }
          }())
        };
        var G__8692 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__8692__delegate.call(this, x, y, z, args)
        };
        G__8692.cljs$lang$maxFixedArity = 3;
        G__8692.cljs$lang$applyTo = function(arglist__8693) {
          var x = cljs.core.first(arglist__8693);
          var y = cljs.core.first(cljs.core.next(arglist__8693));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__8693)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__8693)));
          return G__8692__delegate(x, y, z, args)
        };
        G__8692.cljs$lang$arity$variadic = G__8692__delegate;
        return G__8692
      }();
      ep1 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep1__0.call(this);
          case 1:
            return ep1__1.call(this, x);
          case 2:
            return ep1__2.call(this, x, y);
          case 3:
            return ep1__3.call(this, x, y, z);
          default:
            return ep1__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      ep1.cljs$lang$maxFixedArity = 3;
      ep1.cljs$lang$applyTo = ep1__4.cljs$lang$applyTo;
      ep1.cljs$lang$arity$0 = ep1__0;
      ep1.cljs$lang$arity$1 = ep1__1;
      ep1.cljs$lang$arity$2 = ep1__2;
      ep1.cljs$lang$arity$3 = ep1__3;
      ep1.cljs$lang$arity$variadic = ep1__4.cljs$lang$arity$variadic;
      return ep1
    }()
  };
  var every_pred__2 = function(p1, p2) {
    return function() {
      var ep2 = null;
      var ep2__0 = function() {
        return true
      };
      var ep2__1 = function(x) {
        return cljs.core.boolean$.call(null, function() {
          var and__3941__auto____8636 = p1.call(null, x);
          if(cljs.core.truth_(and__3941__auto____8636)) {
            return p2.call(null, x)
          }else {
            return and__3941__auto____8636
          }
        }())
      };
      var ep2__2 = function(x, y) {
        return cljs.core.boolean$.call(null, function() {
          var and__3941__auto____8637 = p1.call(null, x);
          if(cljs.core.truth_(and__3941__auto____8637)) {
            var and__3941__auto____8638 = p1.call(null, y);
            if(cljs.core.truth_(and__3941__auto____8638)) {
              var and__3941__auto____8639 = p2.call(null, x);
              if(cljs.core.truth_(and__3941__auto____8639)) {
                return p2.call(null, y)
              }else {
                return and__3941__auto____8639
              }
            }else {
              return and__3941__auto____8638
            }
          }else {
            return and__3941__auto____8637
          }
        }())
      };
      var ep2__3 = function(x, y, z) {
        return cljs.core.boolean$.call(null, function() {
          var and__3941__auto____8640 = p1.call(null, x);
          if(cljs.core.truth_(and__3941__auto____8640)) {
            var and__3941__auto____8641 = p1.call(null, y);
            if(cljs.core.truth_(and__3941__auto____8641)) {
              var and__3941__auto____8642 = p1.call(null, z);
              if(cljs.core.truth_(and__3941__auto____8642)) {
                var and__3941__auto____8643 = p2.call(null, x);
                if(cljs.core.truth_(and__3941__auto____8643)) {
                  var and__3941__auto____8644 = p2.call(null, y);
                  if(cljs.core.truth_(and__3941__auto____8644)) {
                    return p2.call(null, z)
                  }else {
                    return and__3941__auto____8644
                  }
                }else {
                  return and__3941__auto____8643
                }
              }else {
                return and__3941__auto____8642
              }
            }else {
              return and__3941__auto____8641
            }
          }else {
            return and__3941__auto____8640
          }
        }())
      };
      var ep2__4 = function() {
        var G__8694__delegate = function(x, y, z, args) {
          return cljs.core.boolean$.call(null, function() {
            var and__3941__auto____8645 = ep2.call(null, x, y, z);
            if(cljs.core.truth_(and__3941__auto____8645)) {
              return cljs.core.every_QMARK_.call(null, function(p1__8491_SHARP_) {
                var and__3941__auto____8646 = p1.call(null, p1__8491_SHARP_);
                if(cljs.core.truth_(and__3941__auto____8646)) {
                  return p2.call(null, p1__8491_SHARP_)
                }else {
                  return and__3941__auto____8646
                }
              }, args)
            }else {
              return and__3941__auto____8645
            }
          }())
        };
        var G__8694 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__8694__delegate.call(this, x, y, z, args)
        };
        G__8694.cljs$lang$maxFixedArity = 3;
        G__8694.cljs$lang$applyTo = function(arglist__8695) {
          var x = cljs.core.first(arglist__8695);
          var y = cljs.core.first(cljs.core.next(arglist__8695));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__8695)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__8695)));
          return G__8694__delegate(x, y, z, args)
        };
        G__8694.cljs$lang$arity$variadic = G__8694__delegate;
        return G__8694
      }();
      ep2 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep2__0.call(this);
          case 1:
            return ep2__1.call(this, x);
          case 2:
            return ep2__2.call(this, x, y);
          case 3:
            return ep2__3.call(this, x, y, z);
          default:
            return ep2__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      ep2.cljs$lang$maxFixedArity = 3;
      ep2.cljs$lang$applyTo = ep2__4.cljs$lang$applyTo;
      ep2.cljs$lang$arity$0 = ep2__0;
      ep2.cljs$lang$arity$1 = ep2__1;
      ep2.cljs$lang$arity$2 = ep2__2;
      ep2.cljs$lang$arity$3 = ep2__3;
      ep2.cljs$lang$arity$variadic = ep2__4.cljs$lang$arity$variadic;
      return ep2
    }()
  };
  var every_pred__3 = function(p1, p2, p3) {
    return function() {
      var ep3 = null;
      var ep3__0 = function() {
        return true
      };
      var ep3__1 = function(x) {
        return cljs.core.boolean$.call(null, function() {
          var and__3941__auto____8665 = p1.call(null, x);
          if(cljs.core.truth_(and__3941__auto____8665)) {
            var and__3941__auto____8666 = p2.call(null, x);
            if(cljs.core.truth_(and__3941__auto____8666)) {
              return p3.call(null, x)
            }else {
              return and__3941__auto____8666
            }
          }else {
            return and__3941__auto____8665
          }
        }())
      };
      var ep3__2 = function(x, y) {
        return cljs.core.boolean$.call(null, function() {
          var and__3941__auto____8667 = p1.call(null, x);
          if(cljs.core.truth_(and__3941__auto____8667)) {
            var and__3941__auto____8668 = p2.call(null, x);
            if(cljs.core.truth_(and__3941__auto____8668)) {
              var and__3941__auto____8669 = p3.call(null, x);
              if(cljs.core.truth_(and__3941__auto____8669)) {
                var and__3941__auto____8670 = p1.call(null, y);
                if(cljs.core.truth_(and__3941__auto____8670)) {
                  var and__3941__auto____8671 = p2.call(null, y);
                  if(cljs.core.truth_(and__3941__auto____8671)) {
                    return p3.call(null, y)
                  }else {
                    return and__3941__auto____8671
                  }
                }else {
                  return and__3941__auto____8670
                }
              }else {
                return and__3941__auto____8669
              }
            }else {
              return and__3941__auto____8668
            }
          }else {
            return and__3941__auto____8667
          }
        }())
      };
      var ep3__3 = function(x, y, z) {
        return cljs.core.boolean$.call(null, function() {
          var and__3941__auto____8672 = p1.call(null, x);
          if(cljs.core.truth_(and__3941__auto____8672)) {
            var and__3941__auto____8673 = p2.call(null, x);
            if(cljs.core.truth_(and__3941__auto____8673)) {
              var and__3941__auto____8674 = p3.call(null, x);
              if(cljs.core.truth_(and__3941__auto____8674)) {
                var and__3941__auto____8675 = p1.call(null, y);
                if(cljs.core.truth_(and__3941__auto____8675)) {
                  var and__3941__auto____8676 = p2.call(null, y);
                  if(cljs.core.truth_(and__3941__auto____8676)) {
                    var and__3941__auto____8677 = p3.call(null, y);
                    if(cljs.core.truth_(and__3941__auto____8677)) {
                      var and__3941__auto____8678 = p1.call(null, z);
                      if(cljs.core.truth_(and__3941__auto____8678)) {
                        var and__3941__auto____8679 = p2.call(null, z);
                        if(cljs.core.truth_(and__3941__auto____8679)) {
                          return p3.call(null, z)
                        }else {
                          return and__3941__auto____8679
                        }
                      }else {
                        return and__3941__auto____8678
                      }
                    }else {
                      return and__3941__auto____8677
                    }
                  }else {
                    return and__3941__auto____8676
                  }
                }else {
                  return and__3941__auto____8675
                }
              }else {
                return and__3941__auto____8674
              }
            }else {
              return and__3941__auto____8673
            }
          }else {
            return and__3941__auto____8672
          }
        }())
      };
      var ep3__4 = function() {
        var G__8696__delegate = function(x, y, z, args) {
          return cljs.core.boolean$.call(null, function() {
            var and__3941__auto____8680 = ep3.call(null, x, y, z);
            if(cljs.core.truth_(and__3941__auto____8680)) {
              return cljs.core.every_QMARK_.call(null, function(p1__8492_SHARP_) {
                var and__3941__auto____8681 = p1.call(null, p1__8492_SHARP_);
                if(cljs.core.truth_(and__3941__auto____8681)) {
                  var and__3941__auto____8682 = p2.call(null, p1__8492_SHARP_);
                  if(cljs.core.truth_(and__3941__auto____8682)) {
                    return p3.call(null, p1__8492_SHARP_)
                  }else {
                    return and__3941__auto____8682
                  }
                }else {
                  return and__3941__auto____8681
                }
              }, args)
            }else {
              return and__3941__auto____8680
            }
          }())
        };
        var G__8696 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__8696__delegate.call(this, x, y, z, args)
        };
        G__8696.cljs$lang$maxFixedArity = 3;
        G__8696.cljs$lang$applyTo = function(arglist__8697) {
          var x = cljs.core.first(arglist__8697);
          var y = cljs.core.first(cljs.core.next(arglist__8697));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__8697)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__8697)));
          return G__8696__delegate(x, y, z, args)
        };
        G__8696.cljs$lang$arity$variadic = G__8696__delegate;
        return G__8696
      }();
      ep3 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep3__0.call(this);
          case 1:
            return ep3__1.call(this, x);
          case 2:
            return ep3__2.call(this, x, y);
          case 3:
            return ep3__3.call(this, x, y, z);
          default:
            return ep3__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      ep3.cljs$lang$maxFixedArity = 3;
      ep3.cljs$lang$applyTo = ep3__4.cljs$lang$applyTo;
      ep3.cljs$lang$arity$0 = ep3__0;
      ep3.cljs$lang$arity$1 = ep3__1;
      ep3.cljs$lang$arity$2 = ep3__2;
      ep3.cljs$lang$arity$3 = ep3__3;
      ep3.cljs$lang$arity$variadic = ep3__4.cljs$lang$arity$variadic;
      return ep3
    }()
  };
  var every_pred__4 = function() {
    var G__8698__delegate = function(p1, p2, p3, ps) {
      var ps__8683 = cljs.core.list_STAR_.call(null, p1, p2, p3, ps);
      return function() {
        var epn = null;
        var epn__0 = function() {
          return true
        };
        var epn__1 = function(x) {
          return cljs.core.every_QMARK_.call(null, function(p1__8493_SHARP_) {
            return p1__8493_SHARP_.call(null, x)
          }, ps__8683)
        };
        var epn__2 = function(x, y) {
          return cljs.core.every_QMARK_.call(null, function(p1__8494_SHARP_) {
            var and__3941__auto____8688 = p1__8494_SHARP_.call(null, x);
            if(cljs.core.truth_(and__3941__auto____8688)) {
              return p1__8494_SHARP_.call(null, y)
            }else {
              return and__3941__auto____8688
            }
          }, ps__8683)
        };
        var epn__3 = function(x, y, z) {
          return cljs.core.every_QMARK_.call(null, function(p1__8495_SHARP_) {
            var and__3941__auto____8689 = p1__8495_SHARP_.call(null, x);
            if(cljs.core.truth_(and__3941__auto____8689)) {
              var and__3941__auto____8690 = p1__8495_SHARP_.call(null, y);
              if(cljs.core.truth_(and__3941__auto____8690)) {
                return p1__8495_SHARP_.call(null, z)
              }else {
                return and__3941__auto____8690
              }
            }else {
              return and__3941__auto____8689
            }
          }, ps__8683)
        };
        var epn__4 = function() {
          var G__8699__delegate = function(x, y, z, args) {
            return cljs.core.boolean$.call(null, function() {
              var and__3941__auto____8691 = epn.call(null, x, y, z);
              if(cljs.core.truth_(and__3941__auto____8691)) {
                return cljs.core.every_QMARK_.call(null, function(p1__8496_SHARP_) {
                  return cljs.core.every_QMARK_.call(null, p1__8496_SHARP_, args)
                }, ps__8683)
              }else {
                return and__3941__auto____8691
              }
            }())
          };
          var G__8699 = function(x, y, z, var_args) {
            var args = null;
            if(goog.isDef(var_args)) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
            }
            return G__8699__delegate.call(this, x, y, z, args)
          };
          G__8699.cljs$lang$maxFixedArity = 3;
          G__8699.cljs$lang$applyTo = function(arglist__8700) {
            var x = cljs.core.first(arglist__8700);
            var y = cljs.core.first(cljs.core.next(arglist__8700));
            var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__8700)));
            var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__8700)));
            return G__8699__delegate(x, y, z, args)
          };
          G__8699.cljs$lang$arity$variadic = G__8699__delegate;
          return G__8699
        }();
        epn = function(x, y, z, var_args) {
          var args = var_args;
          switch(arguments.length) {
            case 0:
              return epn__0.call(this);
            case 1:
              return epn__1.call(this, x);
            case 2:
              return epn__2.call(this, x, y);
            case 3:
              return epn__3.call(this, x, y, z);
            default:
              return epn__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
          }
          throw"Invalid arity: " + arguments.length;
        };
        epn.cljs$lang$maxFixedArity = 3;
        epn.cljs$lang$applyTo = epn__4.cljs$lang$applyTo;
        epn.cljs$lang$arity$0 = epn__0;
        epn.cljs$lang$arity$1 = epn__1;
        epn.cljs$lang$arity$2 = epn__2;
        epn.cljs$lang$arity$3 = epn__3;
        epn.cljs$lang$arity$variadic = epn__4.cljs$lang$arity$variadic;
        return epn
      }()
    };
    var G__8698 = function(p1, p2, p3, var_args) {
      var ps = null;
      if(goog.isDef(var_args)) {
        ps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__8698__delegate.call(this, p1, p2, p3, ps)
    };
    G__8698.cljs$lang$maxFixedArity = 3;
    G__8698.cljs$lang$applyTo = function(arglist__8701) {
      var p1 = cljs.core.first(arglist__8701);
      var p2 = cljs.core.first(cljs.core.next(arglist__8701));
      var p3 = cljs.core.first(cljs.core.next(cljs.core.next(arglist__8701)));
      var ps = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__8701)));
      return G__8698__delegate(p1, p2, p3, ps)
    };
    G__8698.cljs$lang$arity$variadic = G__8698__delegate;
    return G__8698
  }();
  every_pred = function(p1, p2, p3, var_args) {
    var ps = var_args;
    switch(arguments.length) {
      case 1:
        return every_pred__1.call(this, p1);
      case 2:
        return every_pred__2.call(this, p1, p2);
      case 3:
        return every_pred__3.call(this, p1, p2, p3);
      default:
        return every_pred__4.cljs$lang$arity$variadic(p1, p2, p3, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  every_pred.cljs$lang$maxFixedArity = 3;
  every_pred.cljs$lang$applyTo = every_pred__4.cljs$lang$applyTo;
  every_pred.cljs$lang$arity$1 = every_pred__1;
  every_pred.cljs$lang$arity$2 = every_pred__2;
  every_pred.cljs$lang$arity$3 = every_pred__3;
  every_pred.cljs$lang$arity$variadic = every_pred__4.cljs$lang$arity$variadic;
  return every_pred
}();
cljs.core.some_fn = function() {
  var some_fn = null;
  var some_fn__1 = function(p) {
    return function() {
      var sp1 = null;
      var sp1__0 = function() {
        return null
      };
      var sp1__1 = function(x) {
        return p.call(null, x)
      };
      var sp1__2 = function(x, y) {
        var or__3943__auto____8782 = p.call(null, x);
        if(cljs.core.truth_(or__3943__auto____8782)) {
          return or__3943__auto____8782
        }else {
          return p.call(null, y)
        }
      };
      var sp1__3 = function(x, y, z) {
        var or__3943__auto____8783 = p.call(null, x);
        if(cljs.core.truth_(or__3943__auto____8783)) {
          return or__3943__auto____8783
        }else {
          var or__3943__auto____8784 = p.call(null, y);
          if(cljs.core.truth_(or__3943__auto____8784)) {
            return or__3943__auto____8784
          }else {
            return p.call(null, z)
          }
        }
      };
      var sp1__4 = function() {
        var G__8853__delegate = function(x, y, z, args) {
          var or__3943__auto____8785 = sp1.call(null, x, y, z);
          if(cljs.core.truth_(or__3943__auto____8785)) {
            return or__3943__auto____8785
          }else {
            return cljs.core.some.call(null, p, args)
          }
        };
        var G__8853 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__8853__delegate.call(this, x, y, z, args)
        };
        G__8853.cljs$lang$maxFixedArity = 3;
        G__8853.cljs$lang$applyTo = function(arglist__8854) {
          var x = cljs.core.first(arglist__8854);
          var y = cljs.core.first(cljs.core.next(arglist__8854));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__8854)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__8854)));
          return G__8853__delegate(x, y, z, args)
        };
        G__8853.cljs$lang$arity$variadic = G__8853__delegate;
        return G__8853
      }();
      sp1 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp1__0.call(this);
          case 1:
            return sp1__1.call(this, x);
          case 2:
            return sp1__2.call(this, x, y);
          case 3:
            return sp1__3.call(this, x, y, z);
          default:
            return sp1__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      sp1.cljs$lang$maxFixedArity = 3;
      sp1.cljs$lang$applyTo = sp1__4.cljs$lang$applyTo;
      sp1.cljs$lang$arity$0 = sp1__0;
      sp1.cljs$lang$arity$1 = sp1__1;
      sp1.cljs$lang$arity$2 = sp1__2;
      sp1.cljs$lang$arity$3 = sp1__3;
      sp1.cljs$lang$arity$variadic = sp1__4.cljs$lang$arity$variadic;
      return sp1
    }()
  };
  var some_fn__2 = function(p1, p2) {
    return function() {
      var sp2 = null;
      var sp2__0 = function() {
        return null
      };
      var sp2__1 = function(x) {
        var or__3943__auto____8797 = p1.call(null, x);
        if(cljs.core.truth_(or__3943__auto____8797)) {
          return or__3943__auto____8797
        }else {
          return p2.call(null, x)
        }
      };
      var sp2__2 = function(x, y) {
        var or__3943__auto____8798 = p1.call(null, x);
        if(cljs.core.truth_(or__3943__auto____8798)) {
          return or__3943__auto____8798
        }else {
          var or__3943__auto____8799 = p1.call(null, y);
          if(cljs.core.truth_(or__3943__auto____8799)) {
            return or__3943__auto____8799
          }else {
            var or__3943__auto____8800 = p2.call(null, x);
            if(cljs.core.truth_(or__3943__auto____8800)) {
              return or__3943__auto____8800
            }else {
              return p2.call(null, y)
            }
          }
        }
      };
      var sp2__3 = function(x, y, z) {
        var or__3943__auto____8801 = p1.call(null, x);
        if(cljs.core.truth_(or__3943__auto____8801)) {
          return or__3943__auto____8801
        }else {
          var or__3943__auto____8802 = p1.call(null, y);
          if(cljs.core.truth_(or__3943__auto____8802)) {
            return or__3943__auto____8802
          }else {
            var or__3943__auto____8803 = p1.call(null, z);
            if(cljs.core.truth_(or__3943__auto____8803)) {
              return or__3943__auto____8803
            }else {
              var or__3943__auto____8804 = p2.call(null, x);
              if(cljs.core.truth_(or__3943__auto____8804)) {
                return or__3943__auto____8804
              }else {
                var or__3943__auto____8805 = p2.call(null, y);
                if(cljs.core.truth_(or__3943__auto____8805)) {
                  return or__3943__auto____8805
                }else {
                  return p2.call(null, z)
                }
              }
            }
          }
        }
      };
      var sp2__4 = function() {
        var G__8855__delegate = function(x, y, z, args) {
          var or__3943__auto____8806 = sp2.call(null, x, y, z);
          if(cljs.core.truth_(or__3943__auto____8806)) {
            return or__3943__auto____8806
          }else {
            return cljs.core.some.call(null, function(p1__8536_SHARP_) {
              var or__3943__auto____8807 = p1.call(null, p1__8536_SHARP_);
              if(cljs.core.truth_(or__3943__auto____8807)) {
                return or__3943__auto____8807
              }else {
                return p2.call(null, p1__8536_SHARP_)
              }
            }, args)
          }
        };
        var G__8855 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__8855__delegate.call(this, x, y, z, args)
        };
        G__8855.cljs$lang$maxFixedArity = 3;
        G__8855.cljs$lang$applyTo = function(arglist__8856) {
          var x = cljs.core.first(arglist__8856);
          var y = cljs.core.first(cljs.core.next(arglist__8856));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__8856)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__8856)));
          return G__8855__delegate(x, y, z, args)
        };
        G__8855.cljs$lang$arity$variadic = G__8855__delegate;
        return G__8855
      }();
      sp2 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp2__0.call(this);
          case 1:
            return sp2__1.call(this, x);
          case 2:
            return sp2__2.call(this, x, y);
          case 3:
            return sp2__3.call(this, x, y, z);
          default:
            return sp2__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      sp2.cljs$lang$maxFixedArity = 3;
      sp2.cljs$lang$applyTo = sp2__4.cljs$lang$applyTo;
      sp2.cljs$lang$arity$0 = sp2__0;
      sp2.cljs$lang$arity$1 = sp2__1;
      sp2.cljs$lang$arity$2 = sp2__2;
      sp2.cljs$lang$arity$3 = sp2__3;
      sp2.cljs$lang$arity$variadic = sp2__4.cljs$lang$arity$variadic;
      return sp2
    }()
  };
  var some_fn__3 = function(p1, p2, p3) {
    return function() {
      var sp3 = null;
      var sp3__0 = function() {
        return null
      };
      var sp3__1 = function(x) {
        var or__3943__auto____8826 = p1.call(null, x);
        if(cljs.core.truth_(or__3943__auto____8826)) {
          return or__3943__auto____8826
        }else {
          var or__3943__auto____8827 = p2.call(null, x);
          if(cljs.core.truth_(or__3943__auto____8827)) {
            return or__3943__auto____8827
          }else {
            return p3.call(null, x)
          }
        }
      };
      var sp3__2 = function(x, y) {
        var or__3943__auto____8828 = p1.call(null, x);
        if(cljs.core.truth_(or__3943__auto____8828)) {
          return or__3943__auto____8828
        }else {
          var or__3943__auto____8829 = p2.call(null, x);
          if(cljs.core.truth_(or__3943__auto____8829)) {
            return or__3943__auto____8829
          }else {
            var or__3943__auto____8830 = p3.call(null, x);
            if(cljs.core.truth_(or__3943__auto____8830)) {
              return or__3943__auto____8830
            }else {
              var or__3943__auto____8831 = p1.call(null, y);
              if(cljs.core.truth_(or__3943__auto____8831)) {
                return or__3943__auto____8831
              }else {
                var or__3943__auto____8832 = p2.call(null, y);
                if(cljs.core.truth_(or__3943__auto____8832)) {
                  return or__3943__auto____8832
                }else {
                  return p3.call(null, y)
                }
              }
            }
          }
        }
      };
      var sp3__3 = function(x, y, z) {
        var or__3943__auto____8833 = p1.call(null, x);
        if(cljs.core.truth_(or__3943__auto____8833)) {
          return or__3943__auto____8833
        }else {
          var or__3943__auto____8834 = p2.call(null, x);
          if(cljs.core.truth_(or__3943__auto____8834)) {
            return or__3943__auto____8834
          }else {
            var or__3943__auto____8835 = p3.call(null, x);
            if(cljs.core.truth_(or__3943__auto____8835)) {
              return or__3943__auto____8835
            }else {
              var or__3943__auto____8836 = p1.call(null, y);
              if(cljs.core.truth_(or__3943__auto____8836)) {
                return or__3943__auto____8836
              }else {
                var or__3943__auto____8837 = p2.call(null, y);
                if(cljs.core.truth_(or__3943__auto____8837)) {
                  return or__3943__auto____8837
                }else {
                  var or__3943__auto____8838 = p3.call(null, y);
                  if(cljs.core.truth_(or__3943__auto____8838)) {
                    return or__3943__auto____8838
                  }else {
                    var or__3943__auto____8839 = p1.call(null, z);
                    if(cljs.core.truth_(or__3943__auto____8839)) {
                      return or__3943__auto____8839
                    }else {
                      var or__3943__auto____8840 = p2.call(null, z);
                      if(cljs.core.truth_(or__3943__auto____8840)) {
                        return or__3943__auto____8840
                      }else {
                        return p3.call(null, z)
                      }
                    }
                  }
                }
              }
            }
          }
        }
      };
      var sp3__4 = function() {
        var G__8857__delegate = function(x, y, z, args) {
          var or__3943__auto____8841 = sp3.call(null, x, y, z);
          if(cljs.core.truth_(or__3943__auto____8841)) {
            return or__3943__auto____8841
          }else {
            return cljs.core.some.call(null, function(p1__8537_SHARP_) {
              var or__3943__auto____8842 = p1.call(null, p1__8537_SHARP_);
              if(cljs.core.truth_(or__3943__auto____8842)) {
                return or__3943__auto____8842
              }else {
                var or__3943__auto____8843 = p2.call(null, p1__8537_SHARP_);
                if(cljs.core.truth_(or__3943__auto____8843)) {
                  return or__3943__auto____8843
                }else {
                  return p3.call(null, p1__8537_SHARP_)
                }
              }
            }, args)
          }
        };
        var G__8857 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__8857__delegate.call(this, x, y, z, args)
        };
        G__8857.cljs$lang$maxFixedArity = 3;
        G__8857.cljs$lang$applyTo = function(arglist__8858) {
          var x = cljs.core.first(arglist__8858);
          var y = cljs.core.first(cljs.core.next(arglist__8858));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__8858)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__8858)));
          return G__8857__delegate(x, y, z, args)
        };
        G__8857.cljs$lang$arity$variadic = G__8857__delegate;
        return G__8857
      }();
      sp3 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp3__0.call(this);
          case 1:
            return sp3__1.call(this, x);
          case 2:
            return sp3__2.call(this, x, y);
          case 3:
            return sp3__3.call(this, x, y, z);
          default:
            return sp3__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      sp3.cljs$lang$maxFixedArity = 3;
      sp3.cljs$lang$applyTo = sp3__4.cljs$lang$applyTo;
      sp3.cljs$lang$arity$0 = sp3__0;
      sp3.cljs$lang$arity$1 = sp3__1;
      sp3.cljs$lang$arity$2 = sp3__2;
      sp3.cljs$lang$arity$3 = sp3__3;
      sp3.cljs$lang$arity$variadic = sp3__4.cljs$lang$arity$variadic;
      return sp3
    }()
  };
  var some_fn__4 = function() {
    var G__8859__delegate = function(p1, p2, p3, ps) {
      var ps__8844 = cljs.core.list_STAR_.call(null, p1, p2, p3, ps);
      return function() {
        var spn = null;
        var spn__0 = function() {
          return null
        };
        var spn__1 = function(x) {
          return cljs.core.some.call(null, function(p1__8538_SHARP_) {
            return p1__8538_SHARP_.call(null, x)
          }, ps__8844)
        };
        var spn__2 = function(x, y) {
          return cljs.core.some.call(null, function(p1__8539_SHARP_) {
            var or__3943__auto____8849 = p1__8539_SHARP_.call(null, x);
            if(cljs.core.truth_(or__3943__auto____8849)) {
              return or__3943__auto____8849
            }else {
              return p1__8539_SHARP_.call(null, y)
            }
          }, ps__8844)
        };
        var spn__3 = function(x, y, z) {
          return cljs.core.some.call(null, function(p1__8540_SHARP_) {
            var or__3943__auto____8850 = p1__8540_SHARP_.call(null, x);
            if(cljs.core.truth_(or__3943__auto____8850)) {
              return or__3943__auto____8850
            }else {
              var or__3943__auto____8851 = p1__8540_SHARP_.call(null, y);
              if(cljs.core.truth_(or__3943__auto____8851)) {
                return or__3943__auto____8851
              }else {
                return p1__8540_SHARP_.call(null, z)
              }
            }
          }, ps__8844)
        };
        var spn__4 = function() {
          var G__8860__delegate = function(x, y, z, args) {
            var or__3943__auto____8852 = spn.call(null, x, y, z);
            if(cljs.core.truth_(or__3943__auto____8852)) {
              return or__3943__auto____8852
            }else {
              return cljs.core.some.call(null, function(p1__8541_SHARP_) {
                return cljs.core.some.call(null, p1__8541_SHARP_, args)
              }, ps__8844)
            }
          };
          var G__8860 = function(x, y, z, var_args) {
            var args = null;
            if(goog.isDef(var_args)) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
            }
            return G__8860__delegate.call(this, x, y, z, args)
          };
          G__8860.cljs$lang$maxFixedArity = 3;
          G__8860.cljs$lang$applyTo = function(arglist__8861) {
            var x = cljs.core.first(arglist__8861);
            var y = cljs.core.first(cljs.core.next(arglist__8861));
            var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__8861)));
            var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__8861)));
            return G__8860__delegate(x, y, z, args)
          };
          G__8860.cljs$lang$arity$variadic = G__8860__delegate;
          return G__8860
        }();
        spn = function(x, y, z, var_args) {
          var args = var_args;
          switch(arguments.length) {
            case 0:
              return spn__0.call(this);
            case 1:
              return spn__1.call(this, x);
            case 2:
              return spn__2.call(this, x, y);
            case 3:
              return spn__3.call(this, x, y, z);
            default:
              return spn__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
          }
          throw"Invalid arity: " + arguments.length;
        };
        spn.cljs$lang$maxFixedArity = 3;
        spn.cljs$lang$applyTo = spn__4.cljs$lang$applyTo;
        spn.cljs$lang$arity$0 = spn__0;
        spn.cljs$lang$arity$1 = spn__1;
        spn.cljs$lang$arity$2 = spn__2;
        spn.cljs$lang$arity$3 = spn__3;
        spn.cljs$lang$arity$variadic = spn__4.cljs$lang$arity$variadic;
        return spn
      }()
    };
    var G__8859 = function(p1, p2, p3, var_args) {
      var ps = null;
      if(goog.isDef(var_args)) {
        ps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__8859__delegate.call(this, p1, p2, p3, ps)
    };
    G__8859.cljs$lang$maxFixedArity = 3;
    G__8859.cljs$lang$applyTo = function(arglist__8862) {
      var p1 = cljs.core.first(arglist__8862);
      var p2 = cljs.core.first(cljs.core.next(arglist__8862));
      var p3 = cljs.core.first(cljs.core.next(cljs.core.next(arglist__8862)));
      var ps = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__8862)));
      return G__8859__delegate(p1, p2, p3, ps)
    };
    G__8859.cljs$lang$arity$variadic = G__8859__delegate;
    return G__8859
  }();
  some_fn = function(p1, p2, p3, var_args) {
    var ps = var_args;
    switch(arguments.length) {
      case 1:
        return some_fn__1.call(this, p1);
      case 2:
        return some_fn__2.call(this, p1, p2);
      case 3:
        return some_fn__3.call(this, p1, p2, p3);
      default:
        return some_fn__4.cljs$lang$arity$variadic(p1, p2, p3, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  some_fn.cljs$lang$maxFixedArity = 3;
  some_fn.cljs$lang$applyTo = some_fn__4.cljs$lang$applyTo;
  some_fn.cljs$lang$arity$1 = some_fn__1;
  some_fn.cljs$lang$arity$2 = some_fn__2;
  some_fn.cljs$lang$arity$3 = some_fn__3;
  some_fn.cljs$lang$arity$variadic = some_fn__4.cljs$lang$arity$variadic;
  return some_fn
}();
cljs.core.map = function() {
  var map = null;
  var map__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__4092__auto____8881 = cljs.core.seq.call(null, coll);
      if(temp__4092__auto____8881) {
        var s__8882 = temp__4092__auto____8881;
        if(cljs.core.chunked_seq_QMARK_.call(null, s__8882)) {
          var c__8883 = cljs.core.chunk_first.call(null, s__8882);
          var size__8884 = cljs.core.count.call(null, c__8883);
          var b__8885 = cljs.core.chunk_buffer.call(null, size__8884);
          var n__2478__auto____8886 = size__8884;
          var i__8887 = 0;
          while(true) {
            if(i__8887 < n__2478__auto____8886) {
              cljs.core.chunk_append.call(null, b__8885, f.call(null, cljs.core._nth.call(null, c__8883, i__8887)));
              var G__8899 = i__8887 + 1;
              i__8887 = G__8899;
              continue
            }else {
            }
            break
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__8885), map.call(null, f, cljs.core.chunk_rest.call(null, s__8882)))
        }else {
          return cljs.core.cons.call(null, f.call(null, cljs.core.first.call(null, s__8882)), map.call(null, f, cljs.core.rest.call(null, s__8882)))
        }
      }else {
        return null
      }
    }, null)
  };
  var map__3 = function(f, c1, c2) {
    return new cljs.core.LazySeq(null, false, function() {
      var s1__8888 = cljs.core.seq.call(null, c1);
      var s2__8889 = cljs.core.seq.call(null, c2);
      if(function() {
        var and__3941__auto____8890 = s1__8888;
        if(and__3941__auto____8890) {
          return s2__8889
        }else {
          return and__3941__auto____8890
        }
      }()) {
        return cljs.core.cons.call(null, f.call(null, cljs.core.first.call(null, s1__8888), cljs.core.first.call(null, s2__8889)), map.call(null, f, cljs.core.rest.call(null, s1__8888), cljs.core.rest.call(null, s2__8889)))
      }else {
        return null
      }
    }, null)
  };
  var map__4 = function(f, c1, c2, c3) {
    return new cljs.core.LazySeq(null, false, function() {
      var s1__8891 = cljs.core.seq.call(null, c1);
      var s2__8892 = cljs.core.seq.call(null, c2);
      var s3__8893 = cljs.core.seq.call(null, c3);
      if(function() {
        var and__3941__auto____8894 = s1__8891;
        if(and__3941__auto____8894) {
          var and__3941__auto____8895 = s2__8892;
          if(and__3941__auto____8895) {
            return s3__8893
          }else {
            return and__3941__auto____8895
          }
        }else {
          return and__3941__auto____8894
        }
      }()) {
        return cljs.core.cons.call(null, f.call(null, cljs.core.first.call(null, s1__8891), cljs.core.first.call(null, s2__8892), cljs.core.first.call(null, s3__8893)), map.call(null, f, cljs.core.rest.call(null, s1__8891), cljs.core.rest.call(null, s2__8892), cljs.core.rest.call(null, s3__8893)))
      }else {
        return null
      }
    }, null)
  };
  var map__5 = function() {
    var G__8900__delegate = function(f, c1, c2, c3, colls) {
      var step__8898 = function step(cs) {
        return new cljs.core.LazySeq(null, false, function() {
          var ss__8897 = map.call(null, cljs.core.seq, cs);
          if(cljs.core.every_QMARK_.call(null, cljs.core.identity, ss__8897)) {
            return cljs.core.cons.call(null, map.call(null, cljs.core.first, ss__8897), step.call(null, map.call(null, cljs.core.rest, ss__8897)))
          }else {
            return null
          }
        }, null)
      };
      return map.call(null, function(p1__8702_SHARP_) {
        return cljs.core.apply.call(null, f, p1__8702_SHARP_)
      }, step__8898.call(null, cljs.core.conj.call(null, colls, c3, c2, c1)))
    };
    var G__8900 = function(f, c1, c2, c3, var_args) {
      var colls = null;
      if(goog.isDef(var_args)) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0)
      }
      return G__8900__delegate.call(this, f, c1, c2, c3, colls)
    };
    G__8900.cljs$lang$maxFixedArity = 4;
    G__8900.cljs$lang$applyTo = function(arglist__8901) {
      var f = cljs.core.first(arglist__8901);
      var c1 = cljs.core.first(cljs.core.next(arglist__8901));
      var c2 = cljs.core.first(cljs.core.next(cljs.core.next(arglist__8901)));
      var c3 = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(arglist__8901))));
      var colls = cljs.core.rest(cljs.core.next(cljs.core.next(cljs.core.next(arglist__8901))));
      return G__8900__delegate(f, c1, c2, c3, colls)
    };
    G__8900.cljs$lang$arity$variadic = G__8900__delegate;
    return G__8900
  }();
  map = function(f, c1, c2, c3, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return map__2.call(this, f, c1);
      case 3:
        return map__3.call(this, f, c1, c2);
      case 4:
        return map__4.call(this, f, c1, c2, c3);
      default:
        return map__5.cljs$lang$arity$variadic(f, c1, c2, c3, cljs.core.array_seq(arguments, 4))
    }
    throw"Invalid arity: " + arguments.length;
  };
  map.cljs$lang$maxFixedArity = 4;
  map.cljs$lang$applyTo = map__5.cljs$lang$applyTo;
  map.cljs$lang$arity$2 = map__2;
  map.cljs$lang$arity$3 = map__3;
  map.cljs$lang$arity$4 = map__4;
  map.cljs$lang$arity$variadic = map__5.cljs$lang$arity$variadic;
  return map
}();
cljs.core.take = function take(n, coll) {
  return new cljs.core.LazySeq(null, false, function() {
    if(n > 0) {
      var temp__4092__auto____8904 = cljs.core.seq.call(null, coll);
      if(temp__4092__auto____8904) {
        var s__8905 = temp__4092__auto____8904;
        return cljs.core.cons.call(null, cljs.core.first.call(null, s__8905), take.call(null, n - 1, cljs.core.rest.call(null, s__8905)))
      }else {
        return null
      }
    }else {
      return null
    }
  }, null)
};
cljs.core.drop = function drop(n, coll) {
  var step__8911 = function(n, coll) {
    while(true) {
      var s__8909 = cljs.core.seq.call(null, coll);
      if(cljs.core.truth_(function() {
        var and__3941__auto____8910 = n > 0;
        if(and__3941__auto____8910) {
          return s__8909
        }else {
          return and__3941__auto____8910
        }
      }())) {
        var G__8912 = n - 1;
        var G__8913 = cljs.core.rest.call(null, s__8909);
        n = G__8912;
        coll = G__8913;
        continue
      }else {
        return s__8909
      }
      break
    }
  };
  return new cljs.core.LazySeq(null, false, function() {
    return step__8911.call(null, n, coll)
  }, null)
};
cljs.core.drop_last = function() {
  var drop_last = null;
  var drop_last__1 = function(s) {
    return drop_last.call(null, 1, s)
  };
  var drop_last__2 = function(n, s) {
    return cljs.core.map.call(null, function(x, _) {
      return x
    }, s, cljs.core.drop.call(null, n, s))
  };
  drop_last = function(n, s) {
    switch(arguments.length) {
      case 1:
        return drop_last__1.call(this, n);
      case 2:
        return drop_last__2.call(this, n, s)
    }
    throw"Invalid arity: " + arguments.length;
  };
  drop_last.cljs$lang$arity$1 = drop_last__1;
  drop_last.cljs$lang$arity$2 = drop_last__2;
  return drop_last
}();
cljs.core.take_last = function take_last(n, coll) {
  var s__8916 = cljs.core.seq.call(null, coll);
  var lead__8917 = cljs.core.seq.call(null, cljs.core.drop.call(null, n, coll));
  while(true) {
    if(lead__8917) {
      var G__8918 = cljs.core.next.call(null, s__8916);
      var G__8919 = cljs.core.next.call(null, lead__8917);
      s__8916 = G__8918;
      lead__8917 = G__8919;
      continue
    }else {
      return s__8916
    }
    break
  }
};
cljs.core.drop_while = function drop_while(pred, coll) {
  var step__8925 = function(pred, coll) {
    while(true) {
      var s__8923 = cljs.core.seq.call(null, coll);
      if(cljs.core.truth_(function() {
        var and__3941__auto____8924 = s__8923;
        if(and__3941__auto____8924) {
          return pred.call(null, cljs.core.first.call(null, s__8923))
        }else {
          return and__3941__auto____8924
        }
      }())) {
        var G__8926 = pred;
        var G__8927 = cljs.core.rest.call(null, s__8923);
        pred = G__8926;
        coll = G__8927;
        continue
      }else {
        return s__8923
      }
      break
    }
  };
  return new cljs.core.LazySeq(null, false, function() {
    return step__8925.call(null, pred, coll)
  }, null)
};
cljs.core.cycle = function cycle(coll) {
  return new cljs.core.LazySeq(null, false, function() {
    var temp__4092__auto____8930 = cljs.core.seq.call(null, coll);
    if(temp__4092__auto____8930) {
      var s__8931 = temp__4092__auto____8930;
      return cljs.core.concat.call(null, s__8931, cycle.call(null, s__8931))
    }else {
      return null
    }
  }, null)
};
cljs.core.split_at = function split_at(n, coll) {
  return cljs.core.PersistentVector.fromArray([cljs.core.take.call(null, n, coll), cljs.core.drop.call(null, n, coll)], true)
};
cljs.core.repeat = function() {
  var repeat = null;
  var repeat__1 = function(x) {
    return new cljs.core.LazySeq(null, false, function() {
      return cljs.core.cons.call(null, x, repeat.call(null, x))
    }, null)
  };
  var repeat__2 = function(n, x) {
    return cljs.core.take.call(null, n, repeat.call(null, x))
  };
  repeat = function(n, x) {
    switch(arguments.length) {
      case 1:
        return repeat__1.call(this, n);
      case 2:
        return repeat__2.call(this, n, x)
    }
    throw"Invalid arity: " + arguments.length;
  };
  repeat.cljs$lang$arity$1 = repeat__1;
  repeat.cljs$lang$arity$2 = repeat__2;
  return repeat
}();
cljs.core.replicate = function replicate(n, x) {
  return cljs.core.take.call(null, n, cljs.core.repeat.call(null, x))
};
cljs.core.repeatedly = function() {
  var repeatedly = null;
  var repeatedly__1 = function(f) {
    return new cljs.core.LazySeq(null, false, function() {
      return cljs.core.cons.call(null, f.call(null), repeatedly.call(null, f))
    }, null)
  };
  var repeatedly__2 = function(n, f) {
    return cljs.core.take.call(null, n, repeatedly.call(null, f))
  };
  repeatedly = function(n, f) {
    switch(arguments.length) {
      case 1:
        return repeatedly__1.call(this, n);
      case 2:
        return repeatedly__2.call(this, n, f)
    }
    throw"Invalid arity: " + arguments.length;
  };
  repeatedly.cljs$lang$arity$1 = repeatedly__1;
  repeatedly.cljs$lang$arity$2 = repeatedly__2;
  return repeatedly
}();
cljs.core.iterate = function iterate(f, x) {
  return cljs.core.cons.call(null, x, new cljs.core.LazySeq(null, false, function() {
    return iterate.call(null, f, f.call(null, x))
  }, null))
};
cljs.core.interleave = function() {
  var interleave = null;
  var interleave__2 = function(c1, c2) {
    return new cljs.core.LazySeq(null, false, function() {
      var s1__8936 = cljs.core.seq.call(null, c1);
      var s2__8937 = cljs.core.seq.call(null, c2);
      if(function() {
        var and__3941__auto____8938 = s1__8936;
        if(and__3941__auto____8938) {
          return s2__8937
        }else {
          return and__3941__auto____8938
        }
      }()) {
        return cljs.core.cons.call(null, cljs.core.first.call(null, s1__8936), cljs.core.cons.call(null, cljs.core.first.call(null, s2__8937), interleave.call(null, cljs.core.rest.call(null, s1__8936), cljs.core.rest.call(null, s2__8937))))
      }else {
        return null
      }
    }, null)
  };
  var interleave__3 = function() {
    var G__8940__delegate = function(c1, c2, colls) {
      return new cljs.core.LazySeq(null, false, function() {
        var ss__8939 = cljs.core.map.call(null, cljs.core.seq, cljs.core.conj.call(null, colls, c2, c1));
        if(cljs.core.every_QMARK_.call(null, cljs.core.identity, ss__8939)) {
          return cljs.core.concat.call(null, cljs.core.map.call(null, cljs.core.first, ss__8939), cljs.core.apply.call(null, interleave, cljs.core.map.call(null, cljs.core.rest, ss__8939)))
        }else {
          return null
        }
      }, null)
    };
    var G__8940 = function(c1, c2, var_args) {
      var colls = null;
      if(goog.isDef(var_args)) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__8940__delegate.call(this, c1, c2, colls)
    };
    G__8940.cljs$lang$maxFixedArity = 2;
    G__8940.cljs$lang$applyTo = function(arglist__8941) {
      var c1 = cljs.core.first(arglist__8941);
      var c2 = cljs.core.first(cljs.core.next(arglist__8941));
      var colls = cljs.core.rest(cljs.core.next(arglist__8941));
      return G__8940__delegate(c1, c2, colls)
    };
    G__8940.cljs$lang$arity$variadic = G__8940__delegate;
    return G__8940
  }();
  interleave = function(c1, c2, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return interleave__2.call(this, c1, c2);
      default:
        return interleave__3.cljs$lang$arity$variadic(c1, c2, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  interleave.cljs$lang$maxFixedArity = 2;
  interleave.cljs$lang$applyTo = interleave__3.cljs$lang$applyTo;
  interleave.cljs$lang$arity$2 = interleave__2;
  interleave.cljs$lang$arity$variadic = interleave__3.cljs$lang$arity$variadic;
  return interleave
}();
cljs.core.interpose = function interpose(sep, coll) {
  return cljs.core.drop.call(null, 1, cljs.core.interleave.call(null, cljs.core.repeat.call(null, sep), coll))
};
cljs.core.flatten1 = function flatten1(colls) {
  var cat__8951 = function cat(coll, colls) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__4090__auto____8949 = cljs.core.seq.call(null, coll);
      if(temp__4090__auto____8949) {
        var coll__8950 = temp__4090__auto____8949;
        return cljs.core.cons.call(null, cljs.core.first.call(null, coll__8950), cat.call(null, cljs.core.rest.call(null, coll__8950), colls))
      }else {
        if(cljs.core.seq.call(null, colls)) {
          return cat.call(null, cljs.core.first.call(null, colls), cljs.core.rest.call(null, colls))
        }else {
          return null
        }
      }
    }, null)
  };
  return cat__8951.call(null, null, colls)
};
cljs.core.mapcat = function() {
  var mapcat = null;
  var mapcat__2 = function(f, coll) {
    return cljs.core.flatten1.call(null, cljs.core.map.call(null, f, coll))
  };
  var mapcat__3 = function() {
    var G__8952__delegate = function(f, coll, colls) {
      return cljs.core.flatten1.call(null, cljs.core.apply.call(null, cljs.core.map, f, coll, colls))
    };
    var G__8952 = function(f, coll, var_args) {
      var colls = null;
      if(goog.isDef(var_args)) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__8952__delegate.call(this, f, coll, colls)
    };
    G__8952.cljs$lang$maxFixedArity = 2;
    G__8952.cljs$lang$applyTo = function(arglist__8953) {
      var f = cljs.core.first(arglist__8953);
      var coll = cljs.core.first(cljs.core.next(arglist__8953));
      var colls = cljs.core.rest(cljs.core.next(arglist__8953));
      return G__8952__delegate(f, coll, colls)
    };
    G__8952.cljs$lang$arity$variadic = G__8952__delegate;
    return G__8952
  }();
  mapcat = function(f, coll, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return mapcat__2.call(this, f, coll);
      default:
        return mapcat__3.cljs$lang$arity$variadic(f, coll, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  mapcat.cljs$lang$maxFixedArity = 2;
  mapcat.cljs$lang$applyTo = mapcat__3.cljs$lang$applyTo;
  mapcat.cljs$lang$arity$2 = mapcat__2;
  mapcat.cljs$lang$arity$variadic = mapcat__3.cljs$lang$arity$variadic;
  return mapcat
}();
cljs.core.filter = function filter(pred, coll) {
  return new cljs.core.LazySeq(null, false, function() {
    var temp__4092__auto____8963 = cljs.core.seq.call(null, coll);
    if(temp__4092__auto____8963) {
      var s__8964 = temp__4092__auto____8963;
      if(cljs.core.chunked_seq_QMARK_.call(null, s__8964)) {
        var c__8965 = cljs.core.chunk_first.call(null, s__8964);
        var size__8966 = cljs.core.count.call(null, c__8965);
        var b__8967 = cljs.core.chunk_buffer.call(null, size__8966);
        var n__2478__auto____8968 = size__8966;
        var i__8969 = 0;
        while(true) {
          if(i__8969 < n__2478__auto____8968) {
            if(cljs.core.truth_(pred.call(null, cljs.core._nth.call(null, c__8965, i__8969)))) {
              cljs.core.chunk_append.call(null, b__8967, cljs.core._nth.call(null, c__8965, i__8969))
            }else {
            }
            var G__8972 = i__8969 + 1;
            i__8969 = G__8972;
            continue
          }else {
          }
          break
        }
        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__8967), filter.call(null, pred, cljs.core.chunk_rest.call(null, s__8964)))
      }else {
        var f__8970 = cljs.core.first.call(null, s__8964);
        var r__8971 = cljs.core.rest.call(null, s__8964);
        if(cljs.core.truth_(pred.call(null, f__8970))) {
          return cljs.core.cons.call(null, f__8970, filter.call(null, pred, r__8971))
        }else {
          return filter.call(null, pred, r__8971)
        }
      }
    }else {
      return null
    }
  }, null)
};
cljs.core.remove = function remove(pred, coll) {
  return cljs.core.filter.call(null, cljs.core.complement.call(null, pred), coll)
};
cljs.core.tree_seq = function tree_seq(branch_QMARK_, children, root) {
  var walk__8975 = function walk(node) {
    return new cljs.core.LazySeq(null, false, function() {
      return cljs.core.cons.call(null, node, cljs.core.truth_(branch_QMARK_.call(null, node)) ? cljs.core.mapcat.call(null, walk, children.call(null, node)) : null)
    }, null)
  };
  return walk__8975.call(null, root)
};
cljs.core.flatten = function flatten(x) {
  return cljs.core.filter.call(null, function(p1__8973_SHARP_) {
    return!cljs.core.sequential_QMARK_.call(null, p1__8973_SHARP_)
  }, cljs.core.rest.call(null, cljs.core.tree_seq.call(null, cljs.core.sequential_QMARK_, cljs.core.seq, x)))
};
cljs.core.into = function into(to, from) {
  if(function() {
    var G__8979__8980 = to;
    if(G__8979__8980) {
      if(function() {
        var or__3943__auto____8981 = G__8979__8980.cljs$lang$protocol_mask$partition1$ & 1;
        if(or__3943__auto____8981) {
          return or__3943__auto____8981
        }else {
          return G__8979__8980.cljs$core$IEditableCollection$
        }
      }()) {
        return true
      }else {
        if(!G__8979__8980.cljs$lang$protocol_mask$partition1$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.IEditableCollection, G__8979__8980)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.IEditableCollection, G__8979__8980)
    }
  }()) {
    return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, cljs.core._conj_BANG_, cljs.core.transient$.call(null, to), from))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, to, from)
  }
};
cljs.core.mapv = function() {
  var mapv = null;
  var mapv__2 = function(f, coll) {
    return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(v, o) {
      return cljs.core.conj_BANG_.call(null, v, f.call(null, o))
    }, cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY), coll))
  };
  var mapv__3 = function(f, c1, c2) {
    return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.map.call(null, f, c1, c2))
  };
  var mapv__4 = function(f, c1, c2, c3) {
    return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.map.call(null, f, c1, c2, c3))
  };
  var mapv__5 = function() {
    var G__8982__delegate = function(f, c1, c2, c3, colls) {
      return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.apply.call(null, cljs.core.map, f, c1, c2, c3, colls))
    };
    var G__8982 = function(f, c1, c2, c3, var_args) {
      var colls = null;
      if(goog.isDef(var_args)) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0)
      }
      return G__8982__delegate.call(this, f, c1, c2, c3, colls)
    };
    G__8982.cljs$lang$maxFixedArity = 4;
    G__8982.cljs$lang$applyTo = function(arglist__8983) {
      var f = cljs.core.first(arglist__8983);
      var c1 = cljs.core.first(cljs.core.next(arglist__8983));
      var c2 = cljs.core.first(cljs.core.next(cljs.core.next(arglist__8983)));
      var c3 = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(arglist__8983))));
      var colls = cljs.core.rest(cljs.core.next(cljs.core.next(cljs.core.next(arglist__8983))));
      return G__8982__delegate(f, c1, c2, c3, colls)
    };
    G__8982.cljs$lang$arity$variadic = G__8982__delegate;
    return G__8982
  }();
  mapv = function(f, c1, c2, c3, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return mapv__2.call(this, f, c1);
      case 3:
        return mapv__3.call(this, f, c1, c2);
      case 4:
        return mapv__4.call(this, f, c1, c2, c3);
      default:
        return mapv__5.cljs$lang$arity$variadic(f, c1, c2, c3, cljs.core.array_seq(arguments, 4))
    }
    throw"Invalid arity: " + arguments.length;
  };
  mapv.cljs$lang$maxFixedArity = 4;
  mapv.cljs$lang$applyTo = mapv__5.cljs$lang$applyTo;
  mapv.cljs$lang$arity$2 = mapv__2;
  mapv.cljs$lang$arity$3 = mapv__3;
  mapv.cljs$lang$arity$4 = mapv__4;
  mapv.cljs$lang$arity$variadic = mapv__5.cljs$lang$arity$variadic;
  return mapv
}();
cljs.core.filterv = function filterv(pred, coll) {
  return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(v, o) {
    if(cljs.core.truth_(pred.call(null, o))) {
      return cljs.core.conj_BANG_.call(null, v, o)
    }else {
      return v
    }
  }, cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY), coll))
};
cljs.core.partition = function() {
  var partition = null;
  var partition__2 = function(n, coll) {
    return partition.call(null, n, n, coll)
  };
  var partition__3 = function(n, step, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__4092__auto____8990 = cljs.core.seq.call(null, coll);
      if(temp__4092__auto____8990) {
        var s__8991 = temp__4092__auto____8990;
        var p__8992 = cljs.core.take.call(null, n, s__8991);
        if(n === cljs.core.count.call(null, p__8992)) {
          return cljs.core.cons.call(null, p__8992, partition.call(null, n, step, cljs.core.drop.call(null, step, s__8991)))
        }else {
          return null
        }
      }else {
        return null
      }
    }, null)
  };
  var partition__4 = function(n, step, pad, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__4092__auto____8993 = cljs.core.seq.call(null, coll);
      if(temp__4092__auto____8993) {
        var s__8994 = temp__4092__auto____8993;
        var p__8995 = cljs.core.take.call(null, n, s__8994);
        if(n === cljs.core.count.call(null, p__8995)) {
          return cljs.core.cons.call(null, p__8995, partition.call(null, n, step, pad, cljs.core.drop.call(null, step, s__8994)))
        }else {
          return cljs.core.list.call(null, cljs.core.take.call(null, n, cljs.core.concat.call(null, p__8995, pad)))
        }
      }else {
        return null
      }
    }, null)
  };
  partition = function(n, step, pad, coll) {
    switch(arguments.length) {
      case 2:
        return partition__2.call(this, n, step);
      case 3:
        return partition__3.call(this, n, step, pad);
      case 4:
        return partition__4.call(this, n, step, pad, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  partition.cljs$lang$arity$2 = partition__2;
  partition.cljs$lang$arity$3 = partition__3;
  partition.cljs$lang$arity$4 = partition__4;
  return partition
}();
cljs.core.get_in = function() {
  var get_in = null;
  var get_in__2 = function(m, ks) {
    return cljs.core.reduce.call(null, cljs.core.get, m, ks)
  };
  var get_in__3 = function(m, ks, not_found) {
    var sentinel__9000 = cljs.core.lookup_sentinel;
    var m__9001 = m;
    var ks__9002 = cljs.core.seq.call(null, ks);
    while(true) {
      if(ks__9002) {
        var m__9003 = cljs.core._lookup.call(null, m__9001, cljs.core.first.call(null, ks__9002), sentinel__9000);
        if(sentinel__9000 === m__9003) {
          return not_found
        }else {
          var G__9004 = sentinel__9000;
          var G__9005 = m__9003;
          var G__9006 = cljs.core.next.call(null, ks__9002);
          sentinel__9000 = G__9004;
          m__9001 = G__9005;
          ks__9002 = G__9006;
          continue
        }
      }else {
        return m__9001
      }
      break
    }
  };
  get_in = function(m, ks, not_found) {
    switch(arguments.length) {
      case 2:
        return get_in__2.call(this, m, ks);
      case 3:
        return get_in__3.call(this, m, ks, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  get_in.cljs$lang$arity$2 = get_in__2;
  get_in.cljs$lang$arity$3 = get_in__3;
  return get_in
}();
cljs.core.assoc_in = function assoc_in(m, p__9007, v) {
  var vec__9012__9013 = p__9007;
  var k__9014 = cljs.core.nth.call(null, vec__9012__9013, 0, null);
  var ks__9015 = cljs.core.nthnext.call(null, vec__9012__9013, 1);
  if(cljs.core.truth_(ks__9015)) {
    return cljs.core.assoc.call(null, m, k__9014, assoc_in.call(null, cljs.core._lookup.call(null, m, k__9014, null), ks__9015, v))
  }else {
    return cljs.core.assoc.call(null, m, k__9014, v)
  }
};
cljs.core.update_in = function() {
  var update_in__delegate = function(m, p__9016, f, args) {
    var vec__9021__9022 = p__9016;
    var k__9023 = cljs.core.nth.call(null, vec__9021__9022, 0, null);
    var ks__9024 = cljs.core.nthnext.call(null, vec__9021__9022, 1);
    if(cljs.core.truth_(ks__9024)) {
      return cljs.core.assoc.call(null, m, k__9023, cljs.core.apply.call(null, update_in, cljs.core._lookup.call(null, m, k__9023, null), ks__9024, f, args))
    }else {
      return cljs.core.assoc.call(null, m, k__9023, cljs.core.apply.call(null, f, cljs.core._lookup.call(null, m, k__9023, null), args))
    }
  };
  var update_in = function(m, p__9016, f, var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
    }
    return update_in__delegate.call(this, m, p__9016, f, args)
  };
  update_in.cljs$lang$maxFixedArity = 3;
  update_in.cljs$lang$applyTo = function(arglist__9025) {
    var m = cljs.core.first(arglist__9025);
    var p__9016 = cljs.core.first(cljs.core.next(arglist__9025));
    var f = cljs.core.first(cljs.core.next(cljs.core.next(arglist__9025)));
    var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__9025)));
    return update_in__delegate(m, p__9016, f, args)
  };
  update_in.cljs$lang$arity$variadic = update_in__delegate;
  return update_in
}();
cljs.core.Vector = function(meta, array, __hash) {
  this.meta = meta;
  this.array = array;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32400159
};
cljs.core.Vector.cljs$lang$type = true;
cljs.core.Vector.cljs$lang$ctorPrSeq = function(this__2260__auto__) {
  return cljs.core.list.call(null, "cljs.core/Vector")
};
cljs.core.Vector.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__9028 = this;
  var h__2143__auto____9029 = this__9028.__hash;
  if(!(h__2143__auto____9029 == null)) {
    return h__2143__auto____9029
  }else {
    var h__2143__auto____9030 = cljs.core.hash_coll.call(null, coll);
    this__9028.__hash = h__2143__auto____9030;
    return h__2143__auto____9030
  }
};
cljs.core.Vector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__9031 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, null)
};
cljs.core.Vector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__9032 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, not_found)
};
cljs.core.Vector.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var this__9033 = this;
  var new_array__9034 = this__9033.array.slice();
  new_array__9034[k] = v;
  return new cljs.core.Vector(this__9033.meta, new_array__9034, null)
};
cljs.core.Vector.prototype.call = function() {
  var G__9065 = null;
  var G__9065__2 = function(this_sym9035, k) {
    var this__9037 = this;
    var this_sym9035__9038 = this;
    var coll__9039 = this_sym9035__9038;
    return coll__9039.cljs$core$ILookup$_lookup$arity$2(coll__9039, k)
  };
  var G__9065__3 = function(this_sym9036, k, not_found) {
    var this__9037 = this;
    var this_sym9036__9040 = this;
    var coll__9041 = this_sym9036__9040;
    return coll__9041.cljs$core$ILookup$_lookup$arity$3(coll__9041, k, not_found)
  };
  G__9065 = function(this_sym9036, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__9065__2.call(this, this_sym9036, k);
      case 3:
        return G__9065__3.call(this, this_sym9036, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__9065
}();
cljs.core.Vector.prototype.apply = function(this_sym9026, args9027) {
  var this__9042 = this;
  return this_sym9026.call.apply(this_sym9026, [this_sym9026].concat(args9027.slice()))
};
cljs.core.Vector.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__9043 = this;
  var new_array__9044 = this__9043.array.slice();
  new_array__9044.push(o);
  return new cljs.core.Vector(this__9043.meta, new_array__9044, null)
};
cljs.core.Vector.prototype.toString = function() {
  var this__9045 = this;
  var this__9046 = this;
  return cljs.core.pr_str.call(null, this__9046)
};
cljs.core.Vector.prototype.cljs$core$IReduce$_reduce$arity$2 = function(v, f) {
  var this__9047 = this;
  return cljs.core.ci_reduce.call(null, this__9047.array, f)
};
cljs.core.Vector.prototype.cljs$core$IReduce$_reduce$arity$3 = function(v, f, start) {
  var this__9048 = this;
  return cljs.core.ci_reduce.call(null, this__9048.array, f, start)
};
cljs.core.Vector.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__9049 = this;
  if(this__9049.array.length > 0) {
    var vector_seq__9050 = function vector_seq(i) {
      return new cljs.core.LazySeq(null, false, function() {
        if(i < this__9049.array.length) {
          return cljs.core.cons.call(null, this__9049.array[i], vector_seq.call(null, i + 1))
        }else {
          return null
        }
      }, null)
    };
    return vector_seq__9050.call(null, 0)
  }else {
    return null
  }
};
cljs.core.Vector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__9051 = this;
  return this__9051.array.length
};
cljs.core.Vector.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var this__9052 = this;
  var count__9053 = this__9052.array.length;
  if(count__9053 > 0) {
    return this__9052.array[count__9053 - 1]
  }else {
    return null
  }
};
cljs.core.Vector.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var this__9054 = this;
  if(this__9054.array.length > 0) {
    var new_array__9055 = this__9054.array.slice();
    new_array__9055.pop();
    return new cljs.core.Vector(this__9054.meta, new_array__9055, null)
  }else {
    throw new Error("Can't pop empty vector");
  }
};
cljs.core.Vector.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var this__9056 = this;
  return coll.cljs$core$IAssociative$_assoc$arity$3(coll, n, val)
};
cljs.core.Vector.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__9057 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.Vector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__9058 = this;
  return new cljs.core.Vector(meta, this__9058.array, this__9058.__hash)
};
cljs.core.Vector.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__9059 = this;
  return this__9059.meta
};
cljs.core.Vector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var this__9060 = this;
  if(function() {
    var and__3941__auto____9061 = 0 <= n;
    if(and__3941__auto____9061) {
      return n < this__9060.array.length
    }else {
      return and__3941__auto____9061
    }
  }()) {
    return this__9060.array[n]
  }else {
    return null
  }
};
cljs.core.Vector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var this__9062 = this;
  if(function() {
    var and__3941__auto____9063 = 0 <= n;
    if(and__3941__auto____9063) {
      return n < this__9062.array.length
    }else {
      return and__3941__auto____9063
    }
  }()) {
    return this__9062.array[n]
  }else {
    return not_found
  }
};
cljs.core.Vector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__9064 = this;
  return cljs.core.with_meta.call(null, cljs.core.Vector.EMPTY, this__9064.meta)
};
cljs.core.Vector;
cljs.core.Vector.EMPTY = new cljs.core.Vector(null, [], 0);
cljs.core.Vector.fromArray = function(xs) {
  return new cljs.core.Vector(null, xs, null)
};
cljs.core.VectorNode = function(edit, arr) {
  this.edit = edit;
  this.arr = arr
};
cljs.core.VectorNode.cljs$lang$type = true;
cljs.core.VectorNode.cljs$lang$ctorPrSeq = function(this__2261__auto__) {
  return cljs.core.list.call(null, "cljs.core/VectorNode")
};
cljs.core.VectorNode;
cljs.core.pv_fresh_node = function pv_fresh_node(edit) {
  return new cljs.core.VectorNode(edit, cljs.core.make_array.call(null, 32))
};
cljs.core.pv_aget = function pv_aget(node, idx) {
  return node.arr[idx]
};
cljs.core.pv_aset = function pv_aset(node, idx, val) {
  return node.arr[idx] = val
};
cljs.core.pv_clone_node = function pv_clone_node(node) {
  return new cljs.core.VectorNode(node.edit, node.arr.slice())
};
cljs.core.tail_off = function tail_off(pv) {
  var cnt__9067 = pv.cnt;
  if(cnt__9067 < 32) {
    return 0
  }else {
    return cnt__9067 - 1 >>> 5 << 5
  }
};
cljs.core.new_path = function new_path(edit, level, node) {
  var ll__9073 = level;
  var ret__9074 = node;
  while(true) {
    if(ll__9073 === 0) {
      return ret__9074
    }else {
      var embed__9075 = ret__9074;
      var r__9076 = cljs.core.pv_fresh_node.call(null, edit);
      var ___9077 = cljs.core.pv_aset.call(null, r__9076, 0, embed__9075);
      var G__9078 = ll__9073 - 5;
      var G__9079 = r__9076;
      ll__9073 = G__9078;
      ret__9074 = G__9079;
      continue
    }
    break
  }
};
cljs.core.push_tail = function push_tail(pv, level, parent, tailnode) {
  var ret__9085 = cljs.core.pv_clone_node.call(null, parent);
  var subidx__9086 = pv.cnt - 1 >>> level & 31;
  if(5 === level) {
    cljs.core.pv_aset.call(null, ret__9085, subidx__9086, tailnode);
    return ret__9085
  }else {
    var child__9087 = cljs.core.pv_aget.call(null, parent, subidx__9086);
    if(!(child__9087 == null)) {
      var node_to_insert__9088 = push_tail.call(null, pv, level - 5, child__9087, tailnode);
      cljs.core.pv_aset.call(null, ret__9085, subidx__9086, node_to_insert__9088);
      return ret__9085
    }else {
      var node_to_insert__9089 = cljs.core.new_path.call(null, null, level - 5, tailnode);
      cljs.core.pv_aset.call(null, ret__9085, subidx__9086, node_to_insert__9089);
      return ret__9085
    }
  }
};
cljs.core.array_for = function array_for(pv, i) {
  if(function() {
    var and__3941__auto____9093 = 0 <= i;
    if(and__3941__auto____9093) {
      return i < pv.cnt
    }else {
      return and__3941__auto____9093
    }
  }()) {
    if(i >= cljs.core.tail_off.call(null, pv)) {
      return pv.tail
    }else {
      var node__9094 = pv.root;
      var level__9095 = pv.shift;
      while(true) {
        if(level__9095 > 0) {
          var G__9096 = cljs.core.pv_aget.call(null, node__9094, i >>> level__9095 & 31);
          var G__9097 = level__9095 - 5;
          node__9094 = G__9096;
          level__9095 = G__9097;
          continue
        }else {
          return node__9094.arr
        }
        break
      }
    }
  }else {
    throw new Error([cljs.core.str("No item "), cljs.core.str(i), cljs.core.str(" in vector of length "), cljs.core.str(pv.cnt)].join(""));
  }
};
cljs.core.do_assoc = function do_assoc(pv, level, node, i, val) {
  var ret__9100 = cljs.core.pv_clone_node.call(null, node);
  if(level === 0) {
    cljs.core.pv_aset.call(null, ret__9100, i & 31, val);
    return ret__9100
  }else {
    var subidx__9101 = i >>> level & 31;
    cljs.core.pv_aset.call(null, ret__9100, subidx__9101, do_assoc.call(null, pv, level - 5, cljs.core.pv_aget.call(null, node, subidx__9101), i, val));
    return ret__9100
  }
};
cljs.core.pop_tail = function pop_tail(pv, level, node) {
  var subidx__9107 = pv.cnt - 2 >>> level & 31;
  if(level > 5) {
    var new_child__9108 = pop_tail.call(null, pv, level - 5, cljs.core.pv_aget.call(null, node, subidx__9107));
    if(function() {
      var and__3941__auto____9109 = new_child__9108 == null;
      if(and__3941__auto____9109) {
        return subidx__9107 === 0
      }else {
        return and__3941__auto____9109
      }
    }()) {
      return null
    }else {
      var ret__9110 = cljs.core.pv_clone_node.call(null, node);
      cljs.core.pv_aset.call(null, ret__9110, subidx__9107, new_child__9108);
      return ret__9110
    }
  }else {
    if(subidx__9107 === 0) {
      return null
    }else {
      if("\ufdd0'else") {
        var ret__9111 = cljs.core.pv_clone_node.call(null, node);
        cljs.core.pv_aset.call(null, ret__9111, subidx__9107, null);
        return ret__9111
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentVector = function(meta, cnt, shift, root, tail, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 1;
  this.cljs$lang$protocol_mask$partition0$ = 167668511
};
cljs.core.PersistentVector.cljs$lang$type = true;
cljs.core.PersistentVector.cljs$lang$ctorPrSeq = function(this__2260__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentVector")
};
cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var this__9114 = this;
  return new cljs.core.TransientVector(this__9114.cnt, this__9114.shift, cljs.core.tv_editable_root.call(null, this__9114.root), cljs.core.tv_editable_tail.call(null, this__9114.tail))
};
cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__9115 = this;
  var h__2143__auto____9116 = this__9115.__hash;
  if(!(h__2143__auto____9116 == null)) {
    return h__2143__auto____9116
  }else {
    var h__2143__auto____9117 = cljs.core.hash_coll.call(null, coll);
    this__9115.__hash = h__2143__auto____9117;
    return h__2143__auto____9117
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__9118 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, null)
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__9119 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, not_found)
};
cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var this__9120 = this;
  if(function() {
    var and__3941__auto____9121 = 0 <= k;
    if(and__3941__auto____9121) {
      return k < this__9120.cnt
    }else {
      return and__3941__auto____9121
    }
  }()) {
    if(cljs.core.tail_off.call(null, coll) <= k) {
      var new_tail__9122 = this__9120.tail.slice();
      new_tail__9122[k & 31] = v;
      return new cljs.core.PersistentVector(this__9120.meta, this__9120.cnt, this__9120.shift, this__9120.root, new_tail__9122, null)
    }else {
      return new cljs.core.PersistentVector(this__9120.meta, this__9120.cnt, this__9120.shift, cljs.core.do_assoc.call(null, coll, this__9120.shift, this__9120.root, k, v), this__9120.tail, null)
    }
  }else {
    if(k === this__9120.cnt) {
      return coll.cljs$core$ICollection$_conj$arity$2(coll, v)
    }else {
      if("\ufdd0'else") {
        throw new Error([cljs.core.str("Index "), cljs.core.str(k), cljs.core.str(" out of bounds  [0,"), cljs.core.str(this__9120.cnt), cljs.core.str("]")].join(""));
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentVector.prototype.call = function() {
  var G__9170 = null;
  var G__9170__2 = function(this_sym9123, k) {
    var this__9125 = this;
    var this_sym9123__9126 = this;
    var coll__9127 = this_sym9123__9126;
    return coll__9127.cljs$core$ILookup$_lookup$arity$2(coll__9127, k)
  };
  var G__9170__3 = function(this_sym9124, k, not_found) {
    var this__9125 = this;
    var this_sym9124__9128 = this;
    var coll__9129 = this_sym9124__9128;
    return coll__9129.cljs$core$ILookup$_lookup$arity$3(coll__9129, k, not_found)
  };
  G__9170 = function(this_sym9124, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__9170__2.call(this, this_sym9124, k);
      case 3:
        return G__9170__3.call(this, this_sym9124, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__9170
}();
cljs.core.PersistentVector.prototype.apply = function(this_sym9112, args9113) {
  var this__9130 = this;
  return this_sym9112.call.apply(this_sym9112, [this_sym9112].concat(args9113.slice()))
};
cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(v, f, init) {
  var this__9131 = this;
  var step_init__9132 = [0, init];
  var i__9133 = 0;
  while(true) {
    if(i__9133 < this__9131.cnt) {
      var arr__9134 = cljs.core.array_for.call(null, v, i__9133);
      var len__9135 = arr__9134.length;
      var init__9139 = function() {
        var j__9136 = 0;
        var init__9137 = step_init__9132[1];
        while(true) {
          if(j__9136 < len__9135) {
            var init__9138 = f.call(null, init__9137, j__9136 + i__9133, arr__9134[j__9136]);
            if(cljs.core.reduced_QMARK_.call(null, init__9138)) {
              return init__9138
            }else {
              var G__9171 = j__9136 + 1;
              var G__9172 = init__9138;
              j__9136 = G__9171;
              init__9137 = G__9172;
              continue
            }
          }else {
            step_init__9132[0] = len__9135;
            step_init__9132[1] = init__9137;
            return init__9137
          }
          break
        }
      }();
      if(cljs.core.reduced_QMARK_.call(null, init__9139)) {
        return cljs.core.deref.call(null, init__9139)
      }else {
        var G__9173 = i__9133 + step_init__9132[0];
        i__9133 = G__9173;
        continue
      }
    }else {
      return step_init__9132[1]
    }
    break
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__9140 = this;
  if(this__9140.cnt - cljs.core.tail_off.call(null, coll) < 32) {
    var new_tail__9141 = this__9140.tail.slice();
    new_tail__9141.push(o);
    return new cljs.core.PersistentVector(this__9140.meta, this__9140.cnt + 1, this__9140.shift, this__9140.root, new_tail__9141, null)
  }else {
    var root_overflow_QMARK___9142 = this__9140.cnt >>> 5 > 1 << this__9140.shift;
    var new_shift__9143 = root_overflow_QMARK___9142 ? this__9140.shift + 5 : this__9140.shift;
    var new_root__9145 = root_overflow_QMARK___9142 ? function() {
      var n_r__9144 = cljs.core.pv_fresh_node.call(null, null);
      cljs.core.pv_aset.call(null, n_r__9144, 0, this__9140.root);
      cljs.core.pv_aset.call(null, n_r__9144, 1, cljs.core.new_path.call(null, null, this__9140.shift, new cljs.core.VectorNode(null, this__9140.tail)));
      return n_r__9144
    }() : cljs.core.push_tail.call(null, coll, this__9140.shift, this__9140.root, new cljs.core.VectorNode(null, this__9140.tail));
    return new cljs.core.PersistentVector(this__9140.meta, this__9140.cnt + 1, new_shift__9143, new_root__9145, [o], null)
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var this__9146 = this;
  if(this__9146.cnt > 0) {
    return new cljs.core.RSeq(coll, this__9146.cnt - 1, null)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_key$arity$1 = function(coll) {
  var this__9147 = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(coll, 0)
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_val$arity$1 = function(coll) {
  var this__9148 = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(coll, 1)
};
cljs.core.PersistentVector.prototype.toString = function() {
  var this__9149 = this;
  var this__9150 = this;
  return cljs.core.pr_str.call(null, this__9150)
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = function(v, f) {
  var this__9151 = this;
  return cljs.core.ci_reduce.call(null, v, f)
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = function(v, f, start) {
  var this__9152 = this;
  return cljs.core.ci_reduce.call(null, v, f, start)
};
cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__9153 = this;
  if(this__9153.cnt === 0) {
    return null
  }else {
    return cljs.core.chunked_seq.call(null, coll, 0, 0)
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__9154 = this;
  return this__9154.cnt
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var this__9155 = this;
  if(this__9155.cnt > 0) {
    return coll.cljs$core$IIndexed$_nth$arity$2(coll, this__9155.cnt - 1)
  }else {
    return null
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var this__9156 = this;
  if(this__9156.cnt === 0) {
    throw new Error("Can't pop empty vector");
  }else {
    if(1 === this__9156.cnt) {
      return cljs.core._with_meta.call(null, cljs.core.PersistentVector.EMPTY, this__9156.meta)
    }else {
      if(1 < this__9156.cnt - cljs.core.tail_off.call(null, coll)) {
        return new cljs.core.PersistentVector(this__9156.meta, this__9156.cnt - 1, this__9156.shift, this__9156.root, this__9156.tail.slice(0, -1), null)
      }else {
        if("\ufdd0'else") {
          var new_tail__9157 = cljs.core.array_for.call(null, coll, this__9156.cnt - 2);
          var nr__9158 = cljs.core.pop_tail.call(null, coll, this__9156.shift, this__9156.root);
          var new_root__9159 = nr__9158 == null ? cljs.core.PersistentVector.EMPTY_NODE : nr__9158;
          var cnt_1__9160 = this__9156.cnt - 1;
          if(function() {
            var and__3941__auto____9161 = 5 < this__9156.shift;
            if(and__3941__auto____9161) {
              return cljs.core.pv_aget.call(null, new_root__9159, 1) == null
            }else {
              return and__3941__auto____9161
            }
          }()) {
            return new cljs.core.PersistentVector(this__9156.meta, cnt_1__9160, this__9156.shift - 5, cljs.core.pv_aget.call(null, new_root__9159, 0), new_tail__9157, null)
          }else {
            return new cljs.core.PersistentVector(this__9156.meta, cnt_1__9160, this__9156.shift, new_root__9159, new_tail__9157, null)
          }
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var this__9162 = this;
  return coll.cljs$core$IAssociative$_assoc$arity$3(coll, n, val)
};
cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__9163 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__9164 = this;
  return new cljs.core.PersistentVector(meta, this__9164.cnt, this__9164.shift, this__9164.root, this__9164.tail, this__9164.__hash)
};
cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__9165 = this;
  return this__9165.meta
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var this__9166 = this;
  return cljs.core.array_for.call(null, coll, n)[n & 31]
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var this__9167 = this;
  if(function() {
    var and__3941__auto____9168 = 0 <= n;
    if(and__3941__auto____9168) {
      return n < this__9167.cnt
    }else {
      return and__3941__auto____9168
    }
  }()) {
    return coll.cljs$core$IIndexed$_nth$arity$2(coll, n)
  }else {
    return not_found
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__9169 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.EMPTY, this__9169.meta)
};
cljs.core.PersistentVector;
cljs.core.PersistentVector.EMPTY_NODE = cljs.core.pv_fresh_node.call(null, null);
cljs.core.PersistentVector.EMPTY = new cljs.core.PersistentVector(null, 0, 5, cljs.core.PersistentVector.EMPTY_NODE, [], 0);
cljs.core.PersistentVector.fromArray = function(xs, no_clone) {
  var l__9174 = xs.length;
  var xs__9175 = no_clone === true ? xs : xs.slice();
  if(l__9174 < 32) {
    return new cljs.core.PersistentVector(null, l__9174, 5, cljs.core.PersistentVector.EMPTY_NODE, xs__9175, null)
  }else {
    var node__9176 = xs__9175.slice(0, 32);
    var v__9177 = new cljs.core.PersistentVector(null, 32, 5, cljs.core.PersistentVector.EMPTY_NODE, node__9176, null);
    var i__9178 = 32;
    var out__9179 = cljs.core._as_transient.call(null, v__9177);
    while(true) {
      if(i__9178 < l__9174) {
        var G__9180 = i__9178 + 1;
        var G__9181 = cljs.core.conj_BANG_.call(null, out__9179, xs__9175[i__9178]);
        i__9178 = G__9180;
        out__9179 = G__9181;
        continue
      }else {
        return cljs.core.persistent_BANG_.call(null, out__9179)
      }
      break
    }
  }
};
cljs.core.vec = function vec(coll) {
  return cljs.core._persistent_BANG_.call(null, cljs.core.reduce.call(null, cljs.core._conj_BANG_, cljs.core._as_transient.call(null, cljs.core.PersistentVector.EMPTY), coll))
};
cljs.core.vector = function() {
  var vector__delegate = function(args) {
    return cljs.core.vec.call(null, args)
  };
  var vector = function(var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return vector__delegate.call(this, args)
  };
  vector.cljs$lang$maxFixedArity = 0;
  vector.cljs$lang$applyTo = function(arglist__9182) {
    var args = cljs.core.seq(arglist__9182);
    return vector__delegate(args)
  };
  vector.cljs$lang$arity$variadic = vector__delegate;
  return vector
}();
cljs.core.ChunkedSeq = function(vec, node, i, off, meta) {
  this.vec = vec;
  this.node = node;
  this.i = i;
  this.off = off;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 27525356
};
cljs.core.ChunkedSeq.cljs$lang$type = true;
cljs.core.ChunkedSeq.cljs$lang$ctorPrSeq = function(this__2260__auto__) {
  return cljs.core.list.call(null, "cljs.core/ChunkedSeq")
};
cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var this__9183 = this;
  if(this__9183.off + 1 < this__9183.node.length) {
    var s__9184 = cljs.core.chunked_seq.call(null, this__9183.vec, this__9183.node, this__9183.i, this__9183.off + 1);
    if(s__9184 == null) {
      return null
    }else {
      return s__9184
    }
  }else {
    return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll)
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__9185 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__9186 = this;
  return coll
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__9187 = this;
  return this__9187.node[this__9187.off]
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__9188 = this;
  if(this__9188.off + 1 < this__9188.node.length) {
    var s__9189 = cljs.core.chunked_seq.call(null, this__9188.vec, this__9188.node, this__9188.i, this__9188.off + 1);
    if(s__9189 == null) {
      return cljs.core.List.EMPTY
    }else {
      return s__9189
    }
  }else {
    return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll)
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$ = true;
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var this__9190 = this;
  var l__9191 = this__9190.node.length;
  var s__9192 = this__9190.i + l__9191 < cljs.core._count.call(null, this__9190.vec) ? cljs.core.chunked_seq.call(null, this__9190.vec, this__9190.i + l__9191, 0) : null;
  if(s__9192 == null) {
    return null
  }else {
    return s__9192
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__9193 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var this__9194 = this;
  return cljs.core.chunked_seq.call(null, this__9194.vec, this__9194.node, this__9194.i, this__9194.off, m)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_meta$arity$1 = function(coll) {
  var this__9195 = this;
  return this__9195.meta
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__9196 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.EMPTY, this__9196.meta)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$ = true;
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var this__9197 = this;
  return cljs.core.array_chunk.call(null, this__9197.node, this__9197.off)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var this__9198 = this;
  var l__9199 = this__9198.node.length;
  var s__9200 = this__9198.i + l__9199 < cljs.core._count.call(null, this__9198.vec) ? cljs.core.chunked_seq.call(null, this__9198.vec, this__9198.i + l__9199, 0) : null;
  if(s__9200 == null) {
    return cljs.core.List.EMPTY
  }else {
    return s__9200
  }
};
cljs.core.ChunkedSeq;
cljs.core.chunked_seq = function() {
  var chunked_seq = null;
  var chunked_seq__3 = function(vec, i, off) {
    return chunked_seq.call(null, vec, cljs.core.array_for.call(null, vec, i), i, off, null)
  };
  var chunked_seq__4 = function(vec, node, i, off) {
    return chunked_seq.call(null, vec, node, i, off, null)
  };
  var chunked_seq__5 = function(vec, node, i, off, meta) {
    return new cljs.core.ChunkedSeq(vec, node, i, off, meta)
  };
  chunked_seq = function(vec, node, i, off, meta) {
    switch(arguments.length) {
      case 3:
        return chunked_seq__3.call(this, vec, node, i);
      case 4:
        return chunked_seq__4.call(this, vec, node, i, off);
      case 5:
        return chunked_seq__5.call(this, vec, node, i, off, meta)
    }
    throw"Invalid arity: " + arguments.length;
  };
  chunked_seq.cljs$lang$arity$3 = chunked_seq__3;
  chunked_seq.cljs$lang$arity$4 = chunked_seq__4;
  chunked_seq.cljs$lang$arity$5 = chunked_seq__5;
  return chunked_seq
}();
cljs.core.Subvec = function(meta, v, start, end, __hash) {
  this.meta = meta;
  this.v = v;
  this.start = start;
  this.end = end;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32400159
};
cljs.core.Subvec.cljs$lang$type = true;
cljs.core.Subvec.cljs$lang$ctorPrSeq = function(this__2260__auto__) {
  return cljs.core.list.call(null, "cljs.core/Subvec")
};
cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__9203 = this;
  var h__2143__auto____9204 = this__9203.__hash;
  if(!(h__2143__auto____9204 == null)) {
    return h__2143__auto____9204
  }else {
    var h__2143__auto____9205 = cljs.core.hash_coll.call(null, coll);
    this__9203.__hash = h__2143__auto____9205;
    return h__2143__auto____9205
  }
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__9206 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, null)
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__9207 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, not_found)
};
cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, key, val) {
  var this__9208 = this;
  var v_pos__9209 = this__9208.start + key;
  return new cljs.core.Subvec(this__9208.meta, cljs.core._assoc.call(null, this__9208.v, v_pos__9209, val), this__9208.start, this__9208.end > v_pos__9209 + 1 ? this__9208.end : v_pos__9209 + 1, null)
};
cljs.core.Subvec.prototype.call = function() {
  var G__9235 = null;
  var G__9235__2 = function(this_sym9210, k) {
    var this__9212 = this;
    var this_sym9210__9213 = this;
    var coll__9214 = this_sym9210__9213;
    return coll__9214.cljs$core$ILookup$_lookup$arity$2(coll__9214, k)
  };
  var G__9235__3 = function(this_sym9211, k, not_found) {
    var this__9212 = this;
    var this_sym9211__9215 = this;
    var coll__9216 = this_sym9211__9215;
    return coll__9216.cljs$core$ILookup$_lookup$arity$3(coll__9216, k, not_found)
  };
  G__9235 = function(this_sym9211, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__9235__2.call(this, this_sym9211, k);
      case 3:
        return G__9235__3.call(this, this_sym9211, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__9235
}();
cljs.core.Subvec.prototype.apply = function(this_sym9201, args9202) {
  var this__9217 = this;
  return this_sym9201.call.apply(this_sym9201, [this_sym9201].concat(args9202.slice()))
};
cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__9218 = this;
  return new cljs.core.Subvec(this__9218.meta, cljs.core._assoc_n.call(null, this__9218.v, this__9218.end, o), this__9218.start, this__9218.end + 1, null)
};
cljs.core.Subvec.prototype.toString = function() {
  var this__9219 = this;
  var this__9220 = this;
  return cljs.core.pr_str.call(null, this__9220)
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var this__9221 = this;
  return cljs.core.ci_reduce.call(null, coll, f)
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var this__9222 = this;
  return cljs.core.ci_reduce.call(null, coll, f, start)
};
cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__9223 = this;
  var subvec_seq__9224 = function subvec_seq(i) {
    if(i === this__9223.end) {
      return null
    }else {
      return cljs.core.cons.call(null, cljs.core._nth.call(null, this__9223.v, i), new cljs.core.LazySeq(null, false, function() {
        return subvec_seq.call(null, i + 1)
      }, null))
    }
  };
  return subvec_seq__9224.call(null, this__9223.start)
};
cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__9225 = this;
  return this__9225.end - this__9225.start
};
cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var this__9226 = this;
  return cljs.core._nth.call(null, this__9226.v, this__9226.end - 1)
};
cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var this__9227 = this;
  if(this__9227.start === this__9227.end) {
    throw new Error("Can't pop empty vector");
  }else {
    return new cljs.core.Subvec(this__9227.meta, this__9227.v, this__9227.start, this__9227.end - 1, null)
  }
};
cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var this__9228 = this;
  return coll.cljs$core$IAssociative$_assoc$arity$3(coll, n, val)
};
cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__9229 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__9230 = this;
  return new cljs.core.Subvec(meta, this__9230.v, this__9230.start, this__9230.end, this__9230.__hash)
};
cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__9231 = this;
  return this__9231.meta
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var this__9232 = this;
  return cljs.core._nth.call(null, this__9232.v, this__9232.start + n)
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var this__9233 = this;
  return cljs.core._nth.call(null, this__9233.v, this__9233.start + n, not_found)
};
cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__9234 = this;
  return cljs.core.with_meta.call(null, cljs.core.Vector.EMPTY, this__9234.meta)
};
cljs.core.Subvec;
cljs.core.subvec = function() {
  var subvec = null;
  var subvec__2 = function(v, start) {
    return subvec.call(null, v, start, cljs.core.count.call(null, v))
  };
  var subvec__3 = function(v, start, end) {
    return new cljs.core.Subvec(null, v, start, end, null)
  };
  subvec = function(v, start, end) {
    switch(arguments.length) {
      case 2:
        return subvec__2.call(this, v, start);
      case 3:
        return subvec__3.call(this, v, start, end)
    }
    throw"Invalid arity: " + arguments.length;
  };
  subvec.cljs$lang$arity$2 = subvec__2;
  subvec.cljs$lang$arity$3 = subvec__3;
  return subvec
}();
cljs.core.tv_ensure_editable = function tv_ensure_editable(edit, node) {
  if(edit === node.edit) {
    return node
  }else {
    return new cljs.core.VectorNode(edit, node.arr.slice())
  }
};
cljs.core.tv_editable_root = function tv_editable_root(node) {
  return new cljs.core.VectorNode({}, node.arr.slice())
};
cljs.core.tv_editable_tail = function tv_editable_tail(tl) {
  var ret__9237 = cljs.core.make_array.call(null, 32);
  cljs.core.array_copy.call(null, tl, 0, ret__9237, 0, tl.length);
  return ret__9237
};
cljs.core.tv_push_tail = function tv_push_tail(tv, level, parent, tail_node) {
  var ret__9241 = cljs.core.tv_ensure_editable.call(null, tv.root.edit, parent);
  var subidx__9242 = tv.cnt - 1 >>> level & 31;
  cljs.core.pv_aset.call(null, ret__9241, subidx__9242, level === 5 ? tail_node : function() {
    var child__9243 = cljs.core.pv_aget.call(null, ret__9241, subidx__9242);
    if(!(child__9243 == null)) {
      return tv_push_tail.call(null, tv, level - 5, child__9243, tail_node)
    }else {
      return cljs.core.new_path.call(null, tv.root.edit, level - 5, tail_node)
    }
  }());
  return ret__9241
};
cljs.core.tv_pop_tail = function tv_pop_tail(tv, level, node) {
  var node__9248 = cljs.core.tv_ensure_editable.call(null, tv.root.edit, node);
  var subidx__9249 = tv.cnt - 2 >>> level & 31;
  if(level > 5) {
    var new_child__9250 = tv_pop_tail.call(null, tv, level - 5, cljs.core.pv_aget.call(null, node__9248, subidx__9249));
    if(function() {
      var and__3941__auto____9251 = new_child__9250 == null;
      if(and__3941__auto____9251) {
        return subidx__9249 === 0
      }else {
        return and__3941__auto____9251
      }
    }()) {
      return null
    }else {
      cljs.core.pv_aset.call(null, node__9248, subidx__9249, new_child__9250);
      return node__9248
    }
  }else {
    if(subidx__9249 === 0) {
      return null
    }else {
      if("\ufdd0'else") {
        cljs.core.pv_aset.call(null, node__9248, subidx__9249, null);
        return node__9248
      }else {
        return null
      }
    }
  }
};
cljs.core.editable_array_for = function editable_array_for(tv, i) {
  if(function() {
    var and__3941__auto____9256 = 0 <= i;
    if(and__3941__auto____9256) {
      return i < tv.cnt
    }else {
      return and__3941__auto____9256
    }
  }()) {
    if(i >= cljs.core.tail_off.call(null, tv)) {
      return tv.tail
    }else {
      var root__9257 = tv.root;
      var node__9258 = root__9257;
      var level__9259 = tv.shift;
      while(true) {
        if(level__9259 > 0) {
          var G__9260 = cljs.core.tv_ensure_editable.call(null, root__9257.edit, cljs.core.pv_aget.call(null, node__9258, i >>> level__9259 & 31));
          var G__9261 = level__9259 - 5;
          node__9258 = G__9260;
          level__9259 = G__9261;
          continue
        }else {
          return node__9258.arr
        }
        break
      }
    }
  }else {
    throw new Error([cljs.core.str("No item "), cljs.core.str(i), cljs.core.str(" in transient vector of length "), cljs.core.str(tv.cnt)].join(""));
  }
};
cljs.core.TransientVector = function(cnt, shift, root, tail) {
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.cljs$lang$protocol_mask$partition0$ = 275;
  this.cljs$lang$protocol_mask$partition1$ = 22
};
cljs.core.TransientVector.cljs$lang$type = true;
cljs.core.TransientVector.cljs$lang$ctorPrSeq = function(this__2260__auto__) {
  return cljs.core.list.call(null, "cljs.core/TransientVector")
};
cljs.core.TransientVector.prototype.call = function() {
  var G__9301 = null;
  var G__9301__2 = function(this_sym9264, k) {
    var this__9266 = this;
    var this_sym9264__9267 = this;
    var coll__9268 = this_sym9264__9267;
    return coll__9268.cljs$core$ILookup$_lookup$arity$2(coll__9268, k)
  };
  var G__9301__3 = function(this_sym9265, k, not_found) {
    var this__9266 = this;
    var this_sym9265__9269 = this;
    var coll__9270 = this_sym9265__9269;
    return coll__9270.cljs$core$ILookup$_lookup$arity$3(coll__9270, k, not_found)
  };
  G__9301 = function(this_sym9265, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__9301__2.call(this, this_sym9265, k);
      case 3:
        return G__9301__3.call(this, this_sym9265, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__9301
}();
cljs.core.TransientVector.prototype.apply = function(this_sym9262, args9263) {
  var this__9271 = this;
  return this_sym9262.call.apply(this_sym9262, [this_sym9262].concat(args9263.slice()))
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__9272 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, null)
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__9273 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, not_found)
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var this__9274 = this;
  if(this__9274.root.edit) {
    return cljs.core.array_for.call(null, coll, n)[n & 31]
  }else {
    throw new Error("nth after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var this__9275 = this;
  if(function() {
    var and__3941__auto____9276 = 0 <= n;
    if(and__3941__auto____9276) {
      return n < this__9275.cnt
    }else {
      return and__3941__auto____9276
    }
  }()) {
    return coll.cljs$core$IIndexed$_nth$arity$2(coll, n)
  }else {
    return not_found
  }
};
cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__9277 = this;
  if(this__9277.root.edit) {
    return this__9277.cnt
  }else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = function(tcoll, n, val) {
  var this__9278 = this;
  if(this__9278.root.edit) {
    if(function() {
      var and__3941__auto____9279 = 0 <= n;
      if(and__3941__auto____9279) {
        return n < this__9278.cnt
      }else {
        return and__3941__auto____9279
      }
    }()) {
      if(cljs.core.tail_off.call(null, tcoll) <= n) {
        this__9278.tail[n & 31] = val;
        return tcoll
      }else {
        var new_root__9284 = function go(level, node) {
          var node__9282 = cljs.core.tv_ensure_editable.call(null, this__9278.root.edit, node);
          if(level === 0) {
            cljs.core.pv_aset.call(null, node__9282, n & 31, val);
            return node__9282
          }else {
            var subidx__9283 = n >>> level & 31;
            cljs.core.pv_aset.call(null, node__9282, subidx__9283, go.call(null, level - 5, cljs.core.pv_aget.call(null, node__9282, subidx__9283)));
            return node__9282
          }
        }.call(null, this__9278.shift, this__9278.root);
        this__9278.root = new_root__9284;
        return tcoll
      }
    }else {
      if(n === this__9278.cnt) {
        return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll, val)
      }else {
        if("\ufdd0'else") {
          throw new Error([cljs.core.str("Index "), cljs.core.str(n), cljs.core.str(" out of bounds for TransientVector of length"), cljs.core.str(this__9278.cnt)].join(""));
        }else {
          return null
        }
      }
    }
  }else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = function(tcoll) {
  var this__9285 = this;
  if(this__9285.root.edit) {
    if(this__9285.cnt === 0) {
      throw new Error("Can't pop empty vector");
    }else {
      if(1 === this__9285.cnt) {
        this__9285.cnt = 0;
        return tcoll
      }else {
        if((this__9285.cnt - 1 & 31) > 0) {
          this__9285.cnt = this__9285.cnt - 1;
          return tcoll
        }else {
          if("\ufdd0'else") {
            var new_tail__9286 = cljs.core.editable_array_for.call(null, tcoll, this__9285.cnt - 2);
            var new_root__9288 = function() {
              var nr__9287 = cljs.core.tv_pop_tail.call(null, tcoll, this__9285.shift, this__9285.root);
              if(!(nr__9287 == null)) {
                return nr__9287
              }else {
                return new cljs.core.VectorNode(this__9285.root.edit, cljs.core.make_array.call(null, 32))
              }
            }();
            if(function() {
              var and__3941__auto____9289 = 5 < this__9285.shift;
              if(and__3941__auto____9289) {
                return cljs.core.pv_aget.call(null, new_root__9288, 1) == null
              }else {
                return and__3941__auto____9289
              }
            }()) {
              var new_root__9290 = cljs.core.tv_ensure_editable.call(null, this__9285.root.edit, cljs.core.pv_aget.call(null, new_root__9288, 0));
              this__9285.root = new_root__9290;
              this__9285.shift = this__9285.shift - 5;
              this__9285.cnt = this__9285.cnt - 1;
              this__9285.tail = new_tail__9286;
              return tcoll
            }else {
              this__9285.root = new_root__9288;
              this__9285.cnt = this__9285.cnt - 1;
              this__9285.tail = new_tail__9286;
              return tcoll
            }
          }else {
            return null
          }
        }
      }
    }
  }else {
    throw new Error("pop! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var this__9291 = this;
  return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll, key, val)
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var this__9292 = this;
  if(this__9292.root.edit) {
    if(this__9292.cnt - cljs.core.tail_off.call(null, tcoll) < 32) {
      this__9292.tail[this__9292.cnt & 31] = o;
      this__9292.cnt = this__9292.cnt + 1;
      return tcoll
    }else {
      var tail_node__9293 = new cljs.core.VectorNode(this__9292.root.edit, this__9292.tail);
      var new_tail__9294 = cljs.core.make_array.call(null, 32);
      new_tail__9294[0] = o;
      this__9292.tail = new_tail__9294;
      if(this__9292.cnt >>> 5 > 1 << this__9292.shift) {
        var new_root_array__9295 = cljs.core.make_array.call(null, 32);
        var new_shift__9296 = this__9292.shift + 5;
        new_root_array__9295[0] = this__9292.root;
        new_root_array__9295[1] = cljs.core.new_path.call(null, this__9292.root.edit, this__9292.shift, tail_node__9293);
        this__9292.root = new cljs.core.VectorNode(this__9292.root.edit, new_root_array__9295);
        this__9292.shift = new_shift__9296;
        this__9292.cnt = this__9292.cnt + 1;
        return tcoll
      }else {
        var new_root__9297 = cljs.core.tv_push_tail.call(null, tcoll, this__9292.shift, this__9292.root, tail_node__9293);
        this__9292.root = new_root__9297;
        this__9292.cnt = this__9292.cnt + 1;
        return tcoll
      }
    }
  }else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var this__9298 = this;
  if(this__9298.root.edit) {
    this__9298.root.edit = null;
    var len__9299 = this__9298.cnt - cljs.core.tail_off.call(null, tcoll);
    var trimmed_tail__9300 = cljs.core.make_array.call(null, len__9299);
    cljs.core.array_copy.call(null, this__9298.tail, 0, trimmed_tail__9300, 0, len__9299);
    return new cljs.core.PersistentVector(null, this__9298.cnt, this__9298.shift, this__9298.root, trimmed_tail__9300, null)
  }else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientVector;
cljs.core.PersistentQueueSeq = function(meta, front, rear, __hash) {
  this.meta = meta;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850572
};
cljs.core.PersistentQueueSeq.cljs$lang$type = true;
cljs.core.PersistentQueueSeq.cljs$lang$ctorPrSeq = function(this__2260__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentQueueSeq")
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__9302 = this;
  var h__2143__auto____9303 = this__9302.__hash;
  if(!(h__2143__auto____9303 == null)) {
    return h__2143__auto____9303
  }else {
    var h__2143__auto____9304 = cljs.core.hash_coll.call(null, coll);
    this__9302.__hash = h__2143__auto____9304;
    return h__2143__auto____9304
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__9305 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.PersistentQueueSeq.prototype.toString = function() {
  var this__9306 = this;
  var this__9307 = this;
  return cljs.core.pr_str.call(null, this__9307)
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__9308 = this;
  return coll
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__9309 = this;
  return cljs.core._first.call(null, this__9309.front)
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__9310 = this;
  var temp__4090__auto____9311 = cljs.core.next.call(null, this__9310.front);
  if(temp__4090__auto____9311) {
    var f1__9312 = temp__4090__auto____9311;
    return new cljs.core.PersistentQueueSeq(this__9310.meta, f1__9312, this__9310.rear, null)
  }else {
    if(this__9310.rear == null) {
      return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll)
    }else {
      return new cljs.core.PersistentQueueSeq(this__9310.meta, this__9310.rear, null, null)
    }
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__9313 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__9314 = this;
  return new cljs.core.PersistentQueueSeq(meta, this__9314.front, this__9314.rear, this__9314.__hash)
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__9315 = this;
  return this__9315.meta
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__9316 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, this__9316.meta)
};
cljs.core.PersistentQueueSeq;
cljs.core.PersistentQueue = function(meta, count, front, rear, __hash) {
  this.meta = meta;
  this.count = count;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31858766
};
cljs.core.PersistentQueue.cljs$lang$type = true;
cljs.core.PersistentQueue.cljs$lang$ctorPrSeq = function(this__2260__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentQueue")
};
cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__9317 = this;
  var h__2143__auto____9318 = this__9317.__hash;
  if(!(h__2143__auto____9318 == null)) {
    return h__2143__auto____9318
  }else {
    var h__2143__auto____9319 = cljs.core.hash_coll.call(null, coll);
    this__9317.__hash = h__2143__auto____9319;
    return h__2143__auto____9319
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__9320 = this;
  if(cljs.core.truth_(this__9320.front)) {
    return new cljs.core.PersistentQueue(this__9320.meta, this__9320.count + 1, this__9320.front, cljs.core.conj.call(null, function() {
      var or__3943__auto____9321 = this__9320.rear;
      if(cljs.core.truth_(or__3943__auto____9321)) {
        return or__3943__auto____9321
      }else {
        return cljs.core.PersistentVector.EMPTY
      }
    }(), o), null)
  }else {
    return new cljs.core.PersistentQueue(this__9320.meta, this__9320.count + 1, cljs.core.conj.call(null, this__9320.front, o), cljs.core.PersistentVector.EMPTY, null)
  }
};
cljs.core.PersistentQueue.prototype.toString = function() {
  var this__9322 = this;
  var this__9323 = this;
  return cljs.core.pr_str.call(null, this__9323)
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__9324 = this;
  var rear__9325 = cljs.core.seq.call(null, this__9324.rear);
  if(cljs.core.truth_(function() {
    var or__3943__auto____9326 = this__9324.front;
    if(cljs.core.truth_(or__3943__auto____9326)) {
      return or__3943__auto____9326
    }else {
      return rear__9325
    }
  }())) {
    return new cljs.core.PersistentQueueSeq(null, this__9324.front, cljs.core.seq.call(null, rear__9325), null)
  }else {
    return null
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__9327 = this;
  return this__9327.count
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var this__9328 = this;
  return cljs.core._first.call(null, this__9328.front)
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var this__9329 = this;
  if(cljs.core.truth_(this__9329.front)) {
    var temp__4090__auto____9330 = cljs.core.next.call(null, this__9329.front);
    if(temp__4090__auto____9330) {
      var f1__9331 = temp__4090__auto____9330;
      return new cljs.core.PersistentQueue(this__9329.meta, this__9329.count - 1, f1__9331, this__9329.rear, null)
    }else {
      return new cljs.core.PersistentQueue(this__9329.meta, this__9329.count - 1, cljs.core.seq.call(null, this__9329.rear), cljs.core.PersistentVector.EMPTY, null)
    }
  }else {
    return coll
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__9332 = this;
  return cljs.core.first.call(null, this__9332.front)
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__9333 = this;
  return cljs.core.rest.call(null, cljs.core.seq.call(null, coll))
};
cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__9334 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__9335 = this;
  return new cljs.core.PersistentQueue(meta, this__9335.count, this__9335.front, this__9335.rear, this__9335.__hash)
};
cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__9336 = this;
  return this__9336.meta
};
cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__9337 = this;
  return cljs.core.PersistentQueue.EMPTY
};
cljs.core.PersistentQueue;
cljs.core.PersistentQueue.EMPTY = new cljs.core.PersistentQueue(null, 0, null, cljs.core.PersistentVector.EMPTY, 0);
cljs.core.NeverEquiv = function() {
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2097152
};
cljs.core.NeverEquiv.cljs$lang$type = true;
cljs.core.NeverEquiv.cljs$lang$ctorPrSeq = function(this__2260__auto__) {
  return cljs.core.list.call(null, "cljs.core/NeverEquiv")
};
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var this__9338 = this;
  return false
};
cljs.core.NeverEquiv;
cljs.core.never_equiv = new cljs.core.NeverEquiv;
cljs.core.equiv_map = function equiv_map(x, y) {
  return cljs.core.boolean$.call(null, cljs.core.map_QMARK_.call(null, y) ? cljs.core.count.call(null, x) === cljs.core.count.call(null, y) ? cljs.core.every_QMARK_.call(null, cljs.core.identity, cljs.core.map.call(null, function(xkv) {
    return cljs.core._EQ_.call(null, cljs.core._lookup.call(null, y, cljs.core.first.call(null, xkv), cljs.core.never_equiv), cljs.core.second.call(null, xkv))
  }, x)) : null : null)
};
cljs.core.scan_array = function scan_array(incr, k, array) {
  var len__9341 = array.length;
  var i__9342 = 0;
  while(true) {
    if(i__9342 < len__9341) {
      if(k === array[i__9342]) {
        return i__9342
      }else {
        var G__9343 = i__9342 + incr;
        i__9342 = G__9343;
        continue
      }
    }else {
      return null
    }
    break
  }
};
cljs.core.obj_map_compare_keys = function obj_map_compare_keys(a, b) {
  var a__9346 = cljs.core.hash.call(null, a);
  var b__9347 = cljs.core.hash.call(null, b);
  if(a__9346 < b__9347) {
    return-1
  }else {
    if(a__9346 > b__9347) {
      return 1
    }else {
      if("\ufdd0'else") {
        return 0
      }else {
        return null
      }
    }
  }
};
cljs.core.obj_map__GT_hash_map = function obj_map__GT_hash_map(m, k, v) {
  var ks__9355 = m.keys;
  var len__9356 = ks__9355.length;
  var so__9357 = m.strobj;
  var out__9358 = cljs.core.with_meta.call(null, cljs.core.PersistentHashMap.EMPTY, cljs.core.meta.call(null, m));
  var i__9359 = 0;
  var out__9360 = cljs.core.transient$.call(null, out__9358);
  while(true) {
    if(i__9359 < len__9356) {
      var k__9361 = ks__9355[i__9359];
      var G__9362 = i__9359 + 1;
      var G__9363 = cljs.core.assoc_BANG_.call(null, out__9360, k__9361, so__9357[k__9361]);
      i__9359 = G__9362;
      out__9360 = G__9363;
      continue
    }else {
      return cljs.core.persistent_BANG_.call(null, cljs.core.assoc_BANG_.call(null, out__9360, k, v))
    }
    break
  }
};
cljs.core.obj_clone = function obj_clone(obj, ks) {
  var new_obj__9369 = {};
  var l__9370 = ks.length;
  var i__9371 = 0;
  while(true) {
    if(i__9371 < l__9370) {
      var k__9372 = ks[i__9371];
      new_obj__9369[k__9372] = obj[k__9372];
      var G__9373 = i__9371 + 1;
      i__9371 = G__9373;
      continue
    }else {
    }
    break
  }
  return new_obj__9369
};
cljs.core.ObjMap = function(meta, keys, strobj, update_count, __hash) {
  this.meta = meta;
  this.keys = keys;
  this.strobj = strobj;
  this.update_count = update_count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 1;
  this.cljs$lang$protocol_mask$partition0$ = 15075087
};
cljs.core.ObjMap.cljs$lang$type = true;
cljs.core.ObjMap.cljs$lang$ctorPrSeq = function(this__2260__auto__) {
  return cljs.core.list.call(null, "cljs.core/ObjMap")
};
cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var this__9376 = this;
  return cljs.core.transient$.call(null, cljs.core.into.call(null, cljs.core.hash_map.call(null), coll))
};
cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__9377 = this;
  var h__2143__auto____9378 = this__9377.__hash;
  if(!(h__2143__auto____9378 == null)) {
    return h__2143__auto____9378
  }else {
    var h__2143__auto____9379 = cljs.core.hash_imap.call(null, coll);
    this__9377.__hash = h__2143__auto____9379;
    return h__2143__auto____9379
  }
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__9380 = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, null)
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__9381 = this;
  if(function() {
    var and__3941__auto____9382 = goog.isString(k);
    if(and__3941__auto____9382) {
      return!(cljs.core.scan_array.call(null, 1, k, this__9381.keys) == null)
    }else {
      return and__3941__auto____9382
    }
  }()) {
    return this__9381.strobj[k]
  }else {
    return not_found
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var this__9383 = this;
  if(goog.isString(k)) {
    if(function() {
      var or__3943__auto____9384 = this__9383.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD;
      if(or__3943__auto____9384) {
        return or__3943__auto____9384
      }else {
        return this__9383.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD
      }
    }()) {
      return cljs.core.obj_map__GT_hash_map.call(null, coll, k, v)
    }else {
      if(!(cljs.core.scan_array.call(null, 1, k, this__9383.keys) == null)) {
        var new_strobj__9385 = cljs.core.obj_clone.call(null, this__9383.strobj, this__9383.keys);
        new_strobj__9385[k] = v;
        return new cljs.core.ObjMap(this__9383.meta, this__9383.keys, new_strobj__9385, this__9383.update_count + 1, null)
      }else {
        var new_strobj__9386 = cljs.core.obj_clone.call(null, this__9383.strobj, this__9383.keys);
        var new_keys__9387 = this__9383.keys.slice();
        new_strobj__9386[k] = v;
        new_keys__9387.push(k);
        return new cljs.core.ObjMap(this__9383.meta, new_keys__9387, new_strobj__9386, this__9383.update_count + 1, null)
      }
    }
  }else {
    return cljs.core.obj_map__GT_hash_map.call(null, coll, k, v)
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var this__9388 = this;
  if(function() {
    var and__3941__auto____9389 = goog.isString(k);
    if(and__3941__auto____9389) {
      return!(cljs.core.scan_array.call(null, 1, k, this__9388.keys) == null)
    }else {
      return and__3941__auto____9389
    }
  }()) {
    return true
  }else {
    return false
  }
};
cljs.core.ObjMap.prototype.call = function() {
  var G__9411 = null;
  var G__9411__2 = function(this_sym9390, k) {
    var this__9392 = this;
    var this_sym9390__9393 = this;
    var coll__9394 = this_sym9390__9393;
    return coll__9394.cljs$core$ILookup$_lookup$arity$2(coll__9394, k)
  };
  var G__9411__3 = function(this_sym9391, k, not_found) {
    var this__9392 = this;
    var this_sym9391__9395 = this;
    var coll__9396 = this_sym9391__9395;
    return coll__9396.cljs$core$ILookup$_lookup$arity$3(coll__9396, k, not_found)
  };
  G__9411 = function(this_sym9391, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__9411__2.call(this, this_sym9391, k);
      case 3:
        return G__9411__3.call(this, this_sym9391, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__9411
}();
cljs.core.ObjMap.prototype.apply = function(this_sym9374, args9375) {
  var this__9397 = this;
  return this_sym9374.call.apply(this_sym9374, [this_sym9374].concat(args9375.slice()))
};
cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var this__9398 = this;
  if(cljs.core.vector_QMARK_.call(null, entry)) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll, entry)
  }
};
cljs.core.ObjMap.prototype.toString = function() {
  var this__9399 = this;
  var this__9400 = this;
  return cljs.core.pr_str.call(null, this__9400)
};
cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__9401 = this;
  if(this__9401.keys.length > 0) {
    return cljs.core.map.call(null, function(p1__9364_SHARP_) {
      return cljs.core.vector.call(null, p1__9364_SHARP_, this__9401.strobj[p1__9364_SHARP_])
    }, this__9401.keys.sort(cljs.core.obj_map_compare_keys))
  }else {
    return null
  }
};
cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__9402 = this;
  return this__9402.keys.length
};
cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__9403 = this;
  return cljs.core.equiv_map.call(null, coll, other)
};
cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__9404 = this;
  return new cljs.core.ObjMap(meta, this__9404.keys, this__9404.strobj, this__9404.update_count, this__9404.__hash)
};
cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__9405 = this;
  return this__9405.meta
};
cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__9406 = this;
  return cljs.core.with_meta.call(null, cljs.core.ObjMap.EMPTY, this__9406.meta)
};
cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var this__9407 = this;
  if(function() {
    var and__3941__auto____9408 = goog.isString(k);
    if(and__3941__auto____9408) {
      return!(cljs.core.scan_array.call(null, 1, k, this__9407.keys) == null)
    }else {
      return and__3941__auto____9408
    }
  }()) {
    var new_keys__9409 = this__9407.keys.slice();
    var new_strobj__9410 = cljs.core.obj_clone.call(null, this__9407.strobj, this__9407.keys);
    new_keys__9409.splice(cljs.core.scan_array.call(null, 1, k, new_keys__9409), 1);
    cljs.core.js_delete.call(null, new_strobj__9410, k);
    return new cljs.core.ObjMap(this__9407.meta, new_keys__9409, new_strobj__9410, this__9407.update_count + 1, null)
  }else {
    return coll
  }
};
cljs.core.ObjMap;
cljs.core.ObjMap.EMPTY = new cljs.core.ObjMap(null, [], {}, 0, 0);
cljs.core.ObjMap.HASHMAP_THRESHOLD = 32;
cljs.core.ObjMap.fromObject = function(ks, obj) {
  return new cljs.core.ObjMap(null, ks, obj, 0, null)
};
cljs.core.HashMap = function(meta, count, hashobj, __hash) {
  this.meta = meta;
  this.count = count;
  this.hashobj = hashobj;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 15075087
};
cljs.core.HashMap.cljs$lang$type = true;
cljs.core.HashMap.cljs$lang$ctorPrSeq = function(this__2260__auto__) {
  return cljs.core.list.call(null, "cljs.core/HashMap")
};
cljs.core.HashMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__9415 = this;
  var h__2143__auto____9416 = this__9415.__hash;
  if(!(h__2143__auto____9416 == null)) {
    return h__2143__auto____9416
  }else {
    var h__2143__auto____9417 = cljs.core.hash_imap.call(null, coll);
    this__9415.__hash = h__2143__auto____9417;
    return h__2143__auto____9417
  }
};
cljs.core.HashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__9418 = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, null)
};
cljs.core.HashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__9419 = this;
  var bucket__9420 = this__9419.hashobj[cljs.core.hash.call(null, k)];
  var i__9421 = cljs.core.truth_(bucket__9420) ? cljs.core.scan_array.call(null, 2, k, bucket__9420) : null;
  if(cljs.core.truth_(i__9421)) {
    return bucket__9420[i__9421 + 1]
  }else {
    return not_found
  }
};
cljs.core.HashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var this__9422 = this;
  var h__9423 = cljs.core.hash.call(null, k);
  var bucket__9424 = this__9422.hashobj[h__9423];
  if(cljs.core.truth_(bucket__9424)) {
    var new_bucket__9425 = bucket__9424.slice();
    var new_hashobj__9426 = goog.object.clone(this__9422.hashobj);
    new_hashobj__9426[h__9423] = new_bucket__9425;
    var temp__4090__auto____9427 = cljs.core.scan_array.call(null, 2, k, new_bucket__9425);
    if(cljs.core.truth_(temp__4090__auto____9427)) {
      var i__9428 = temp__4090__auto____9427;
      new_bucket__9425[i__9428 + 1] = v;
      return new cljs.core.HashMap(this__9422.meta, this__9422.count, new_hashobj__9426, null)
    }else {
      new_bucket__9425.push(k, v);
      return new cljs.core.HashMap(this__9422.meta, this__9422.count + 1, new_hashobj__9426, null)
    }
  }else {
    var new_hashobj__9429 = goog.object.clone(this__9422.hashobj);
    new_hashobj__9429[h__9423] = [k, v];
    return new cljs.core.HashMap(this__9422.meta, this__9422.count + 1, new_hashobj__9429, null)
  }
};
cljs.core.HashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var this__9430 = this;
  var bucket__9431 = this__9430.hashobj[cljs.core.hash.call(null, k)];
  var i__9432 = cljs.core.truth_(bucket__9431) ? cljs.core.scan_array.call(null, 2, k, bucket__9431) : null;
  if(cljs.core.truth_(i__9432)) {
    return true
  }else {
    return false
  }
};
cljs.core.HashMap.prototype.call = function() {
  var G__9457 = null;
  var G__9457__2 = function(this_sym9433, k) {
    var this__9435 = this;
    var this_sym9433__9436 = this;
    var coll__9437 = this_sym9433__9436;
    return coll__9437.cljs$core$ILookup$_lookup$arity$2(coll__9437, k)
  };
  var G__9457__3 = function(this_sym9434, k, not_found) {
    var this__9435 = this;
    var this_sym9434__9438 = this;
    var coll__9439 = this_sym9434__9438;
    return coll__9439.cljs$core$ILookup$_lookup$arity$3(coll__9439, k, not_found)
  };
  G__9457 = function(this_sym9434, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__9457__2.call(this, this_sym9434, k);
      case 3:
        return G__9457__3.call(this, this_sym9434, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__9457
}();
cljs.core.HashMap.prototype.apply = function(this_sym9413, args9414) {
  var this__9440 = this;
  return this_sym9413.call.apply(this_sym9413, [this_sym9413].concat(args9414.slice()))
};
cljs.core.HashMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var this__9441 = this;
  if(cljs.core.vector_QMARK_.call(null, entry)) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll, entry)
  }
};
cljs.core.HashMap.prototype.toString = function() {
  var this__9442 = this;
  var this__9443 = this;
  return cljs.core.pr_str.call(null, this__9443)
};
cljs.core.HashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__9444 = this;
  if(this__9444.count > 0) {
    var hashes__9445 = cljs.core.js_keys.call(null, this__9444.hashobj).sort();
    return cljs.core.mapcat.call(null, function(p1__9412_SHARP_) {
      return cljs.core.map.call(null, cljs.core.vec, cljs.core.partition.call(null, 2, this__9444.hashobj[p1__9412_SHARP_]))
    }, hashes__9445)
  }else {
    return null
  }
};
cljs.core.HashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__9446 = this;
  return this__9446.count
};
cljs.core.HashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__9447 = this;
  return cljs.core.equiv_map.call(null, coll, other)
};
cljs.core.HashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__9448 = this;
  return new cljs.core.HashMap(meta, this__9448.count, this__9448.hashobj, this__9448.__hash)
};
cljs.core.HashMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__9449 = this;
  return this__9449.meta
};
cljs.core.HashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__9450 = this;
  return cljs.core.with_meta.call(null, cljs.core.HashMap.EMPTY, this__9450.meta)
};
cljs.core.HashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var this__9451 = this;
  var h__9452 = cljs.core.hash.call(null, k);
  var bucket__9453 = this__9451.hashobj[h__9452];
  var i__9454 = cljs.core.truth_(bucket__9453) ? cljs.core.scan_array.call(null, 2, k, bucket__9453) : null;
  if(cljs.core.not.call(null, i__9454)) {
    return coll
  }else {
    var new_hashobj__9455 = goog.object.clone(this__9451.hashobj);
    if(3 > bucket__9453.length) {
      cljs.core.js_delete.call(null, new_hashobj__9455, h__9452)
    }else {
      var new_bucket__9456 = bucket__9453.slice();
      new_bucket__9456.splice(i__9454, 2);
      new_hashobj__9455[h__9452] = new_bucket__9456
    }
    return new cljs.core.HashMap(this__9451.meta, this__9451.count - 1, new_hashobj__9455, null)
  }
};
cljs.core.HashMap;
cljs.core.HashMap.EMPTY = new cljs.core.HashMap(null, 0, {}, 0);
cljs.core.HashMap.fromArrays = function(ks, vs) {
  var len__9458 = ks.length;
  var i__9459 = 0;
  var out__9460 = cljs.core.HashMap.EMPTY;
  while(true) {
    if(i__9459 < len__9458) {
      var G__9461 = i__9459 + 1;
      var G__9462 = cljs.core.assoc.call(null, out__9460, ks[i__9459], vs[i__9459]);
      i__9459 = G__9461;
      out__9460 = G__9462;
      continue
    }else {
      return out__9460
    }
    break
  }
};
cljs.core.array_map_index_of = function array_map_index_of(m, k) {
  var arr__9466 = m.arr;
  var len__9467 = arr__9466.length;
  var i__9468 = 0;
  while(true) {
    if(len__9467 <= i__9468) {
      return-1
    }else {
      if(cljs.core._EQ_.call(null, arr__9466[i__9468], k)) {
        return i__9468
      }else {
        if("\ufdd0'else") {
          var G__9469 = i__9468 + 2;
          i__9468 = G__9469;
          continue
        }else {
          return null
        }
      }
    }
    break
  }
};
cljs.core.PersistentArrayMap = function(meta, cnt, arr, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.arr = arr;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 1;
  this.cljs$lang$protocol_mask$partition0$ = 16123663
};
cljs.core.PersistentArrayMap.cljs$lang$type = true;
cljs.core.PersistentArrayMap.cljs$lang$ctorPrSeq = function(this__2260__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentArrayMap")
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var this__9472 = this;
  return new cljs.core.TransientArrayMap({}, this__9472.arr.length, this__9472.arr.slice())
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__9473 = this;
  var h__2143__auto____9474 = this__9473.__hash;
  if(!(h__2143__auto____9474 == null)) {
    return h__2143__auto____9474
  }else {
    var h__2143__auto____9475 = cljs.core.hash_imap.call(null, coll);
    this__9473.__hash = h__2143__auto____9475;
    return h__2143__auto____9475
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__9476 = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, null)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__9477 = this;
  var idx__9478 = cljs.core.array_map_index_of.call(null, coll, k);
  if(idx__9478 === -1) {
    return not_found
  }else {
    return this__9477.arr[idx__9478 + 1]
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var this__9479 = this;
  var idx__9480 = cljs.core.array_map_index_of.call(null, coll, k);
  if(idx__9480 === -1) {
    if(this__9479.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
      return new cljs.core.PersistentArrayMap(this__9479.meta, this__9479.cnt + 1, function() {
        var G__9481__9482 = this__9479.arr.slice();
        G__9481__9482.push(k);
        G__9481__9482.push(v);
        return G__9481__9482
      }(), null)
    }else {
      return cljs.core.persistent_BANG_.call(null, cljs.core.assoc_BANG_.call(null, cljs.core.transient$.call(null, cljs.core.into.call(null, cljs.core.PersistentHashMap.EMPTY, coll)), k, v))
    }
  }else {
    if(v === this__9479.arr[idx__9480 + 1]) {
      return coll
    }else {
      if("\ufdd0'else") {
        return new cljs.core.PersistentArrayMap(this__9479.meta, this__9479.cnt, function() {
          var G__9483__9484 = this__9479.arr.slice();
          G__9483__9484[idx__9480 + 1] = v;
          return G__9483__9484
        }(), null)
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var this__9485 = this;
  return!(cljs.core.array_map_index_of.call(null, coll, k) === -1)
};
cljs.core.PersistentArrayMap.prototype.call = function() {
  var G__9517 = null;
  var G__9517__2 = function(this_sym9486, k) {
    var this__9488 = this;
    var this_sym9486__9489 = this;
    var coll__9490 = this_sym9486__9489;
    return coll__9490.cljs$core$ILookup$_lookup$arity$2(coll__9490, k)
  };
  var G__9517__3 = function(this_sym9487, k, not_found) {
    var this__9488 = this;
    var this_sym9487__9491 = this;
    var coll__9492 = this_sym9487__9491;
    return coll__9492.cljs$core$ILookup$_lookup$arity$3(coll__9492, k, not_found)
  };
  G__9517 = function(this_sym9487, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__9517__2.call(this, this_sym9487, k);
      case 3:
        return G__9517__3.call(this, this_sym9487, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__9517
}();
cljs.core.PersistentArrayMap.prototype.apply = function(this_sym9470, args9471) {
  var this__9493 = this;
  return this_sym9470.call.apply(this_sym9470, [this_sym9470].concat(args9471.slice()))
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var this__9494 = this;
  var len__9495 = this__9494.arr.length;
  var i__9496 = 0;
  var init__9497 = init;
  while(true) {
    if(i__9496 < len__9495) {
      var init__9498 = f.call(null, init__9497, this__9494.arr[i__9496], this__9494.arr[i__9496 + 1]);
      if(cljs.core.reduced_QMARK_.call(null, init__9498)) {
        return cljs.core.deref.call(null, init__9498)
      }else {
        var G__9518 = i__9496 + 2;
        var G__9519 = init__9498;
        i__9496 = G__9518;
        init__9497 = G__9519;
        continue
      }
    }else {
      return null
    }
    break
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var this__9499 = this;
  if(cljs.core.vector_QMARK_.call(null, entry)) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll, entry)
  }
};
cljs.core.PersistentArrayMap.prototype.toString = function() {
  var this__9500 = this;
  var this__9501 = this;
  return cljs.core.pr_str.call(null, this__9501)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__9502 = this;
  if(this__9502.cnt > 0) {
    var len__9503 = this__9502.arr.length;
    var array_map_seq__9504 = function array_map_seq(i) {
      return new cljs.core.LazySeq(null, false, function() {
        if(i < len__9503) {
          return cljs.core.cons.call(null, cljs.core.PersistentVector.fromArray([this__9502.arr[i], this__9502.arr[i + 1]], true), array_map_seq.call(null, i + 2))
        }else {
          return null
        }
      }, null)
    };
    return array_map_seq__9504.call(null, 0)
  }else {
    return null
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__9505 = this;
  return this__9505.cnt
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__9506 = this;
  return cljs.core.equiv_map.call(null, coll, other)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__9507 = this;
  return new cljs.core.PersistentArrayMap(meta, this__9507.cnt, this__9507.arr, this__9507.__hash)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__9508 = this;
  return this__9508.meta
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__9509 = this;
  return cljs.core._with_meta.call(null, cljs.core.PersistentArrayMap.EMPTY, this__9509.meta)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var this__9510 = this;
  var idx__9511 = cljs.core.array_map_index_of.call(null, coll, k);
  if(idx__9511 >= 0) {
    var len__9512 = this__9510.arr.length;
    var new_len__9513 = len__9512 - 2;
    if(new_len__9513 === 0) {
      return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll)
    }else {
      var new_arr__9514 = cljs.core.make_array.call(null, new_len__9513);
      var s__9515 = 0;
      var d__9516 = 0;
      while(true) {
        if(s__9515 >= len__9512) {
          return new cljs.core.PersistentArrayMap(this__9510.meta, this__9510.cnt - 1, new_arr__9514, null)
        }else {
          if(cljs.core._EQ_.call(null, k, this__9510.arr[s__9515])) {
            var G__9520 = s__9515 + 2;
            var G__9521 = d__9516;
            s__9515 = G__9520;
            d__9516 = G__9521;
            continue
          }else {
            if("\ufdd0'else") {
              new_arr__9514[d__9516] = this__9510.arr[s__9515];
              new_arr__9514[d__9516 + 1] = this__9510.arr[s__9515 + 1];
              var G__9522 = s__9515 + 2;
              var G__9523 = d__9516 + 2;
              s__9515 = G__9522;
              d__9516 = G__9523;
              continue
            }else {
              return null
            }
          }
        }
        break
      }
    }
  }else {
    return coll
  }
};
cljs.core.PersistentArrayMap;
cljs.core.PersistentArrayMap.EMPTY = new cljs.core.PersistentArrayMap(null, 0, [], null);
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = 16;
cljs.core.PersistentArrayMap.fromArrays = function(ks, vs) {
  var len__9524 = cljs.core.count.call(null, ks);
  var i__9525 = 0;
  var out__9526 = cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY);
  while(true) {
    if(i__9525 < len__9524) {
      var G__9527 = i__9525 + 1;
      var G__9528 = cljs.core.assoc_BANG_.call(null, out__9526, ks[i__9525], vs[i__9525]);
      i__9525 = G__9527;
      out__9526 = G__9528;
      continue
    }else {
      return cljs.core.persistent_BANG_.call(null, out__9526)
    }
    break
  }
};
cljs.core.TransientArrayMap = function(editable_QMARK_, len, arr) {
  this.editable_QMARK_ = editable_QMARK_;
  this.len = len;
  this.arr = arr;
  this.cljs$lang$protocol_mask$partition1$ = 14;
  this.cljs$lang$protocol_mask$partition0$ = 258
};
cljs.core.TransientArrayMap.cljs$lang$type = true;
cljs.core.TransientArrayMap.cljs$lang$ctorPrSeq = function(this__2260__auto__) {
  return cljs.core.list.call(null, "cljs.core/TransientArrayMap")
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var this__9529 = this;
  if(cljs.core.truth_(this__9529.editable_QMARK_)) {
    var idx__9530 = cljs.core.array_map_index_of.call(null, tcoll, key);
    if(idx__9530 >= 0) {
      this__9529.arr[idx__9530] = this__9529.arr[this__9529.len - 2];
      this__9529.arr[idx__9530 + 1] = this__9529.arr[this__9529.len - 1];
      var G__9531__9532 = this__9529.arr;
      G__9531__9532.pop();
      G__9531__9532.pop();
      G__9531__9532;
      this__9529.len = this__9529.len - 2
    }else {
    }
    return tcoll
  }else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var this__9533 = this;
  if(cljs.core.truth_(this__9533.editable_QMARK_)) {
    var idx__9534 = cljs.core.array_map_index_of.call(null, tcoll, key);
    if(idx__9534 === -1) {
      if(this__9533.len + 2 <= 2 * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
        this__9533.len = this__9533.len + 2;
        this__9533.arr.push(key);
        this__9533.arr.push(val);
        return tcoll
      }else {
        return cljs.core.assoc_BANG_.call(null, cljs.core.array__GT_transient_hash_map.call(null, this__9533.len, this__9533.arr), key, val)
      }
    }else {
      if(val === this__9533.arr[idx__9534 + 1]) {
        return tcoll
      }else {
        this__9533.arr[idx__9534 + 1] = val;
        return tcoll
      }
    }
  }else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var this__9535 = this;
  if(cljs.core.truth_(this__9535.editable_QMARK_)) {
    if(function() {
      var G__9536__9537 = o;
      if(G__9536__9537) {
        if(function() {
          var or__3943__auto____9538 = G__9536__9537.cljs$lang$protocol_mask$partition0$ & 2048;
          if(or__3943__auto____9538) {
            return or__3943__auto____9538
          }else {
            return G__9536__9537.cljs$core$IMapEntry$
          }
        }()) {
          return true
        }else {
          if(!G__9536__9537.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.IMapEntry, G__9536__9537)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.IMapEntry, G__9536__9537)
      }
    }()) {
      return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll, cljs.core.key.call(null, o), cljs.core.val.call(null, o))
    }else {
      var es__9539 = cljs.core.seq.call(null, o);
      var tcoll__9540 = tcoll;
      while(true) {
        var temp__4090__auto____9541 = cljs.core.first.call(null, es__9539);
        if(cljs.core.truth_(temp__4090__auto____9541)) {
          var e__9542 = temp__4090__auto____9541;
          var G__9548 = cljs.core.next.call(null, es__9539);
          var G__9549 = tcoll__9540.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll__9540, cljs.core.key.call(null, e__9542), cljs.core.val.call(null, e__9542));
          es__9539 = G__9548;
          tcoll__9540 = G__9549;
          continue
        }else {
          return tcoll__9540
        }
        break
      }
    }
  }else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var this__9543 = this;
  if(cljs.core.truth_(this__9543.editable_QMARK_)) {
    this__9543.editable_QMARK_ = false;
    return new cljs.core.PersistentArrayMap(null, cljs.core.quot.call(null, this__9543.len, 2), this__9543.arr, null)
  }else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var this__9544 = this;
  return tcoll.cljs$core$ILookup$_lookup$arity$3(tcoll, k, null)
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var this__9545 = this;
  if(cljs.core.truth_(this__9545.editable_QMARK_)) {
    var idx__9546 = cljs.core.array_map_index_of.call(null, tcoll, k);
    if(idx__9546 === -1) {
      return not_found
    }else {
      return this__9545.arr[idx__9546 + 1]
    }
  }else {
    throw new Error("lookup after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var this__9547 = this;
  if(cljs.core.truth_(this__9547.editable_QMARK_)) {
    return cljs.core.quot.call(null, this__9547.len, 2)
  }else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientArrayMap;
cljs.core.array__GT_transient_hash_map = function array__GT_transient_hash_map(len, arr) {
  var out__9552 = cljs.core.transient$.call(null, cljs.core.ObjMap.EMPTY);
  var i__9553 = 0;
  while(true) {
    if(i__9553 < len) {
      var G__9554 = cljs.core.assoc_BANG_.call(null, out__9552, arr[i__9553], arr[i__9553 + 1]);
      var G__9555 = i__9553 + 2;
      out__9552 = G__9554;
      i__9553 = G__9555;
      continue
    }else {
      return out__9552
    }
    break
  }
};
cljs.core.Box = function(val) {
  this.val = val
};
cljs.core.Box.cljs$lang$type = true;
cljs.core.Box.cljs$lang$ctorPrSeq = function(this__2261__auto__) {
  return cljs.core.list.call(null, "cljs.core/Box")
};
cljs.core.Box;
cljs.core.key_test = function key_test(key, other) {
  if(goog.isString(key)) {
    return key === other
  }else {
    return cljs.core._EQ_.call(null, key, other)
  }
};
cljs.core.mask = function mask(hash, shift) {
  return hash >>> shift & 31
};
cljs.core.clone_and_set = function() {
  var clone_and_set = null;
  var clone_and_set__3 = function(arr, i, a) {
    var G__9560__9561 = arr.slice();
    G__9560__9561[i] = a;
    return G__9560__9561
  };
  var clone_and_set__5 = function(arr, i, a, j, b) {
    var G__9562__9563 = arr.slice();
    G__9562__9563[i] = a;
    G__9562__9563[j] = b;
    return G__9562__9563
  };
  clone_and_set = function(arr, i, a, j, b) {
    switch(arguments.length) {
      case 3:
        return clone_and_set__3.call(this, arr, i, a);
      case 5:
        return clone_and_set__5.call(this, arr, i, a, j, b)
    }
    throw"Invalid arity: " + arguments.length;
  };
  clone_and_set.cljs$lang$arity$3 = clone_and_set__3;
  clone_and_set.cljs$lang$arity$5 = clone_and_set__5;
  return clone_and_set
}();
cljs.core.remove_pair = function remove_pair(arr, i) {
  var new_arr__9565 = cljs.core.make_array.call(null, arr.length - 2);
  cljs.core.array_copy.call(null, arr, 0, new_arr__9565, 0, 2 * i);
  cljs.core.array_copy.call(null, arr, 2 * (i + 1), new_arr__9565, 2 * i, new_arr__9565.length - 2 * i);
  return new_arr__9565
};
cljs.core.bitmap_indexed_node_index = function bitmap_indexed_node_index(bitmap, bit) {
  return cljs.core.bit_count.call(null, bitmap & bit - 1)
};
cljs.core.bitpos = function bitpos(hash, shift) {
  return 1 << (hash >>> shift & 31)
};
cljs.core.edit_and_set = function() {
  var edit_and_set = null;
  var edit_and_set__4 = function(inode, edit, i, a) {
    var editable__9568 = inode.ensure_editable(edit);
    editable__9568.arr[i] = a;
    return editable__9568
  };
  var edit_and_set__6 = function(inode, edit, i, a, j, b) {
    var editable__9569 = inode.ensure_editable(edit);
    editable__9569.arr[i] = a;
    editable__9569.arr[j] = b;
    return editable__9569
  };
  edit_and_set = function(inode, edit, i, a, j, b) {
    switch(arguments.length) {
      case 4:
        return edit_and_set__4.call(this, inode, edit, i, a);
      case 6:
        return edit_and_set__6.call(this, inode, edit, i, a, j, b)
    }
    throw"Invalid arity: " + arguments.length;
  };
  edit_and_set.cljs$lang$arity$4 = edit_and_set__4;
  edit_and_set.cljs$lang$arity$6 = edit_and_set__6;
  return edit_and_set
}();
cljs.core.inode_kv_reduce = function inode_kv_reduce(arr, f, init) {
  var len__9576 = arr.length;
  var i__9577 = 0;
  var init__9578 = init;
  while(true) {
    if(i__9577 < len__9576) {
      var init__9581 = function() {
        var k__9579 = arr[i__9577];
        if(!(k__9579 == null)) {
          return f.call(null, init__9578, k__9579, arr[i__9577 + 1])
        }else {
          var node__9580 = arr[i__9577 + 1];
          if(!(node__9580 == null)) {
            return node__9580.kv_reduce(f, init__9578)
          }else {
            return init__9578
          }
        }
      }();
      if(cljs.core.reduced_QMARK_.call(null, init__9581)) {
        return cljs.core.deref.call(null, init__9581)
      }else {
        var G__9582 = i__9577 + 2;
        var G__9583 = init__9581;
        i__9577 = G__9582;
        init__9578 = G__9583;
        continue
      }
    }else {
      return init__9578
    }
    break
  }
};
cljs.core.BitmapIndexedNode = function(edit, bitmap, arr) {
  this.edit = edit;
  this.bitmap = bitmap;
  this.arr = arr
};
cljs.core.BitmapIndexedNode.cljs$lang$type = true;
cljs.core.BitmapIndexedNode.cljs$lang$ctorPrSeq = function(this__2260__auto__) {
  return cljs.core.list.call(null, "cljs.core/BitmapIndexedNode")
};
cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = function(e, bit, i) {
  var this__9584 = this;
  var inode__9585 = this;
  if(this__9584.bitmap === bit) {
    return null
  }else {
    var editable__9586 = inode__9585.ensure_editable(e);
    var earr__9587 = editable__9586.arr;
    var len__9588 = earr__9587.length;
    editable__9586.bitmap = bit ^ editable__9586.bitmap;
    cljs.core.array_copy.call(null, earr__9587, 2 * (i + 1), earr__9587, 2 * i, len__9588 - 2 * (i + 1));
    earr__9587[len__9588 - 2] = null;
    earr__9587[len__9588 - 1] = null;
    return editable__9586
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = function(edit, shift, hash, key, val, added_leaf_QMARK_) {
  var this__9589 = this;
  var inode__9590 = this;
  var bit__9591 = 1 << (hash >>> shift & 31);
  var idx__9592 = cljs.core.bitmap_indexed_node_index.call(null, this__9589.bitmap, bit__9591);
  if((this__9589.bitmap & bit__9591) === 0) {
    var n__9593 = cljs.core.bit_count.call(null, this__9589.bitmap);
    if(2 * n__9593 < this__9589.arr.length) {
      var editable__9594 = inode__9590.ensure_editable(edit);
      var earr__9595 = editable__9594.arr;
      added_leaf_QMARK_.val = true;
      cljs.core.array_copy_downward.call(null, earr__9595, 2 * idx__9592, earr__9595, 2 * (idx__9592 + 1), 2 * (n__9593 - idx__9592));
      earr__9595[2 * idx__9592] = key;
      earr__9595[2 * idx__9592 + 1] = val;
      editable__9594.bitmap = editable__9594.bitmap | bit__9591;
      return editable__9594
    }else {
      if(n__9593 >= 16) {
        var nodes__9596 = cljs.core.make_array.call(null, 32);
        var jdx__9597 = hash >>> shift & 31;
        nodes__9596[jdx__9597] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit, shift + 5, hash, key, val, added_leaf_QMARK_);
        var i__9598 = 0;
        var j__9599 = 0;
        while(true) {
          if(i__9598 < 32) {
            if((this__9589.bitmap >>> i__9598 & 1) === 0) {
              var G__9652 = i__9598 + 1;
              var G__9653 = j__9599;
              i__9598 = G__9652;
              j__9599 = G__9653;
              continue
            }else {
              nodes__9596[i__9598] = !(this__9589.arr[j__9599] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit, shift + 5, cljs.core.hash.call(null, this__9589.arr[j__9599]), this__9589.arr[j__9599], this__9589.arr[j__9599 + 1], added_leaf_QMARK_) : this__9589.arr[j__9599 + 1];
              var G__9654 = i__9598 + 1;
              var G__9655 = j__9599 + 2;
              i__9598 = G__9654;
              j__9599 = G__9655;
              continue
            }
          }else {
          }
          break
        }
        return new cljs.core.ArrayNode(edit, n__9593 + 1, nodes__9596)
      }else {
        if("\ufdd0'else") {
          var new_arr__9600 = cljs.core.make_array.call(null, 2 * (n__9593 + 4));
          cljs.core.array_copy.call(null, this__9589.arr, 0, new_arr__9600, 0, 2 * idx__9592);
          new_arr__9600[2 * idx__9592] = key;
          new_arr__9600[2 * idx__9592 + 1] = val;
          cljs.core.array_copy.call(null, this__9589.arr, 2 * idx__9592, new_arr__9600, 2 * (idx__9592 + 1), 2 * (n__9593 - idx__9592));
          added_leaf_QMARK_.val = true;
          var editable__9601 = inode__9590.ensure_editable(edit);
          editable__9601.arr = new_arr__9600;
          editable__9601.bitmap = editable__9601.bitmap | bit__9591;
          return editable__9601
        }else {
          return null
        }
      }
    }
  }else {
    var key_or_nil__9602 = this__9589.arr[2 * idx__9592];
    var val_or_node__9603 = this__9589.arr[2 * idx__9592 + 1];
    if(key_or_nil__9602 == null) {
      var n__9604 = val_or_node__9603.inode_assoc_BANG_(edit, shift + 5, hash, key, val, added_leaf_QMARK_);
      if(n__9604 === val_or_node__9603) {
        return inode__9590
      }else {
        return cljs.core.edit_and_set.call(null, inode__9590, edit, 2 * idx__9592 + 1, n__9604)
      }
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil__9602)) {
        if(val === val_or_node__9603) {
          return inode__9590
        }else {
          return cljs.core.edit_and_set.call(null, inode__9590, edit, 2 * idx__9592 + 1, val)
        }
      }else {
        if("\ufdd0'else") {
          added_leaf_QMARK_.val = true;
          return cljs.core.edit_and_set.call(null, inode__9590, edit, 2 * idx__9592, null, 2 * idx__9592 + 1, cljs.core.create_node.call(null, edit, shift + 5, key_or_nil__9602, val_or_node__9603, hash, key, val))
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_seq = function() {
  var this__9605 = this;
  var inode__9606 = this;
  return cljs.core.create_inode_seq.call(null, this__9605.arr)
};
cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = function(edit, shift, hash, key, removed_leaf_QMARK_) {
  var this__9607 = this;
  var inode__9608 = this;
  var bit__9609 = 1 << (hash >>> shift & 31);
  if((this__9607.bitmap & bit__9609) === 0) {
    return inode__9608
  }else {
    var idx__9610 = cljs.core.bitmap_indexed_node_index.call(null, this__9607.bitmap, bit__9609);
    var key_or_nil__9611 = this__9607.arr[2 * idx__9610];
    var val_or_node__9612 = this__9607.arr[2 * idx__9610 + 1];
    if(key_or_nil__9611 == null) {
      var n__9613 = val_or_node__9612.inode_without_BANG_(edit, shift + 5, hash, key, removed_leaf_QMARK_);
      if(n__9613 === val_or_node__9612) {
        return inode__9608
      }else {
        if(!(n__9613 == null)) {
          return cljs.core.edit_and_set.call(null, inode__9608, edit, 2 * idx__9610 + 1, n__9613)
        }else {
          if(this__9607.bitmap === bit__9609) {
            return null
          }else {
            if("\ufdd0'else") {
              return inode__9608.edit_and_remove_pair(edit, bit__9609, idx__9610)
            }else {
              return null
            }
          }
        }
      }
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil__9611)) {
        removed_leaf_QMARK_[0] = true;
        return inode__9608.edit_and_remove_pair(edit, bit__9609, idx__9610)
      }else {
        if("\ufdd0'else") {
          return inode__9608
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.ensure_editable = function(e) {
  var this__9614 = this;
  var inode__9615 = this;
  if(e === this__9614.edit) {
    return inode__9615
  }else {
    var n__9616 = cljs.core.bit_count.call(null, this__9614.bitmap);
    var new_arr__9617 = cljs.core.make_array.call(null, n__9616 < 0 ? 4 : 2 * (n__9616 + 1));
    cljs.core.array_copy.call(null, this__9614.arr, 0, new_arr__9617, 0, 2 * n__9616);
    return new cljs.core.BitmapIndexedNode(e, this__9614.bitmap, new_arr__9617)
  }
};
cljs.core.BitmapIndexedNode.prototype.kv_reduce = function(f, init) {
  var this__9618 = this;
  var inode__9619 = this;
  return cljs.core.inode_kv_reduce.call(null, this__9618.arr, f, init)
};
cljs.core.BitmapIndexedNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var this__9620 = this;
  var inode__9621 = this;
  var bit__9622 = 1 << (hash >>> shift & 31);
  if((this__9620.bitmap & bit__9622) === 0) {
    return not_found
  }else {
    var idx__9623 = cljs.core.bitmap_indexed_node_index.call(null, this__9620.bitmap, bit__9622);
    var key_or_nil__9624 = this__9620.arr[2 * idx__9623];
    var val_or_node__9625 = this__9620.arr[2 * idx__9623 + 1];
    if(key_or_nil__9624 == null) {
      return val_or_node__9625.inode_find(shift + 5, hash, key, not_found)
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil__9624)) {
        return cljs.core.PersistentVector.fromArray([key_or_nil__9624, val_or_node__9625], true)
      }else {
        if("\ufdd0'else") {
          return not_found
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_without = function(shift, hash, key) {
  var this__9626 = this;
  var inode__9627 = this;
  var bit__9628 = 1 << (hash >>> shift & 31);
  if((this__9626.bitmap & bit__9628) === 0) {
    return inode__9627
  }else {
    var idx__9629 = cljs.core.bitmap_indexed_node_index.call(null, this__9626.bitmap, bit__9628);
    var key_or_nil__9630 = this__9626.arr[2 * idx__9629];
    var val_or_node__9631 = this__9626.arr[2 * idx__9629 + 1];
    if(key_or_nil__9630 == null) {
      var n__9632 = val_or_node__9631.inode_without(shift + 5, hash, key);
      if(n__9632 === val_or_node__9631) {
        return inode__9627
      }else {
        if(!(n__9632 == null)) {
          return new cljs.core.BitmapIndexedNode(null, this__9626.bitmap, cljs.core.clone_and_set.call(null, this__9626.arr, 2 * idx__9629 + 1, n__9632))
        }else {
          if(this__9626.bitmap === bit__9628) {
            return null
          }else {
            if("\ufdd0'else") {
              return new cljs.core.BitmapIndexedNode(null, this__9626.bitmap ^ bit__9628, cljs.core.remove_pair.call(null, this__9626.arr, idx__9629))
            }else {
              return null
            }
          }
        }
      }
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil__9630)) {
        return new cljs.core.BitmapIndexedNode(null, this__9626.bitmap ^ bit__9628, cljs.core.remove_pair.call(null, this__9626.arr, idx__9629))
      }else {
        if("\ufdd0'else") {
          return inode__9627
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var this__9633 = this;
  var inode__9634 = this;
  var bit__9635 = 1 << (hash >>> shift & 31);
  var idx__9636 = cljs.core.bitmap_indexed_node_index.call(null, this__9633.bitmap, bit__9635);
  if((this__9633.bitmap & bit__9635) === 0) {
    var n__9637 = cljs.core.bit_count.call(null, this__9633.bitmap);
    if(n__9637 >= 16) {
      var nodes__9638 = cljs.core.make_array.call(null, 32);
      var jdx__9639 = hash >>> shift & 31;
      nodes__9638[jdx__9639] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      var i__9640 = 0;
      var j__9641 = 0;
      while(true) {
        if(i__9640 < 32) {
          if((this__9633.bitmap >>> i__9640 & 1) === 0) {
            var G__9656 = i__9640 + 1;
            var G__9657 = j__9641;
            i__9640 = G__9656;
            j__9641 = G__9657;
            continue
          }else {
            nodes__9638[i__9640] = !(this__9633.arr[j__9641] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, cljs.core.hash.call(null, this__9633.arr[j__9641]), this__9633.arr[j__9641], this__9633.arr[j__9641 + 1], added_leaf_QMARK_) : this__9633.arr[j__9641 + 1];
            var G__9658 = i__9640 + 1;
            var G__9659 = j__9641 + 2;
            i__9640 = G__9658;
            j__9641 = G__9659;
            continue
          }
        }else {
        }
        break
      }
      return new cljs.core.ArrayNode(null, n__9637 + 1, nodes__9638)
    }else {
      var new_arr__9642 = cljs.core.make_array.call(null, 2 * (n__9637 + 1));
      cljs.core.array_copy.call(null, this__9633.arr, 0, new_arr__9642, 0, 2 * idx__9636);
      new_arr__9642[2 * idx__9636] = key;
      new_arr__9642[2 * idx__9636 + 1] = val;
      cljs.core.array_copy.call(null, this__9633.arr, 2 * idx__9636, new_arr__9642, 2 * (idx__9636 + 1), 2 * (n__9637 - idx__9636));
      added_leaf_QMARK_.val = true;
      return new cljs.core.BitmapIndexedNode(null, this__9633.bitmap | bit__9635, new_arr__9642)
    }
  }else {
    var key_or_nil__9643 = this__9633.arr[2 * idx__9636];
    var val_or_node__9644 = this__9633.arr[2 * idx__9636 + 1];
    if(key_or_nil__9643 == null) {
      var n__9645 = val_or_node__9644.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      if(n__9645 === val_or_node__9644) {
        return inode__9634
      }else {
        return new cljs.core.BitmapIndexedNode(null, this__9633.bitmap, cljs.core.clone_and_set.call(null, this__9633.arr, 2 * idx__9636 + 1, n__9645))
      }
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil__9643)) {
        if(val === val_or_node__9644) {
          return inode__9634
        }else {
          return new cljs.core.BitmapIndexedNode(null, this__9633.bitmap, cljs.core.clone_and_set.call(null, this__9633.arr, 2 * idx__9636 + 1, val))
        }
      }else {
        if("\ufdd0'else") {
          added_leaf_QMARK_.val = true;
          return new cljs.core.BitmapIndexedNode(null, this__9633.bitmap, cljs.core.clone_and_set.call(null, this__9633.arr, 2 * idx__9636, null, 2 * idx__9636 + 1, cljs.core.create_node.call(null, shift + 5, key_or_nil__9643, val_or_node__9644, hash, key, val)))
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var this__9646 = this;
  var inode__9647 = this;
  var bit__9648 = 1 << (hash >>> shift & 31);
  if((this__9646.bitmap & bit__9648) === 0) {
    return not_found
  }else {
    var idx__9649 = cljs.core.bitmap_indexed_node_index.call(null, this__9646.bitmap, bit__9648);
    var key_or_nil__9650 = this__9646.arr[2 * idx__9649];
    var val_or_node__9651 = this__9646.arr[2 * idx__9649 + 1];
    if(key_or_nil__9650 == null) {
      return val_or_node__9651.inode_lookup(shift + 5, hash, key, not_found)
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil__9650)) {
        return val_or_node__9651
      }else {
        if("\ufdd0'else") {
          return not_found
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode;
cljs.core.BitmapIndexedNode.EMPTY = new cljs.core.BitmapIndexedNode(null, 0, cljs.core.make_array.call(null, 0));
cljs.core.pack_array_node = function pack_array_node(array_node, edit, idx) {
  var arr__9667 = array_node.arr;
  var len__9668 = 2 * (array_node.cnt - 1);
  var new_arr__9669 = cljs.core.make_array.call(null, len__9668);
  var i__9670 = 0;
  var j__9671 = 1;
  var bitmap__9672 = 0;
  while(true) {
    if(i__9670 < len__9668) {
      if(function() {
        var and__3941__auto____9673 = !(i__9670 === idx);
        if(and__3941__auto____9673) {
          return!(arr__9667[i__9670] == null)
        }else {
          return and__3941__auto____9673
        }
      }()) {
        new_arr__9669[j__9671] = arr__9667[i__9670];
        var G__9674 = i__9670 + 1;
        var G__9675 = j__9671 + 2;
        var G__9676 = bitmap__9672 | 1 << i__9670;
        i__9670 = G__9674;
        j__9671 = G__9675;
        bitmap__9672 = G__9676;
        continue
      }else {
        var G__9677 = i__9670 + 1;
        var G__9678 = j__9671;
        var G__9679 = bitmap__9672;
        i__9670 = G__9677;
        j__9671 = G__9678;
        bitmap__9672 = G__9679;
        continue
      }
    }else {
      return new cljs.core.BitmapIndexedNode(edit, bitmap__9672, new_arr__9669)
    }
    break
  }
};
cljs.core.ArrayNode = function(edit, cnt, arr) {
  this.edit = edit;
  this.cnt = cnt;
  this.arr = arr
};
cljs.core.ArrayNode.cljs$lang$type = true;
cljs.core.ArrayNode.cljs$lang$ctorPrSeq = function(this__2260__auto__) {
  return cljs.core.list.call(null, "cljs.core/ArrayNode")
};
cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = function(edit, shift, hash, key, val, added_leaf_QMARK_) {
  var this__9680 = this;
  var inode__9681 = this;
  var idx__9682 = hash >>> shift & 31;
  var node__9683 = this__9680.arr[idx__9682];
  if(node__9683 == null) {
    var editable__9684 = cljs.core.edit_and_set.call(null, inode__9681, edit, idx__9682, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit, shift + 5, hash, key, val, added_leaf_QMARK_));
    editable__9684.cnt = editable__9684.cnt + 1;
    return editable__9684
  }else {
    var n__9685 = node__9683.inode_assoc_BANG_(edit, shift + 5, hash, key, val, added_leaf_QMARK_);
    if(n__9685 === node__9683) {
      return inode__9681
    }else {
      return cljs.core.edit_and_set.call(null, inode__9681, edit, idx__9682, n__9685)
    }
  }
};
cljs.core.ArrayNode.prototype.inode_seq = function() {
  var this__9686 = this;
  var inode__9687 = this;
  return cljs.core.create_array_node_seq.call(null, this__9686.arr)
};
cljs.core.ArrayNode.prototype.inode_without_BANG_ = function(edit, shift, hash, key, removed_leaf_QMARK_) {
  var this__9688 = this;
  var inode__9689 = this;
  var idx__9690 = hash >>> shift & 31;
  var node__9691 = this__9688.arr[idx__9690];
  if(node__9691 == null) {
    return inode__9689
  }else {
    var n__9692 = node__9691.inode_without_BANG_(edit, shift + 5, hash, key, removed_leaf_QMARK_);
    if(n__9692 === node__9691) {
      return inode__9689
    }else {
      if(n__9692 == null) {
        if(this__9688.cnt <= 8) {
          return cljs.core.pack_array_node.call(null, inode__9689, edit, idx__9690)
        }else {
          var editable__9693 = cljs.core.edit_and_set.call(null, inode__9689, edit, idx__9690, n__9692);
          editable__9693.cnt = editable__9693.cnt - 1;
          return editable__9693
        }
      }else {
        if("\ufdd0'else") {
          return cljs.core.edit_and_set.call(null, inode__9689, edit, idx__9690, n__9692)
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.ArrayNode.prototype.ensure_editable = function(e) {
  var this__9694 = this;
  var inode__9695 = this;
  if(e === this__9694.edit) {
    return inode__9695
  }else {
    return new cljs.core.ArrayNode(e, this__9694.cnt, this__9694.arr.slice())
  }
};
cljs.core.ArrayNode.prototype.kv_reduce = function(f, init) {
  var this__9696 = this;
  var inode__9697 = this;
  var len__9698 = this__9696.arr.length;
  var i__9699 = 0;
  var init__9700 = init;
  while(true) {
    if(i__9699 < len__9698) {
      var node__9701 = this__9696.arr[i__9699];
      if(!(node__9701 == null)) {
        var init__9702 = node__9701.kv_reduce(f, init__9700);
        if(cljs.core.reduced_QMARK_.call(null, init__9702)) {
          return cljs.core.deref.call(null, init__9702)
        }else {
          var G__9721 = i__9699 + 1;
          var G__9722 = init__9702;
          i__9699 = G__9721;
          init__9700 = G__9722;
          continue
        }
      }else {
        return null
      }
    }else {
      return init__9700
    }
    break
  }
};
cljs.core.ArrayNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var this__9703 = this;
  var inode__9704 = this;
  var idx__9705 = hash >>> shift & 31;
  var node__9706 = this__9703.arr[idx__9705];
  if(!(node__9706 == null)) {
    return node__9706.inode_find(shift + 5, hash, key, not_found)
  }else {
    return not_found
  }
};
cljs.core.ArrayNode.prototype.inode_without = function(shift, hash, key) {
  var this__9707 = this;
  var inode__9708 = this;
  var idx__9709 = hash >>> shift & 31;
  var node__9710 = this__9707.arr[idx__9709];
  if(!(node__9710 == null)) {
    var n__9711 = node__9710.inode_without(shift + 5, hash, key);
    if(n__9711 === node__9710) {
      return inode__9708
    }else {
      if(n__9711 == null) {
        if(this__9707.cnt <= 8) {
          return cljs.core.pack_array_node.call(null, inode__9708, null, idx__9709)
        }else {
          return new cljs.core.ArrayNode(null, this__9707.cnt - 1, cljs.core.clone_and_set.call(null, this__9707.arr, idx__9709, n__9711))
        }
      }else {
        if("\ufdd0'else") {
          return new cljs.core.ArrayNode(null, this__9707.cnt, cljs.core.clone_and_set.call(null, this__9707.arr, idx__9709, n__9711))
        }else {
          return null
        }
      }
    }
  }else {
    return inode__9708
  }
};
cljs.core.ArrayNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var this__9712 = this;
  var inode__9713 = this;
  var idx__9714 = hash >>> shift & 31;
  var node__9715 = this__9712.arr[idx__9714];
  if(node__9715 == null) {
    return new cljs.core.ArrayNode(null, this__9712.cnt + 1, cljs.core.clone_and_set.call(null, this__9712.arr, idx__9714, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_)))
  }else {
    var n__9716 = node__9715.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
    if(n__9716 === node__9715) {
      return inode__9713
    }else {
      return new cljs.core.ArrayNode(null, this__9712.cnt, cljs.core.clone_and_set.call(null, this__9712.arr, idx__9714, n__9716))
    }
  }
};
cljs.core.ArrayNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var this__9717 = this;
  var inode__9718 = this;
  var idx__9719 = hash >>> shift & 31;
  var node__9720 = this__9717.arr[idx__9719];
  if(!(node__9720 == null)) {
    return node__9720.inode_lookup(shift + 5, hash, key, not_found)
  }else {
    return not_found
  }
};
cljs.core.ArrayNode;
cljs.core.hash_collision_node_find_index = function hash_collision_node_find_index(arr, cnt, key) {
  var lim__9725 = 2 * cnt;
  var i__9726 = 0;
  while(true) {
    if(i__9726 < lim__9725) {
      if(cljs.core.key_test.call(null, key, arr[i__9726])) {
        return i__9726
      }else {
        var G__9727 = i__9726 + 2;
        i__9726 = G__9727;
        continue
      }
    }else {
      return-1
    }
    break
  }
};
cljs.core.HashCollisionNode = function(edit, collision_hash, cnt, arr) {
  this.edit = edit;
  this.collision_hash = collision_hash;
  this.cnt = cnt;
  this.arr = arr
};
cljs.core.HashCollisionNode.cljs$lang$type = true;
cljs.core.HashCollisionNode.cljs$lang$ctorPrSeq = function(this__2260__auto__) {
  return cljs.core.list.call(null, "cljs.core/HashCollisionNode")
};
cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = function(edit, shift, hash, key, val, added_leaf_QMARK_) {
  var this__9728 = this;
  var inode__9729 = this;
  if(hash === this__9728.collision_hash) {
    var idx__9730 = cljs.core.hash_collision_node_find_index.call(null, this__9728.arr, this__9728.cnt, key);
    if(idx__9730 === -1) {
      if(this__9728.arr.length > 2 * this__9728.cnt) {
        var editable__9731 = cljs.core.edit_and_set.call(null, inode__9729, edit, 2 * this__9728.cnt, key, 2 * this__9728.cnt + 1, val);
        added_leaf_QMARK_.val = true;
        editable__9731.cnt = editable__9731.cnt + 1;
        return editable__9731
      }else {
        var len__9732 = this__9728.arr.length;
        var new_arr__9733 = cljs.core.make_array.call(null, len__9732 + 2);
        cljs.core.array_copy.call(null, this__9728.arr, 0, new_arr__9733, 0, len__9732);
        new_arr__9733[len__9732] = key;
        new_arr__9733[len__9732 + 1] = val;
        added_leaf_QMARK_.val = true;
        return inode__9729.ensure_editable_array(edit, this__9728.cnt + 1, new_arr__9733)
      }
    }else {
      if(this__9728.arr[idx__9730 + 1] === val) {
        return inode__9729
      }else {
        return cljs.core.edit_and_set.call(null, inode__9729, edit, idx__9730 + 1, val)
      }
    }
  }else {
    return(new cljs.core.BitmapIndexedNode(edit, 1 << (this__9728.collision_hash >>> shift & 31), [null, inode__9729, null, null])).inode_assoc_BANG_(edit, shift, hash, key, val, added_leaf_QMARK_)
  }
};
cljs.core.HashCollisionNode.prototype.inode_seq = function() {
  var this__9734 = this;
  var inode__9735 = this;
  return cljs.core.create_inode_seq.call(null, this__9734.arr)
};
cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = function(edit, shift, hash, key, removed_leaf_QMARK_) {
  var this__9736 = this;
  var inode__9737 = this;
  var idx__9738 = cljs.core.hash_collision_node_find_index.call(null, this__9736.arr, this__9736.cnt, key);
  if(idx__9738 === -1) {
    return inode__9737
  }else {
    removed_leaf_QMARK_[0] = true;
    if(this__9736.cnt === 1) {
      return null
    }else {
      var editable__9739 = inode__9737.ensure_editable(edit);
      var earr__9740 = editable__9739.arr;
      earr__9740[idx__9738] = earr__9740[2 * this__9736.cnt - 2];
      earr__9740[idx__9738 + 1] = earr__9740[2 * this__9736.cnt - 1];
      earr__9740[2 * this__9736.cnt - 1] = null;
      earr__9740[2 * this__9736.cnt - 2] = null;
      editable__9739.cnt = editable__9739.cnt - 1;
      return editable__9739
    }
  }
};
cljs.core.HashCollisionNode.prototype.ensure_editable = function(e) {
  var this__9741 = this;
  var inode__9742 = this;
  if(e === this__9741.edit) {
    return inode__9742
  }else {
    var new_arr__9743 = cljs.core.make_array.call(null, 2 * (this__9741.cnt + 1));
    cljs.core.array_copy.call(null, this__9741.arr, 0, new_arr__9743, 0, 2 * this__9741.cnt);
    return new cljs.core.HashCollisionNode(e, this__9741.collision_hash, this__9741.cnt, new_arr__9743)
  }
};
cljs.core.HashCollisionNode.prototype.kv_reduce = function(f, init) {
  var this__9744 = this;
  var inode__9745 = this;
  return cljs.core.inode_kv_reduce.call(null, this__9744.arr, f, init)
};
cljs.core.HashCollisionNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var this__9746 = this;
  var inode__9747 = this;
  var idx__9748 = cljs.core.hash_collision_node_find_index.call(null, this__9746.arr, this__9746.cnt, key);
  if(idx__9748 < 0) {
    return not_found
  }else {
    if(cljs.core.key_test.call(null, key, this__9746.arr[idx__9748])) {
      return cljs.core.PersistentVector.fromArray([this__9746.arr[idx__9748], this__9746.arr[idx__9748 + 1]], true)
    }else {
      if("\ufdd0'else") {
        return not_found
      }else {
        return null
      }
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_without = function(shift, hash, key) {
  var this__9749 = this;
  var inode__9750 = this;
  var idx__9751 = cljs.core.hash_collision_node_find_index.call(null, this__9749.arr, this__9749.cnt, key);
  if(idx__9751 === -1) {
    return inode__9750
  }else {
    if(this__9749.cnt === 1) {
      return null
    }else {
      if("\ufdd0'else") {
        return new cljs.core.HashCollisionNode(null, this__9749.collision_hash, this__9749.cnt - 1, cljs.core.remove_pair.call(null, this__9749.arr, cljs.core.quot.call(null, idx__9751, 2)))
      }else {
        return null
      }
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var this__9752 = this;
  var inode__9753 = this;
  if(hash === this__9752.collision_hash) {
    var idx__9754 = cljs.core.hash_collision_node_find_index.call(null, this__9752.arr, this__9752.cnt, key);
    if(idx__9754 === -1) {
      var len__9755 = this__9752.arr.length;
      var new_arr__9756 = cljs.core.make_array.call(null, len__9755 + 2);
      cljs.core.array_copy.call(null, this__9752.arr, 0, new_arr__9756, 0, len__9755);
      new_arr__9756[len__9755] = key;
      new_arr__9756[len__9755 + 1] = val;
      added_leaf_QMARK_.val = true;
      return new cljs.core.HashCollisionNode(null, this__9752.collision_hash, this__9752.cnt + 1, new_arr__9756)
    }else {
      if(cljs.core._EQ_.call(null, this__9752.arr[idx__9754], val)) {
        return inode__9753
      }else {
        return new cljs.core.HashCollisionNode(null, this__9752.collision_hash, this__9752.cnt, cljs.core.clone_and_set.call(null, this__9752.arr, idx__9754 + 1, val))
      }
    }
  }else {
    return(new cljs.core.BitmapIndexedNode(null, 1 << (this__9752.collision_hash >>> shift & 31), [null, inode__9753])).inode_assoc(shift, hash, key, val, added_leaf_QMARK_)
  }
};
cljs.core.HashCollisionNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var this__9757 = this;
  var inode__9758 = this;
  var idx__9759 = cljs.core.hash_collision_node_find_index.call(null, this__9757.arr, this__9757.cnt, key);
  if(idx__9759 < 0) {
    return not_found
  }else {
    if(cljs.core.key_test.call(null, key, this__9757.arr[idx__9759])) {
      return this__9757.arr[idx__9759 + 1]
    }else {
      if("\ufdd0'else") {
        return not_found
      }else {
        return null
      }
    }
  }
};
cljs.core.HashCollisionNode.prototype.ensure_editable_array = function(e, count, array) {
  var this__9760 = this;
  var inode__9761 = this;
  if(e === this__9760.edit) {
    this__9760.arr = array;
    this__9760.cnt = count;
    return inode__9761
  }else {
    return new cljs.core.HashCollisionNode(this__9760.edit, this__9760.collision_hash, count, array)
  }
};
cljs.core.HashCollisionNode;
cljs.core.create_node = function() {
  var create_node = null;
  var create_node__6 = function(shift, key1, val1, key2hash, key2, val2) {
    var key1hash__9766 = cljs.core.hash.call(null, key1);
    if(key1hash__9766 === key2hash) {
      return new cljs.core.HashCollisionNode(null, key1hash__9766, 2, [key1, val1, key2, val2])
    }else {
      var added_leaf_QMARK___9767 = new cljs.core.Box(false);
      return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift, key1hash__9766, key1, val1, added_leaf_QMARK___9767).inode_assoc(shift, key2hash, key2, val2, added_leaf_QMARK___9767)
    }
  };
  var create_node__7 = function(edit, shift, key1, val1, key2hash, key2, val2) {
    var key1hash__9768 = cljs.core.hash.call(null, key1);
    if(key1hash__9768 === key2hash) {
      return new cljs.core.HashCollisionNode(null, key1hash__9768, 2, [key1, val1, key2, val2])
    }else {
      var added_leaf_QMARK___9769 = new cljs.core.Box(false);
      return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit, shift, key1hash__9768, key1, val1, added_leaf_QMARK___9769).inode_assoc_BANG_(edit, shift, key2hash, key2, val2, added_leaf_QMARK___9769)
    }
  };
  create_node = function(edit, shift, key1, val1, key2hash, key2, val2) {
    switch(arguments.length) {
      case 6:
        return create_node__6.call(this, edit, shift, key1, val1, key2hash, key2);
      case 7:
        return create_node__7.call(this, edit, shift, key1, val1, key2hash, key2, val2)
    }
    throw"Invalid arity: " + arguments.length;
  };
  create_node.cljs$lang$arity$6 = create_node__6;
  create_node.cljs$lang$arity$7 = create_node__7;
  return create_node
}();
cljs.core.NodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850572
};
cljs.core.NodeSeq.cljs$lang$type = true;
cljs.core.NodeSeq.cljs$lang$ctorPrSeq = function(this__2260__auto__) {
  return cljs.core.list.call(null, "cljs.core/NodeSeq")
};
cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__9770 = this;
  var h__2143__auto____9771 = this__9770.__hash;
  if(!(h__2143__auto____9771 == null)) {
    return h__2143__auto____9771
  }else {
    var h__2143__auto____9772 = cljs.core.hash_coll.call(null, coll);
    this__9770.__hash = h__2143__auto____9772;
    return h__2143__auto____9772
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__9773 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.NodeSeq.prototype.toString = function() {
  var this__9774 = this;
  var this__9775 = this;
  return cljs.core.pr_str.call(null, this__9775)
};
cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var this__9776 = this;
  return this$
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__9777 = this;
  if(this__9777.s == null) {
    return cljs.core.PersistentVector.fromArray([this__9777.nodes[this__9777.i], this__9777.nodes[this__9777.i + 1]], true)
  }else {
    return cljs.core.first.call(null, this__9777.s)
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__9778 = this;
  if(this__9778.s == null) {
    return cljs.core.create_inode_seq.call(null, this__9778.nodes, this__9778.i + 2, null)
  }else {
    return cljs.core.create_inode_seq.call(null, this__9778.nodes, this__9778.i, cljs.core.next.call(null, this__9778.s))
  }
};
cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__9779 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__9780 = this;
  return new cljs.core.NodeSeq(meta, this__9780.nodes, this__9780.i, this__9780.s, this__9780.__hash)
};
cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__9781 = this;
  return this__9781.meta
};
cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__9782 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, this__9782.meta)
};
cljs.core.NodeSeq;
cljs.core.create_inode_seq = function() {
  var create_inode_seq = null;
  var create_inode_seq__1 = function(nodes) {
    return create_inode_seq.call(null, nodes, 0, null)
  };
  var create_inode_seq__3 = function(nodes, i, s) {
    if(s == null) {
      var len__9789 = nodes.length;
      var j__9790 = i;
      while(true) {
        if(j__9790 < len__9789) {
          if(!(nodes[j__9790] == null)) {
            return new cljs.core.NodeSeq(null, nodes, j__9790, null, null)
          }else {
            var temp__4090__auto____9791 = nodes[j__9790 + 1];
            if(cljs.core.truth_(temp__4090__auto____9791)) {
              var node__9792 = temp__4090__auto____9791;
              var temp__4090__auto____9793 = node__9792.inode_seq();
              if(cljs.core.truth_(temp__4090__auto____9793)) {
                var node_seq__9794 = temp__4090__auto____9793;
                return new cljs.core.NodeSeq(null, nodes, j__9790 + 2, node_seq__9794, null)
              }else {
                var G__9795 = j__9790 + 2;
                j__9790 = G__9795;
                continue
              }
            }else {
              var G__9796 = j__9790 + 2;
              j__9790 = G__9796;
              continue
            }
          }
        }else {
          return null
        }
        break
      }
    }else {
      return new cljs.core.NodeSeq(null, nodes, i, s, null)
    }
  };
  create_inode_seq = function(nodes, i, s) {
    switch(arguments.length) {
      case 1:
        return create_inode_seq__1.call(this, nodes);
      case 3:
        return create_inode_seq__3.call(this, nodes, i, s)
    }
    throw"Invalid arity: " + arguments.length;
  };
  create_inode_seq.cljs$lang$arity$1 = create_inode_seq__1;
  create_inode_seq.cljs$lang$arity$3 = create_inode_seq__3;
  return create_inode_seq
}();
cljs.core.ArrayNodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850572
};
cljs.core.ArrayNodeSeq.cljs$lang$type = true;
cljs.core.ArrayNodeSeq.cljs$lang$ctorPrSeq = function(this__2260__auto__) {
  return cljs.core.list.call(null, "cljs.core/ArrayNodeSeq")
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__9797 = this;
  var h__2143__auto____9798 = this__9797.__hash;
  if(!(h__2143__auto____9798 == null)) {
    return h__2143__auto____9798
  }else {
    var h__2143__auto____9799 = cljs.core.hash_coll.call(null, coll);
    this__9797.__hash = h__2143__auto____9799;
    return h__2143__auto____9799
  }
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__9800 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.ArrayNodeSeq.prototype.toString = function() {
  var this__9801 = this;
  var this__9802 = this;
  return cljs.core.pr_str.call(null, this__9802)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var this__9803 = this;
  return this$
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__9804 = this;
  return cljs.core.first.call(null, this__9804.s)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__9805 = this;
  return cljs.core.create_array_node_seq.call(null, null, this__9805.nodes, this__9805.i, cljs.core.next.call(null, this__9805.s))
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__9806 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__9807 = this;
  return new cljs.core.ArrayNodeSeq(meta, this__9807.nodes, this__9807.i, this__9807.s, this__9807.__hash)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__9808 = this;
  return this__9808.meta
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__9809 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, this__9809.meta)
};
cljs.core.ArrayNodeSeq;
cljs.core.create_array_node_seq = function() {
  var create_array_node_seq = null;
  var create_array_node_seq__1 = function(nodes) {
    return create_array_node_seq.call(null, null, nodes, 0, null)
  };
  var create_array_node_seq__4 = function(meta, nodes, i, s) {
    if(s == null) {
      var len__9816 = nodes.length;
      var j__9817 = i;
      while(true) {
        if(j__9817 < len__9816) {
          var temp__4090__auto____9818 = nodes[j__9817];
          if(cljs.core.truth_(temp__4090__auto____9818)) {
            var nj__9819 = temp__4090__auto____9818;
            var temp__4090__auto____9820 = nj__9819.inode_seq();
            if(cljs.core.truth_(temp__4090__auto____9820)) {
              var ns__9821 = temp__4090__auto____9820;
              return new cljs.core.ArrayNodeSeq(meta, nodes, j__9817 + 1, ns__9821, null)
            }else {
              var G__9822 = j__9817 + 1;
              j__9817 = G__9822;
              continue
            }
          }else {
            var G__9823 = j__9817 + 1;
            j__9817 = G__9823;
            continue
          }
        }else {
          return null
        }
        break
      }
    }else {
      return new cljs.core.ArrayNodeSeq(meta, nodes, i, s, null)
    }
  };
  create_array_node_seq = function(meta, nodes, i, s) {
    switch(arguments.length) {
      case 1:
        return create_array_node_seq__1.call(this, meta);
      case 4:
        return create_array_node_seq__4.call(this, meta, nodes, i, s)
    }
    throw"Invalid arity: " + arguments.length;
  };
  create_array_node_seq.cljs$lang$arity$1 = create_array_node_seq__1;
  create_array_node_seq.cljs$lang$arity$4 = create_array_node_seq__4;
  return create_array_node_seq
}();
cljs.core.PersistentHashMap = function(meta, cnt, root, has_nil_QMARK_, nil_val, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.root = root;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 1;
  this.cljs$lang$protocol_mask$partition0$ = 16123663
};
cljs.core.PersistentHashMap.cljs$lang$type = true;
cljs.core.PersistentHashMap.cljs$lang$ctorPrSeq = function(this__2260__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentHashMap")
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var this__9826 = this;
  return new cljs.core.TransientHashMap({}, this__9826.root, this__9826.cnt, this__9826.has_nil_QMARK_, this__9826.nil_val)
};
cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__9827 = this;
  var h__2143__auto____9828 = this__9827.__hash;
  if(!(h__2143__auto____9828 == null)) {
    return h__2143__auto____9828
  }else {
    var h__2143__auto____9829 = cljs.core.hash_imap.call(null, coll);
    this__9827.__hash = h__2143__auto____9829;
    return h__2143__auto____9829
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__9830 = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, null)
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__9831 = this;
  if(k == null) {
    if(this__9831.has_nil_QMARK_) {
      return this__9831.nil_val
    }else {
      return not_found
    }
  }else {
    if(this__9831.root == null) {
      return not_found
    }else {
      if("\ufdd0'else") {
        return this__9831.root.inode_lookup(0, cljs.core.hash.call(null, k), k, not_found)
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var this__9832 = this;
  if(k == null) {
    if(function() {
      var and__3941__auto____9833 = this__9832.has_nil_QMARK_;
      if(and__3941__auto____9833) {
        return v === this__9832.nil_val
      }else {
        return and__3941__auto____9833
      }
    }()) {
      return coll
    }else {
      return new cljs.core.PersistentHashMap(this__9832.meta, this__9832.has_nil_QMARK_ ? this__9832.cnt : this__9832.cnt + 1, this__9832.root, true, v, null)
    }
  }else {
    var added_leaf_QMARK___9834 = new cljs.core.Box(false);
    var new_root__9835 = (this__9832.root == null ? cljs.core.BitmapIndexedNode.EMPTY : this__9832.root).inode_assoc(0, cljs.core.hash.call(null, k), k, v, added_leaf_QMARK___9834);
    if(new_root__9835 === this__9832.root) {
      return coll
    }else {
      return new cljs.core.PersistentHashMap(this__9832.meta, added_leaf_QMARK___9834.val ? this__9832.cnt + 1 : this__9832.cnt, new_root__9835, this__9832.has_nil_QMARK_, this__9832.nil_val, null)
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var this__9836 = this;
  if(k == null) {
    return this__9836.has_nil_QMARK_
  }else {
    if(this__9836.root == null) {
      return false
    }else {
      if("\ufdd0'else") {
        return!(this__9836.root.inode_lookup(0, cljs.core.hash.call(null, k), k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.call = function() {
  var G__9859 = null;
  var G__9859__2 = function(this_sym9837, k) {
    var this__9839 = this;
    var this_sym9837__9840 = this;
    var coll__9841 = this_sym9837__9840;
    return coll__9841.cljs$core$ILookup$_lookup$arity$2(coll__9841, k)
  };
  var G__9859__3 = function(this_sym9838, k, not_found) {
    var this__9839 = this;
    var this_sym9838__9842 = this;
    var coll__9843 = this_sym9838__9842;
    return coll__9843.cljs$core$ILookup$_lookup$arity$3(coll__9843, k, not_found)
  };
  G__9859 = function(this_sym9838, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__9859__2.call(this, this_sym9838, k);
      case 3:
        return G__9859__3.call(this, this_sym9838, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__9859
}();
cljs.core.PersistentHashMap.prototype.apply = function(this_sym9824, args9825) {
  var this__9844 = this;
  return this_sym9824.call.apply(this_sym9824, [this_sym9824].concat(args9825.slice()))
};
cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var this__9845 = this;
  var init__9846 = this__9845.has_nil_QMARK_ ? f.call(null, init, null, this__9845.nil_val) : init;
  if(cljs.core.reduced_QMARK_.call(null, init__9846)) {
    return cljs.core.deref.call(null, init__9846)
  }else {
    if(!(this__9845.root == null)) {
      return this__9845.root.kv_reduce(f, init__9846)
    }else {
      if("\ufdd0'else") {
        return init__9846
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var this__9847 = this;
  if(cljs.core.vector_QMARK_.call(null, entry)) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll, entry)
  }
};
cljs.core.PersistentHashMap.prototype.toString = function() {
  var this__9848 = this;
  var this__9849 = this;
  return cljs.core.pr_str.call(null, this__9849)
};
cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__9850 = this;
  if(this__9850.cnt > 0) {
    var s__9851 = !(this__9850.root == null) ? this__9850.root.inode_seq() : null;
    if(this__9850.has_nil_QMARK_) {
      return cljs.core.cons.call(null, cljs.core.PersistentVector.fromArray([null, this__9850.nil_val], true), s__9851)
    }else {
      return s__9851
    }
  }else {
    return null
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__9852 = this;
  return this__9852.cnt
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__9853 = this;
  return cljs.core.equiv_map.call(null, coll, other)
};
cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__9854 = this;
  return new cljs.core.PersistentHashMap(meta, this__9854.cnt, this__9854.root, this__9854.has_nil_QMARK_, this__9854.nil_val, this__9854.__hash)
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__9855 = this;
  return this__9855.meta
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__9856 = this;
  return cljs.core._with_meta.call(null, cljs.core.PersistentHashMap.EMPTY, this__9856.meta)
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var this__9857 = this;
  if(k == null) {
    if(this__9857.has_nil_QMARK_) {
      return new cljs.core.PersistentHashMap(this__9857.meta, this__9857.cnt - 1, this__9857.root, false, null, null)
    }else {
      return coll
    }
  }else {
    if(this__9857.root == null) {
      return coll
    }else {
      if("\ufdd0'else") {
        var new_root__9858 = this__9857.root.inode_without(0, cljs.core.hash.call(null, k), k);
        if(new_root__9858 === this__9857.root) {
          return coll
        }else {
          return new cljs.core.PersistentHashMap(this__9857.meta, this__9857.cnt - 1, new_root__9858, this__9857.has_nil_QMARK_, this__9857.nil_val, null)
        }
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentHashMap;
cljs.core.PersistentHashMap.EMPTY = new cljs.core.PersistentHashMap(null, 0, null, false, null, 0);
cljs.core.PersistentHashMap.fromArrays = function(ks, vs) {
  var len__9860 = ks.length;
  var i__9861 = 0;
  var out__9862 = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
  while(true) {
    if(i__9861 < len__9860) {
      var G__9863 = i__9861 + 1;
      var G__9864 = cljs.core.assoc_BANG_.call(null, out__9862, ks[i__9861], vs[i__9861]);
      i__9861 = G__9863;
      out__9862 = G__9864;
      continue
    }else {
      return cljs.core.persistent_BANG_.call(null, out__9862)
    }
    break
  }
};
cljs.core.TransientHashMap = function(edit, root, count, has_nil_QMARK_, nil_val) {
  this.edit = edit;
  this.root = root;
  this.count = count;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.cljs$lang$protocol_mask$partition1$ = 14;
  this.cljs$lang$protocol_mask$partition0$ = 258
};
cljs.core.TransientHashMap.cljs$lang$type = true;
cljs.core.TransientHashMap.cljs$lang$ctorPrSeq = function(this__2260__auto__) {
  return cljs.core.list.call(null, "cljs.core/TransientHashMap")
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var this__9865 = this;
  return tcoll.without_BANG_(key)
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var this__9866 = this;
  return tcoll.assoc_BANG_(key, val)
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, val) {
  var this__9867 = this;
  return tcoll.conj_BANG_(val)
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var this__9868 = this;
  return tcoll.persistent_BANG_()
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var this__9869 = this;
  if(k == null) {
    if(this__9869.has_nil_QMARK_) {
      return this__9869.nil_val
    }else {
      return null
    }
  }else {
    if(this__9869.root == null) {
      return null
    }else {
      return this__9869.root.inode_lookup(0, cljs.core.hash.call(null, k), k)
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var this__9870 = this;
  if(k == null) {
    if(this__9870.has_nil_QMARK_) {
      return this__9870.nil_val
    }else {
      return not_found
    }
  }else {
    if(this__9870.root == null) {
      return not_found
    }else {
      return this__9870.root.inode_lookup(0, cljs.core.hash.call(null, k), k, not_found)
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__9871 = this;
  if(this__9871.edit) {
    return this__9871.count
  }else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.conj_BANG_ = function(o) {
  var this__9872 = this;
  var tcoll__9873 = this;
  if(this__9872.edit) {
    if(function() {
      var G__9874__9875 = o;
      if(G__9874__9875) {
        if(function() {
          var or__3943__auto____9876 = G__9874__9875.cljs$lang$protocol_mask$partition0$ & 2048;
          if(or__3943__auto____9876) {
            return or__3943__auto____9876
          }else {
            return G__9874__9875.cljs$core$IMapEntry$
          }
        }()) {
          return true
        }else {
          if(!G__9874__9875.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.IMapEntry, G__9874__9875)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.IMapEntry, G__9874__9875)
      }
    }()) {
      return tcoll__9873.assoc_BANG_(cljs.core.key.call(null, o), cljs.core.val.call(null, o))
    }else {
      var es__9877 = cljs.core.seq.call(null, o);
      var tcoll__9878 = tcoll__9873;
      while(true) {
        var temp__4090__auto____9879 = cljs.core.first.call(null, es__9877);
        if(cljs.core.truth_(temp__4090__auto____9879)) {
          var e__9880 = temp__4090__auto____9879;
          var G__9891 = cljs.core.next.call(null, es__9877);
          var G__9892 = tcoll__9878.assoc_BANG_(cljs.core.key.call(null, e__9880), cljs.core.val.call(null, e__9880));
          es__9877 = G__9891;
          tcoll__9878 = G__9892;
          continue
        }else {
          return tcoll__9878
        }
        break
      }
    }
  }else {
    throw new Error("conj! after persistent");
  }
};
cljs.core.TransientHashMap.prototype.assoc_BANG_ = function(k, v) {
  var this__9881 = this;
  var tcoll__9882 = this;
  if(this__9881.edit) {
    if(k == null) {
      if(this__9881.nil_val === v) {
      }else {
        this__9881.nil_val = v
      }
      if(this__9881.has_nil_QMARK_) {
      }else {
        this__9881.count = this__9881.count + 1;
        this__9881.has_nil_QMARK_ = true
      }
      return tcoll__9882
    }else {
      var added_leaf_QMARK___9883 = new cljs.core.Box(false);
      var node__9884 = (this__9881.root == null ? cljs.core.BitmapIndexedNode.EMPTY : this__9881.root).inode_assoc_BANG_(this__9881.edit, 0, cljs.core.hash.call(null, k), k, v, added_leaf_QMARK___9883);
      if(node__9884 === this__9881.root) {
      }else {
        this__9881.root = node__9884
      }
      if(added_leaf_QMARK___9883.val) {
        this__9881.count = this__9881.count + 1
      }else {
      }
      return tcoll__9882
    }
  }else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.without_BANG_ = function(k) {
  var this__9885 = this;
  var tcoll__9886 = this;
  if(this__9885.edit) {
    if(k == null) {
      if(this__9885.has_nil_QMARK_) {
        this__9885.has_nil_QMARK_ = false;
        this__9885.nil_val = null;
        this__9885.count = this__9885.count - 1;
        return tcoll__9886
      }else {
        return tcoll__9886
      }
    }else {
      if(this__9885.root == null) {
        return tcoll__9886
      }else {
        var removed_leaf_QMARK___9887 = new cljs.core.Box(false);
        var node__9888 = this__9885.root.inode_without_BANG_(this__9885.edit, 0, cljs.core.hash.call(null, k), k, removed_leaf_QMARK___9887);
        if(node__9888 === this__9885.root) {
        }else {
          this__9885.root = node__9888
        }
        if(cljs.core.truth_(removed_leaf_QMARK___9887[0])) {
          this__9885.count = this__9885.count - 1
        }else {
        }
        return tcoll__9886
      }
    }
  }else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.persistent_BANG_ = function() {
  var this__9889 = this;
  var tcoll__9890 = this;
  if(this__9889.edit) {
    this__9889.edit = null;
    return new cljs.core.PersistentHashMap(null, this__9889.count, this__9889.root, this__9889.has_nil_QMARK_, this__9889.nil_val, null)
  }else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientHashMap;
cljs.core.tree_map_seq_push = function tree_map_seq_push(node, stack, ascending_QMARK_) {
  var t__9895 = node;
  var stack__9896 = stack;
  while(true) {
    if(!(t__9895 == null)) {
      var G__9897 = ascending_QMARK_ ? t__9895.left : t__9895.right;
      var G__9898 = cljs.core.conj.call(null, stack__9896, t__9895);
      t__9895 = G__9897;
      stack__9896 = G__9898;
      continue
    }else {
      return stack__9896
    }
    break
  }
};
cljs.core.PersistentTreeMapSeq = function(meta, stack, ascending_QMARK_, cnt, __hash) {
  this.meta = meta;
  this.stack = stack;
  this.ascending_QMARK_ = ascending_QMARK_;
  this.cnt = cnt;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850570
};
cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrSeq = function(this__2260__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentTreeMapSeq")
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__9899 = this;
  var h__2143__auto____9900 = this__9899.__hash;
  if(!(h__2143__auto____9900 == null)) {
    return h__2143__auto____9900
  }else {
    var h__2143__auto____9901 = cljs.core.hash_coll.call(null, coll);
    this__9899.__hash = h__2143__auto____9901;
    return h__2143__auto____9901
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__9902 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.PersistentTreeMapSeq.prototype.toString = function() {
  var this__9903 = this;
  var this__9904 = this;
  return cljs.core.pr_str.call(null, this__9904)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var this__9905 = this;
  return this$
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__9906 = this;
  if(this__9906.cnt < 0) {
    return cljs.core.count.call(null, cljs.core.next.call(null, coll)) + 1
  }else {
    return this__9906.cnt
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(this$) {
  var this__9907 = this;
  return cljs.core.peek.call(null, this__9907.stack)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(this$) {
  var this__9908 = this;
  var t__9909 = cljs.core.first.call(null, this__9908.stack);
  var next_stack__9910 = cljs.core.tree_map_seq_push.call(null, this__9908.ascending_QMARK_ ? t__9909.right : t__9909.left, cljs.core.next.call(null, this__9908.stack), this__9908.ascending_QMARK_);
  if(!(next_stack__9910 == null)) {
    return new cljs.core.PersistentTreeMapSeq(null, next_stack__9910, this__9908.ascending_QMARK_, this__9908.cnt - 1, null)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__9911 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__9912 = this;
  return new cljs.core.PersistentTreeMapSeq(meta, this__9912.stack, this__9912.ascending_QMARK_, this__9912.cnt, this__9912.__hash)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__9913 = this;
  return this__9913.meta
};
cljs.core.PersistentTreeMapSeq;
cljs.core.create_tree_map_seq = function create_tree_map_seq(tree, ascending_QMARK_, cnt) {
  return new cljs.core.PersistentTreeMapSeq(null, cljs.core.tree_map_seq_push.call(null, tree, null, ascending_QMARK_), ascending_QMARK_, cnt, null)
};
cljs.core.balance_left = function balance_left(key, val, ins, right) {
  if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, ins)) {
    if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, ins.left)) {
      return new cljs.core.RedNode(ins.key, ins.val, ins.left.blacken(), new cljs.core.BlackNode(key, val, ins.right, right, null), null)
    }else {
      if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, ins.right)) {
        return new cljs.core.RedNode(ins.right.key, ins.right.val, new cljs.core.BlackNode(ins.key, ins.val, ins.left, ins.right.left, null), new cljs.core.BlackNode(key, val, ins.right.right, right, null), null)
      }else {
        if("\ufdd0'else") {
          return new cljs.core.BlackNode(key, val, ins, right, null)
        }else {
          return null
        }
      }
    }
  }else {
    return new cljs.core.BlackNode(key, val, ins, right, null)
  }
};
cljs.core.balance_right = function balance_right(key, val, left, ins) {
  if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, ins)) {
    if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, ins.right)) {
      return new cljs.core.RedNode(ins.key, ins.val, new cljs.core.BlackNode(key, val, left, ins.left, null), ins.right.blacken(), null)
    }else {
      if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, ins.left)) {
        return new cljs.core.RedNode(ins.left.key, ins.left.val, new cljs.core.BlackNode(key, val, left, ins.left.left, null), new cljs.core.BlackNode(ins.key, ins.val, ins.left.right, ins.right, null), null)
      }else {
        if("\ufdd0'else") {
          return new cljs.core.BlackNode(key, val, left, ins, null)
        }else {
          return null
        }
      }
    }
  }else {
    return new cljs.core.BlackNode(key, val, left, ins, null)
  }
};
cljs.core.balance_left_del = function balance_left_del(key, val, del, right) {
  if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, del)) {
    return new cljs.core.RedNode(key, val, del.blacken(), right, null)
  }else {
    if(cljs.core.instance_QMARK_.call(null, cljs.core.BlackNode, right)) {
      return cljs.core.balance_right.call(null, key, val, del, right.redden())
    }else {
      if(function() {
        var and__3941__auto____9915 = cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, right);
        if(and__3941__auto____9915) {
          return cljs.core.instance_QMARK_.call(null, cljs.core.BlackNode, right.left)
        }else {
          return and__3941__auto____9915
        }
      }()) {
        return new cljs.core.RedNode(right.left.key, right.left.val, new cljs.core.BlackNode(key, val, del, right.left.left, null), cljs.core.balance_right.call(null, right.key, right.val, right.left.right, right.right.redden()), null)
      }else {
        if("\ufdd0'else") {
          throw new Error("red-black tree invariant violation");
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.balance_right_del = function balance_right_del(key, val, left, del) {
  if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, del)) {
    return new cljs.core.RedNode(key, val, left, del.blacken(), null)
  }else {
    if(cljs.core.instance_QMARK_.call(null, cljs.core.BlackNode, left)) {
      return cljs.core.balance_left.call(null, key, val, left.redden(), del)
    }else {
      if(function() {
        var and__3941__auto____9917 = cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, left);
        if(and__3941__auto____9917) {
          return cljs.core.instance_QMARK_.call(null, cljs.core.BlackNode, left.right)
        }else {
          return and__3941__auto____9917
        }
      }()) {
        return new cljs.core.RedNode(left.right.key, left.right.val, cljs.core.balance_left.call(null, left.key, left.val, left.left.redden(), left.right.left), new cljs.core.BlackNode(key, val, left.right.right, del, null), null)
      }else {
        if("\ufdd0'else") {
          throw new Error("red-black tree invariant violation");
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.tree_map_kv_reduce = function tree_map_kv_reduce(node, f, init) {
  var init__9921 = f.call(null, init, node.key, node.val);
  if(cljs.core.reduced_QMARK_.call(null, init__9921)) {
    return cljs.core.deref.call(null, init__9921)
  }else {
    var init__9922 = !(node.left == null) ? tree_map_kv_reduce.call(null, node.left, f, init__9921) : init__9921;
    if(cljs.core.reduced_QMARK_.call(null, init__9922)) {
      return cljs.core.deref.call(null, init__9922)
    }else {
      var init__9923 = !(node.right == null) ? tree_map_kv_reduce.call(null, node.right, f, init__9922) : init__9922;
      if(cljs.core.reduced_QMARK_.call(null, init__9923)) {
        return cljs.core.deref.call(null, init__9923)
      }else {
        return init__9923
      }
    }
  }
};
cljs.core.BlackNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32402207
};
cljs.core.BlackNode.cljs$lang$type = true;
cljs.core.BlackNode.cljs$lang$ctorPrSeq = function(this__2260__auto__) {
  return cljs.core.list.call(null, "cljs.core/BlackNode")
};
cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__9926 = this;
  var h__2143__auto____9927 = this__9926.__hash;
  if(!(h__2143__auto____9927 == null)) {
    return h__2143__auto____9927
  }else {
    var h__2143__auto____9928 = cljs.core.hash_coll.call(null, coll);
    this__9926.__hash = h__2143__auto____9928;
    return h__2143__auto____9928
  }
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var this__9929 = this;
  return node.cljs$core$IIndexed$_nth$arity$3(node, k, null)
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var this__9930 = this;
  return node.cljs$core$IIndexed$_nth$arity$3(node, k, not_found)
};
cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var this__9931 = this;
  return cljs.core.assoc.call(null, cljs.core.PersistentVector.fromArray([this__9931.key, this__9931.val], true), k, v)
};
cljs.core.BlackNode.prototype.call = function() {
  var G__9979 = null;
  var G__9979__2 = function(this_sym9932, k) {
    var this__9934 = this;
    var this_sym9932__9935 = this;
    var node__9936 = this_sym9932__9935;
    return node__9936.cljs$core$ILookup$_lookup$arity$2(node__9936, k)
  };
  var G__9979__3 = function(this_sym9933, k, not_found) {
    var this__9934 = this;
    var this_sym9933__9937 = this;
    var node__9938 = this_sym9933__9937;
    return node__9938.cljs$core$ILookup$_lookup$arity$3(node__9938, k, not_found)
  };
  G__9979 = function(this_sym9933, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__9979__2.call(this, this_sym9933, k);
      case 3:
        return G__9979__3.call(this, this_sym9933, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__9979
}();
cljs.core.BlackNode.prototype.apply = function(this_sym9924, args9925) {
  var this__9939 = this;
  return this_sym9924.call.apply(this_sym9924, [this_sym9924].concat(args9925.slice()))
};
cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var this__9940 = this;
  return cljs.core.PersistentVector.fromArray([this__9940.key, this__9940.val, o], true)
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var this__9941 = this;
  return this__9941.key
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var this__9942 = this;
  return this__9942.val
};
cljs.core.BlackNode.prototype.add_right = function(ins) {
  var this__9943 = this;
  var node__9944 = this;
  return ins.balance_right(node__9944)
};
cljs.core.BlackNode.prototype.redden = function() {
  var this__9945 = this;
  var node__9946 = this;
  return new cljs.core.RedNode(this__9945.key, this__9945.val, this__9945.left, this__9945.right, null)
};
cljs.core.BlackNode.prototype.remove_right = function(del) {
  var this__9947 = this;
  var node__9948 = this;
  return cljs.core.balance_right_del.call(null, this__9947.key, this__9947.val, this__9947.left, del)
};
cljs.core.BlackNode.prototype.replace = function(key, val, left, right) {
  var this__9949 = this;
  var node__9950 = this;
  return new cljs.core.BlackNode(key, val, left, right, null)
};
cljs.core.BlackNode.prototype.kv_reduce = function(f, init) {
  var this__9951 = this;
  var node__9952 = this;
  return cljs.core.tree_map_kv_reduce.call(null, node__9952, f, init)
};
cljs.core.BlackNode.prototype.remove_left = function(del) {
  var this__9953 = this;
  var node__9954 = this;
  return cljs.core.balance_left_del.call(null, this__9953.key, this__9953.val, del, this__9953.right)
};
cljs.core.BlackNode.prototype.add_left = function(ins) {
  var this__9955 = this;
  var node__9956 = this;
  return ins.balance_left(node__9956)
};
cljs.core.BlackNode.prototype.balance_left = function(parent) {
  var this__9957 = this;
  var node__9958 = this;
  return new cljs.core.BlackNode(parent.key, parent.val, node__9958, parent.right, null)
};
cljs.core.BlackNode.prototype.toString = function() {
  var G__9980 = null;
  var G__9980__0 = function() {
    var this__9959 = this;
    var this__9961 = this;
    return cljs.core.pr_str.call(null, this__9961)
  };
  G__9980 = function() {
    switch(arguments.length) {
      case 0:
        return G__9980__0.call(this)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__9980
}();
cljs.core.BlackNode.prototype.balance_right = function(parent) {
  var this__9962 = this;
  var node__9963 = this;
  return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node__9963, null)
};
cljs.core.BlackNode.prototype.blacken = function() {
  var this__9964 = this;
  var node__9965 = this;
  return node__9965
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var this__9966 = this;
  return cljs.core.ci_reduce.call(null, node, f)
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var this__9967 = this;
  return cljs.core.ci_reduce.call(null, node, f, start)
};
cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var this__9968 = this;
  return cljs.core.list.call(null, this__9968.key, this__9968.val)
};
cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var this__9969 = this;
  return 2
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var this__9970 = this;
  return this__9970.val
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var this__9971 = this;
  return cljs.core.PersistentVector.fromArray([this__9971.key], true)
};
cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var this__9972 = this;
  return cljs.core._assoc_n.call(null, cljs.core.PersistentVector.fromArray([this__9972.key, this__9972.val], true), n, v)
};
cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__9973 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var this__9974 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.fromArray([this__9974.key, this__9974.val], true), meta)
};
cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var this__9975 = this;
  return null
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var this__9976 = this;
  if(n === 0) {
    return this__9976.key
  }else {
    if(n === 1) {
      return this__9976.val
    }else {
      if("\ufdd0'else") {
        return null
      }else {
        return null
      }
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var this__9977 = this;
  if(n === 0) {
    return this__9977.key
  }else {
    if(n === 1) {
      return this__9977.val
    }else {
      if("\ufdd0'else") {
        return not_found
      }else {
        return null
      }
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var this__9978 = this;
  return cljs.core.PersistentVector.EMPTY
};
cljs.core.BlackNode;
cljs.core.RedNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32402207
};
cljs.core.RedNode.cljs$lang$type = true;
cljs.core.RedNode.cljs$lang$ctorPrSeq = function(this__2260__auto__) {
  return cljs.core.list.call(null, "cljs.core/RedNode")
};
cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__9983 = this;
  var h__2143__auto____9984 = this__9983.__hash;
  if(!(h__2143__auto____9984 == null)) {
    return h__2143__auto____9984
  }else {
    var h__2143__auto____9985 = cljs.core.hash_coll.call(null, coll);
    this__9983.__hash = h__2143__auto____9985;
    return h__2143__auto____9985
  }
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var this__9986 = this;
  return node.cljs$core$IIndexed$_nth$arity$3(node, k, null)
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var this__9987 = this;
  return node.cljs$core$IIndexed$_nth$arity$3(node, k, not_found)
};
cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var this__9988 = this;
  return cljs.core.assoc.call(null, cljs.core.PersistentVector.fromArray([this__9988.key, this__9988.val], true), k, v)
};
cljs.core.RedNode.prototype.call = function() {
  var G__10036 = null;
  var G__10036__2 = function(this_sym9989, k) {
    var this__9991 = this;
    var this_sym9989__9992 = this;
    var node__9993 = this_sym9989__9992;
    return node__9993.cljs$core$ILookup$_lookup$arity$2(node__9993, k)
  };
  var G__10036__3 = function(this_sym9990, k, not_found) {
    var this__9991 = this;
    var this_sym9990__9994 = this;
    var node__9995 = this_sym9990__9994;
    return node__9995.cljs$core$ILookup$_lookup$arity$3(node__9995, k, not_found)
  };
  G__10036 = function(this_sym9990, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10036__2.call(this, this_sym9990, k);
      case 3:
        return G__10036__3.call(this, this_sym9990, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__10036
}();
cljs.core.RedNode.prototype.apply = function(this_sym9981, args9982) {
  var this__9996 = this;
  return this_sym9981.call.apply(this_sym9981, [this_sym9981].concat(args9982.slice()))
};
cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var this__9997 = this;
  return cljs.core.PersistentVector.fromArray([this__9997.key, this__9997.val, o], true)
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var this__9998 = this;
  return this__9998.key
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var this__9999 = this;
  return this__9999.val
};
cljs.core.RedNode.prototype.add_right = function(ins) {
  var this__10000 = this;
  var node__10001 = this;
  return new cljs.core.RedNode(this__10000.key, this__10000.val, this__10000.left, ins, null)
};
cljs.core.RedNode.prototype.redden = function() {
  var this__10002 = this;
  var node__10003 = this;
  throw new Error("red-black tree invariant violation");
};
cljs.core.RedNode.prototype.remove_right = function(del) {
  var this__10004 = this;
  var node__10005 = this;
  return new cljs.core.RedNode(this__10004.key, this__10004.val, this__10004.left, del, null)
};
cljs.core.RedNode.prototype.replace = function(key, val, left, right) {
  var this__10006 = this;
  var node__10007 = this;
  return new cljs.core.RedNode(key, val, left, right, null)
};
cljs.core.RedNode.prototype.kv_reduce = function(f, init) {
  var this__10008 = this;
  var node__10009 = this;
  return cljs.core.tree_map_kv_reduce.call(null, node__10009, f, init)
};
cljs.core.RedNode.prototype.remove_left = function(del) {
  var this__10010 = this;
  var node__10011 = this;
  return new cljs.core.RedNode(this__10010.key, this__10010.val, del, this__10010.right, null)
};
cljs.core.RedNode.prototype.add_left = function(ins) {
  var this__10012 = this;
  var node__10013 = this;
  return new cljs.core.RedNode(this__10012.key, this__10012.val, ins, this__10012.right, null)
};
cljs.core.RedNode.prototype.balance_left = function(parent) {
  var this__10014 = this;
  var node__10015 = this;
  if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, this__10014.left)) {
    return new cljs.core.RedNode(this__10014.key, this__10014.val, this__10014.left.blacken(), new cljs.core.BlackNode(parent.key, parent.val, this__10014.right, parent.right, null), null)
  }else {
    if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, this__10014.right)) {
      return new cljs.core.RedNode(this__10014.right.key, this__10014.right.val, new cljs.core.BlackNode(this__10014.key, this__10014.val, this__10014.left, this__10014.right.left, null), new cljs.core.BlackNode(parent.key, parent.val, this__10014.right.right, parent.right, null), null)
    }else {
      if("\ufdd0'else") {
        return new cljs.core.BlackNode(parent.key, parent.val, node__10015, parent.right, null)
      }else {
        return null
      }
    }
  }
};
cljs.core.RedNode.prototype.toString = function() {
  var G__10037 = null;
  var G__10037__0 = function() {
    var this__10016 = this;
    var this__10018 = this;
    return cljs.core.pr_str.call(null, this__10018)
  };
  G__10037 = function() {
    switch(arguments.length) {
      case 0:
        return G__10037__0.call(this)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__10037
}();
cljs.core.RedNode.prototype.balance_right = function(parent) {
  var this__10019 = this;
  var node__10020 = this;
  if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, this__10019.right)) {
    return new cljs.core.RedNode(this__10019.key, this__10019.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, this__10019.left, null), this__10019.right.blacken(), null)
  }else {
    if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, this__10019.left)) {
      return new cljs.core.RedNode(this__10019.left.key, this__10019.left.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, this__10019.left.left, null), new cljs.core.BlackNode(this__10019.key, this__10019.val, this__10019.left.right, this__10019.right, null), null)
    }else {
      if("\ufdd0'else") {
        return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node__10020, null)
      }else {
        return null
      }
    }
  }
};
cljs.core.RedNode.prototype.blacken = function() {
  var this__10021 = this;
  var node__10022 = this;
  return new cljs.core.BlackNode(this__10021.key, this__10021.val, this__10021.left, this__10021.right, null)
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var this__10023 = this;
  return cljs.core.ci_reduce.call(null, node, f)
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var this__10024 = this;
  return cljs.core.ci_reduce.call(null, node, f, start)
};
cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var this__10025 = this;
  return cljs.core.list.call(null, this__10025.key, this__10025.val)
};
cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var this__10026 = this;
  return 2
};
cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var this__10027 = this;
  return this__10027.val
};
cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var this__10028 = this;
  return cljs.core.PersistentVector.fromArray([this__10028.key], true)
};
cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var this__10029 = this;
  return cljs.core._assoc_n.call(null, cljs.core.PersistentVector.fromArray([this__10029.key, this__10029.val], true), n, v)
};
cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__10030 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var this__10031 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.fromArray([this__10031.key, this__10031.val], true), meta)
};
cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var this__10032 = this;
  return null
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var this__10033 = this;
  if(n === 0) {
    return this__10033.key
  }else {
    if(n === 1) {
      return this__10033.val
    }else {
      if("\ufdd0'else") {
        return null
      }else {
        return null
      }
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var this__10034 = this;
  if(n === 0) {
    return this__10034.key
  }else {
    if(n === 1) {
      return this__10034.val
    }else {
      if("\ufdd0'else") {
        return not_found
      }else {
        return null
      }
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var this__10035 = this;
  return cljs.core.PersistentVector.EMPTY
};
cljs.core.RedNode;
cljs.core.tree_map_add = function tree_map_add(comp, tree, k, v, found) {
  if(tree == null) {
    return new cljs.core.RedNode(k, v, null, null, null)
  }else {
    var c__10041 = comp.call(null, k, tree.key);
    if(c__10041 === 0) {
      found[0] = tree;
      return null
    }else {
      if(c__10041 < 0) {
        var ins__10042 = tree_map_add.call(null, comp, tree.left, k, v, found);
        if(!(ins__10042 == null)) {
          return tree.add_left(ins__10042)
        }else {
          return null
        }
      }else {
        if("\ufdd0'else") {
          var ins__10043 = tree_map_add.call(null, comp, tree.right, k, v, found);
          if(!(ins__10043 == null)) {
            return tree.add_right(ins__10043)
          }else {
            return null
          }
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.tree_map_append = function tree_map_append(left, right) {
  if(left == null) {
    return right
  }else {
    if(right == null) {
      return left
    }else {
      if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, left)) {
        if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, right)) {
          var app__10046 = tree_map_append.call(null, left.right, right.left);
          if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, app__10046)) {
            return new cljs.core.RedNode(app__10046.key, app__10046.val, new cljs.core.RedNode(left.key, left.val, left.left, app__10046.left, null), new cljs.core.RedNode(right.key, right.val, app__10046.right, right.right, null), null)
          }else {
            return new cljs.core.RedNode(left.key, left.val, left.left, new cljs.core.RedNode(right.key, right.val, app__10046, right.right, null), null)
          }
        }else {
          return new cljs.core.RedNode(left.key, left.val, left.left, tree_map_append.call(null, left.right, right), null)
        }
      }else {
        if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, right)) {
          return new cljs.core.RedNode(right.key, right.val, tree_map_append.call(null, left, right.left), right.right, null)
        }else {
          if("\ufdd0'else") {
            var app__10047 = tree_map_append.call(null, left.right, right.left);
            if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, app__10047)) {
              return new cljs.core.RedNode(app__10047.key, app__10047.val, new cljs.core.BlackNode(left.key, left.val, left.left, app__10047.left, null), new cljs.core.BlackNode(right.key, right.val, app__10047.right, right.right, null), null)
            }else {
              return cljs.core.balance_left_del.call(null, left.key, left.val, left.left, new cljs.core.BlackNode(right.key, right.val, app__10047, right.right, null))
            }
          }else {
            return null
          }
        }
      }
    }
  }
};
cljs.core.tree_map_remove = function tree_map_remove(comp, tree, k, found) {
  if(!(tree == null)) {
    var c__10053 = comp.call(null, k, tree.key);
    if(c__10053 === 0) {
      found[0] = tree;
      return cljs.core.tree_map_append.call(null, tree.left, tree.right)
    }else {
      if(c__10053 < 0) {
        var del__10054 = tree_map_remove.call(null, comp, tree.left, k, found);
        if(function() {
          var or__3943__auto____10055 = !(del__10054 == null);
          if(or__3943__auto____10055) {
            return or__3943__auto____10055
          }else {
            return!(found[0] == null)
          }
        }()) {
          if(cljs.core.instance_QMARK_.call(null, cljs.core.BlackNode, tree.left)) {
            return cljs.core.balance_left_del.call(null, tree.key, tree.val, del__10054, tree.right)
          }else {
            return new cljs.core.RedNode(tree.key, tree.val, del__10054, tree.right, null)
          }
        }else {
          return null
        }
      }else {
        if("\ufdd0'else") {
          var del__10056 = tree_map_remove.call(null, comp, tree.right, k, found);
          if(function() {
            var or__3943__auto____10057 = !(del__10056 == null);
            if(or__3943__auto____10057) {
              return or__3943__auto____10057
            }else {
              return!(found[0] == null)
            }
          }()) {
            if(cljs.core.instance_QMARK_.call(null, cljs.core.BlackNode, tree.right)) {
              return cljs.core.balance_right_del.call(null, tree.key, tree.val, tree.left, del__10056)
            }else {
              return new cljs.core.RedNode(tree.key, tree.val, tree.left, del__10056, null)
            }
          }else {
            return null
          }
        }else {
          return null
        }
      }
    }
  }else {
    return null
  }
};
cljs.core.tree_map_replace = function tree_map_replace(comp, tree, k, v) {
  var tk__10060 = tree.key;
  var c__10061 = comp.call(null, k, tk__10060);
  if(c__10061 === 0) {
    return tree.replace(tk__10060, v, tree.left, tree.right)
  }else {
    if(c__10061 < 0) {
      return tree.replace(tk__10060, tree.val, tree_map_replace.call(null, comp, tree.left, k, v), tree.right)
    }else {
      if("\ufdd0'else") {
        return tree.replace(tk__10060, tree.val, tree.left, tree_map_replace.call(null, comp, tree.right, k, v))
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentTreeMap = function(comp, tree, cnt, meta, __hash) {
  this.comp = comp;
  this.tree = tree;
  this.cnt = cnt;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 418776847
};
cljs.core.PersistentTreeMap.cljs$lang$type = true;
cljs.core.PersistentTreeMap.cljs$lang$ctorPrSeq = function(this__2260__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentTreeMap")
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__10064 = this;
  var h__2143__auto____10065 = this__10064.__hash;
  if(!(h__2143__auto____10065 == null)) {
    return h__2143__auto____10065
  }else {
    var h__2143__auto____10066 = cljs.core.hash_imap.call(null, coll);
    this__10064.__hash = h__2143__auto____10066;
    return h__2143__auto____10066
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__10067 = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, null)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__10068 = this;
  var n__10069 = coll.entry_at(k);
  if(!(n__10069 == null)) {
    return n__10069.val
  }else {
    return not_found
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var this__10070 = this;
  var found__10071 = [null];
  var t__10072 = cljs.core.tree_map_add.call(null, this__10070.comp, this__10070.tree, k, v, found__10071);
  if(t__10072 == null) {
    var found_node__10073 = cljs.core.nth.call(null, found__10071, 0);
    if(cljs.core._EQ_.call(null, v, found_node__10073.val)) {
      return coll
    }else {
      return new cljs.core.PersistentTreeMap(this__10070.comp, cljs.core.tree_map_replace.call(null, this__10070.comp, this__10070.tree, k, v), this__10070.cnt, this__10070.meta, null)
    }
  }else {
    return new cljs.core.PersistentTreeMap(this__10070.comp, t__10072.blacken(), this__10070.cnt + 1, this__10070.meta, null)
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var this__10074 = this;
  return!(coll.entry_at(k) == null)
};
cljs.core.PersistentTreeMap.prototype.call = function() {
  var G__10108 = null;
  var G__10108__2 = function(this_sym10075, k) {
    var this__10077 = this;
    var this_sym10075__10078 = this;
    var coll__10079 = this_sym10075__10078;
    return coll__10079.cljs$core$ILookup$_lookup$arity$2(coll__10079, k)
  };
  var G__10108__3 = function(this_sym10076, k, not_found) {
    var this__10077 = this;
    var this_sym10076__10080 = this;
    var coll__10081 = this_sym10076__10080;
    return coll__10081.cljs$core$ILookup$_lookup$arity$3(coll__10081, k, not_found)
  };
  G__10108 = function(this_sym10076, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10108__2.call(this, this_sym10076, k);
      case 3:
        return G__10108__3.call(this, this_sym10076, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__10108
}();
cljs.core.PersistentTreeMap.prototype.apply = function(this_sym10062, args10063) {
  var this__10082 = this;
  return this_sym10062.call.apply(this_sym10062, [this_sym10062].concat(args10063.slice()))
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var this__10083 = this;
  if(!(this__10083.tree == null)) {
    return cljs.core.tree_map_kv_reduce.call(null, this__10083.tree, f, init)
  }else {
    return init
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var this__10084 = this;
  if(cljs.core.vector_QMARK_.call(null, entry)) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll, entry)
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var this__10085 = this;
  if(this__10085.cnt > 0) {
    return cljs.core.create_tree_map_seq.call(null, this__10085.tree, false, this__10085.cnt)
  }else {
    return null
  }
};
cljs.core.PersistentTreeMap.prototype.toString = function() {
  var this__10086 = this;
  var this__10087 = this;
  return cljs.core.pr_str.call(null, this__10087)
};
cljs.core.PersistentTreeMap.prototype.entry_at = function(k) {
  var this__10088 = this;
  var coll__10089 = this;
  var t__10090 = this__10088.tree;
  while(true) {
    if(!(t__10090 == null)) {
      var c__10091 = this__10088.comp.call(null, k, t__10090.key);
      if(c__10091 === 0) {
        return t__10090
      }else {
        if(c__10091 < 0) {
          var G__10109 = t__10090.left;
          t__10090 = G__10109;
          continue
        }else {
          if("\ufdd0'else") {
            var G__10110 = t__10090.right;
            t__10090 = G__10110;
            continue
          }else {
            return null
          }
        }
      }
    }else {
      return null
    }
    break
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var this__10092 = this;
  if(this__10092.cnt > 0) {
    return cljs.core.create_tree_map_seq.call(null, this__10092.tree, ascending_QMARK_, this__10092.cnt)
  }else {
    return null
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var this__10093 = this;
  if(this__10093.cnt > 0) {
    var stack__10094 = null;
    var t__10095 = this__10093.tree;
    while(true) {
      if(!(t__10095 == null)) {
        var c__10096 = this__10093.comp.call(null, k, t__10095.key);
        if(c__10096 === 0) {
          return new cljs.core.PersistentTreeMapSeq(null, cljs.core.conj.call(null, stack__10094, t__10095), ascending_QMARK_, -1, null)
        }else {
          if(cljs.core.truth_(ascending_QMARK_)) {
            if(c__10096 < 0) {
              var G__10111 = cljs.core.conj.call(null, stack__10094, t__10095);
              var G__10112 = t__10095.left;
              stack__10094 = G__10111;
              t__10095 = G__10112;
              continue
            }else {
              var G__10113 = stack__10094;
              var G__10114 = t__10095.right;
              stack__10094 = G__10113;
              t__10095 = G__10114;
              continue
            }
          }else {
            if("\ufdd0'else") {
              if(c__10096 > 0) {
                var G__10115 = cljs.core.conj.call(null, stack__10094, t__10095);
                var G__10116 = t__10095.right;
                stack__10094 = G__10115;
                t__10095 = G__10116;
                continue
              }else {
                var G__10117 = stack__10094;
                var G__10118 = t__10095.left;
                stack__10094 = G__10117;
                t__10095 = G__10118;
                continue
              }
            }else {
              return null
            }
          }
        }
      }else {
        if(stack__10094 == null) {
          return new cljs.core.PersistentTreeMapSeq(null, stack__10094, ascending_QMARK_, -1, null)
        }else {
          return null
        }
      }
      break
    }
  }else {
    return null
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var this__10097 = this;
  return cljs.core.key.call(null, entry)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var this__10098 = this;
  return this__10098.comp
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__10099 = this;
  if(this__10099.cnt > 0) {
    return cljs.core.create_tree_map_seq.call(null, this__10099.tree, true, this__10099.cnt)
  }else {
    return null
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__10100 = this;
  return this__10100.cnt
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__10101 = this;
  return cljs.core.equiv_map.call(null, coll, other)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__10102 = this;
  return new cljs.core.PersistentTreeMap(this__10102.comp, this__10102.tree, this__10102.cnt, meta, this__10102.__hash)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__10103 = this;
  return this__10103.meta
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__10104 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentTreeMap.EMPTY, this__10104.meta)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var this__10105 = this;
  var found__10106 = [null];
  var t__10107 = cljs.core.tree_map_remove.call(null, this__10105.comp, this__10105.tree, k, found__10106);
  if(t__10107 == null) {
    if(cljs.core.nth.call(null, found__10106, 0) == null) {
      return coll
    }else {
      return new cljs.core.PersistentTreeMap(this__10105.comp, null, 0, this__10105.meta, null)
    }
  }else {
    return new cljs.core.PersistentTreeMap(this__10105.comp, t__10107.blacken(), this__10105.cnt - 1, this__10105.meta, null)
  }
};
cljs.core.PersistentTreeMap;
cljs.core.PersistentTreeMap.EMPTY = new cljs.core.PersistentTreeMap(cljs.core.compare, null, 0, null, 0);
cljs.core.hash_map = function() {
  var hash_map__delegate = function(keyvals) {
    var in__10121 = cljs.core.seq.call(null, keyvals);
    var out__10122 = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
    while(true) {
      if(in__10121) {
        var G__10123 = cljs.core.nnext.call(null, in__10121);
        var G__10124 = cljs.core.assoc_BANG_.call(null, out__10122, cljs.core.first.call(null, in__10121), cljs.core.second.call(null, in__10121));
        in__10121 = G__10123;
        out__10122 = G__10124;
        continue
      }else {
        return cljs.core.persistent_BANG_.call(null, out__10122)
      }
      break
    }
  };
  var hash_map = function(var_args) {
    var keyvals = null;
    if(goog.isDef(var_args)) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return hash_map__delegate.call(this, keyvals)
  };
  hash_map.cljs$lang$maxFixedArity = 0;
  hash_map.cljs$lang$applyTo = function(arglist__10125) {
    var keyvals = cljs.core.seq(arglist__10125);
    return hash_map__delegate(keyvals)
  };
  hash_map.cljs$lang$arity$variadic = hash_map__delegate;
  return hash_map
}();
cljs.core.array_map = function() {
  var array_map__delegate = function(keyvals) {
    return new cljs.core.PersistentArrayMap(null, cljs.core.quot.call(null, cljs.core.count.call(null, keyvals), 2), cljs.core.apply.call(null, cljs.core.array, keyvals), null)
  };
  var array_map = function(var_args) {
    var keyvals = null;
    if(goog.isDef(var_args)) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return array_map__delegate.call(this, keyvals)
  };
  array_map.cljs$lang$maxFixedArity = 0;
  array_map.cljs$lang$applyTo = function(arglist__10126) {
    var keyvals = cljs.core.seq(arglist__10126);
    return array_map__delegate(keyvals)
  };
  array_map.cljs$lang$arity$variadic = array_map__delegate;
  return array_map
}();
cljs.core.obj_map = function() {
  var obj_map__delegate = function(keyvals) {
    var ks__10130 = [];
    var obj__10131 = {};
    var kvs__10132 = cljs.core.seq.call(null, keyvals);
    while(true) {
      if(kvs__10132) {
        ks__10130.push(cljs.core.first.call(null, kvs__10132));
        obj__10131[cljs.core.first.call(null, kvs__10132)] = cljs.core.second.call(null, kvs__10132);
        var G__10133 = cljs.core.nnext.call(null, kvs__10132);
        kvs__10132 = G__10133;
        continue
      }else {
        return cljs.core.ObjMap.fromObject.call(null, ks__10130, obj__10131)
      }
      break
    }
  };
  var obj_map = function(var_args) {
    var keyvals = null;
    if(goog.isDef(var_args)) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return obj_map__delegate.call(this, keyvals)
  };
  obj_map.cljs$lang$maxFixedArity = 0;
  obj_map.cljs$lang$applyTo = function(arglist__10134) {
    var keyvals = cljs.core.seq(arglist__10134);
    return obj_map__delegate(keyvals)
  };
  obj_map.cljs$lang$arity$variadic = obj_map__delegate;
  return obj_map
}();
cljs.core.sorted_map = function() {
  var sorted_map__delegate = function(keyvals) {
    var in__10137 = cljs.core.seq.call(null, keyvals);
    var out__10138 = cljs.core.PersistentTreeMap.EMPTY;
    while(true) {
      if(in__10137) {
        var G__10139 = cljs.core.nnext.call(null, in__10137);
        var G__10140 = cljs.core.assoc.call(null, out__10138, cljs.core.first.call(null, in__10137), cljs.core.second.call(null, in__10137));
        in__10137 = G__10139;
        out__10138 = G__10140;
        continue
      }else {
        return out__10138
      }
      break
    }
  };
  var sorted_map = function(var_args) {
    var keyvals = null;
    if(goog.isDef(var_args)) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return sorted_map__delegate.call(this, keyvals)
  };
  sorted_map.cljs$lang$maxFixedArity = 0;
  sorted_map.cljs$lang$applyTo = function(arglist__10141) {
    var keyvals = cljs.core.seq(arglist__10141);
    return sorted_map__delegate(keyvals)
  };
  sorted_map.cljs$lang$arity$variadic = sorted_map__delegate;
  return sorted_map
}();
cljs.core.sorted_map_by = function() {
  var sorted_map_by__delegate = function(comparator, keyvals) {
    var in__10144 = cljs.core.seq.call(null, keyvals);
    var out__10145 = new cljs.core.PersistentTreeMap(comparator, null, 0, null, 0);
    while(true) {
      if(in__10144) {
        var G__10146 = cljs.core.nnext.call(null, in__10144);
        var G__10147 = cljs.core.assoc.call(null, out__10145, cljs.core.first.call(null, in__10144), cljs.core.second.call(null, in__10144));
        in__10144 = G__10146;
        out__10145 = G__10147;
        continue
      }else {
        return out__10145
      }
      break
    }
  };
  var sorted_map_by = function(comparator, var_args) {
    var keyvals = null;
    if(goog.isDef(var_args)) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return sorted_map_by__delegate.call(this, comparator, keyvals)
  };
  sorted_map_by.cljs$lang$maxFixedArity = 1;
  sorted_map_by.cljs$lang$applyTo = function(arglist__10148) {
    var comparator = cljs.core.first(arglist__10148);
    var keyvals = cljs.core.rest(arglist__10148);
    return sorted_map_by__delegate(comparator, keyvals)
  };
  sorted_map_by.cljs$lang$arity$variadic = sorted_map_by__delegate;
  return sorted_map_by
}();
cljs.core.keys = function keys(hash_map) {
  return cljs.core.seq.call(null, cljs.core.map.call(null, cljs.core.first, hash_map))
};
cljs.core.key = function key(map_entry) {
  return cljs.core._key.call(null, map_entry)
};
cljs.core.vals = function vals(hash_map) {
  return cljs.core.seq.call(null, cljs.core.map.call(null, cljs.core.second, hash_map))
};
cljs.core.val = function val(map_entry) {
  return cljs.core._val.call(null, map_entry)
};
cljs.core.merge = function() {
  var merge__delegate = function(maps) {
    if(cljs.core.truth_(cljs.core.some.call(null, cljs.core.identity, maps))) {
      return cljs.core.reduce.call(null, function(p1__10149_SHARP_, p2__10150_SHARP_) {
        return cljs.core.conj.call(null, function() {
          var or__3943__auto____10152 = p1__10149_SHARP_;
          if(cljs.core.truth_(or__3943__auto____10152)) {
            return or__3943__auto____10152
          }else {
            return cljs.core.ObjMap.EMPTY
          }
        }(), p2__10150_SHARP_)
      }, maps)
    }else {
      return null
    }
  };
  var merge = function(var_args) {
    var maps = null;
    if(goog.isDef(var_args)) {
      maps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return merge__delegate.call(this, maps)
  };
  merge.cljs$lang$maxFixedArity = 0;
  merge.cljs$lang$applyTo = function(arglist__10153) {
    var maps = cljs.core.seq(arglist__10153);
    return merge__delegate(maps)
  };
  merge.cljs$lang$arity$variadic = merge__delegate;
  return merge
}();
cljs.core.merge_with = function() {
  var merge_with__delegate = function(f, maps) {
    if(cljs.core.truth_(cljs.core.some.call(null, cljs.core.identity, maps))) {
      var merge_entry__10161 = function(m, e) {
        var k__10159 = cljs.core.first.call(null, e);
        var v__10160 = cljs.core.second.call(null, e);
        if(cljs.core.contains_QMARK_.call(null, m, k__10159)) {
          return cljs.core.assoc.call(null, m, k__10159, f.call(null, cljs.core._lookup.call(null, m, k__10159, null), v__10160))
        }else {
          return cljs.core.assoc.call(null, m, k__10159, v__10160)
        }
      };
      var merge2__10163 = function(m1, m2) {
        return cljs.core.reduce.call(null, merge_entry__10161, function() {
          var or__3943__auto____10162 = m1;
          if(cljs.core.truth_(or__3943__auto____10162)) {
            return or__3943__auto____10162
          }else {
            return cljs.core.ObjMap.EMPTY
          }
        }(), cljs.core.seq.call(null, m2))
      };
      return cljs.core.reduce.call(null, merge2__10163, maps)
    }else {
      return null
    }
  };
  var merge_with = function(f, var_args) {
    var maps = null;
    if(goog.isDef(var_args)) {
      maps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return merge_with__delegate.call(this, f, maps)
  };
  merge_with.cljs$lang$maxFixedArity = 1;
  merge_with.cljs$lang$applyTo = function(arglist__10164) {
    var f = cljs.core.first(arglist__10164);
    var maps = cljs.core.rest(arglist__10164);
    return merge_with__delegate(f, maps)
  };
  merge_with.cljs$lang$arity$variadic = merge_with__delegate;
  return merge_with
}();
cljs.core.select_keys = function select_keys(map, keyseq) {
  var ret__10169 = cljs.core.ObjMap.EMPTY;
  var keys__10170 = cljs.core.seq.call(null, keyseq);
  while(true) {
    if(keys__10170) {
      var key__10171 = cljs.core.first.call(null, keys__10170);
      var entry__10172 = cljs.core._lookup.call(null, map, key__10171, "\ufdd0'cljs.core/not-found");
      var G__10173 = cljs.core.not_EQ_.call(null, entry__10172, "\ufdd0'cljs.core/not-found") ? cljs.core.assoc.call(null, ret__10169, key__10171, entry__10172) : ret__10169;
      var G__10174 = cljs.core.next.call(null, keys__10170);
      ret__10169 = G__10173;
      keys__10170 = G__10174;
      continue
    }else {
      return ret__10169
    }
    break
  }
};
cljs.core.PersistentHashSet = function(meta, hash_map, __hash) {
  this.meta = meta;
  this.hash_map = hash_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 1;
  this.cljs$lang$protocol_mask$partition0$ = 15077647
};
cljs.core.PersistentHashSet.cljs$lang$type = true;
cljs.core.PersistentHashSet.cljs$lang$ctorPrSeq = function(this__2260__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentHashSet")
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var this__10178 = this;
  return new cljs.core.TransientHashSet(cljs.core.transient$.call(null, this__10178.hash_map))
};
cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__10179 = this;
  var h__2143__auto____10180 = this__10179.__hash;
  if(!(h__2143__auto____10180 == null)) {
    return h__2143__auto____10180
  }else {
    var h__2143__auto____10181 = cljs.core.hash_iset.call(null, coll);
    this__10179.__hash = h__2143__auto____10181;
    return h__2143__auto____10181
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var this__10182 = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, v, null)
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var this__10183 = this;
  if(cljs.core.truth_(cljs.core._contains_key_QMARK_.call(null, this__10183.hash_map, v))) {
    return v
  }else {
    return not_found
  }
};
cljs.core.PersistentHashSet.prototype.call = function() {
  var G__10204 = null;
  var G__10204__2 = function(this_sym10184, k) {
    var this__10186 = this;
    var this_sym10184__10187 = this;
    var coll__10188 = this_sym10184__10187;
    return coll__10188.cljs$core$ILookup$_lookup$arity$2(coll__10188, k)
  };
  var G__10204__3 = function(this_sym10185, k, not_found) {
    var this__10186 = this;
    var this_sym10185__10189 = this;
    var coll__10190 = this_sym10185__10189;
    return coll__10190.cljs$core$ILookup$_lookup$arity$3(coll__10190, k, not_found)
  };
  G__10204 = function(this_sym10185, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10204__2.call(this, this_sym10185, k);
      case 3:
        return G__10204__3.call(this, this_sym10185, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__10204
}();
cljs.core.PersistentHashSet.prototype.apply = function(this_sym10176, args10177) {
  var this__10191 = this;
  return this_sym10176.call.apply(this_sym10176, [this_sym10176].concat(args10177.slice()))
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__10192 = this;
  return new cljs.core.PersistentHashSet(this__10192.meta, cljs.core.assoc.call(null, this__10192.hash_map, o, null), null)
};
cljs.core.PersistentHashSet.prototype.toString = function() {
  var this__10193 = this;
  var this__10194 = this;
  return cljs.core.pr_str.call(null, this__10194)
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__10195 = this;
  return cljs.core.keys.call(null, this__10195.hash_map)
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var this__10196 = this;
  return new cljs.core.PersistentHashSet(this__10196.meta, cljs.core.dissoc.call(null, this__10196.hash_map, v), null)
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__10197 = this;
  return cljs.core.count.call(null, cljs.core.seq.call(null, coll))
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__10198 = this;
  var and__3941__auto____10199 = cljs.core.set_QMARK_.call(null, other);
  if(and__3941__auto____10199) {
    var and__3941__auto____10200 = cljs.core.count.call(null, coll) === cljs.core.count.call(null, other);
    if(and__3941__auto____10200) {
      return cljs.core.every_QMARK_.call(null, function(p1__10175_SHARP_) {
        return cljs.core.contains_QMARK_.call(null, coll, p1__10175_SHARP_)
      }, other)
    }else {
      return and__3941__auto____10200
    }
  }else {
    return and__3941__auto____10199
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__10201 = this;
  return new cljs.core.PersistentHashSet(meta, this__10201.hash_map, this__10201.__hash)
};
cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__10202 = this;
  return this__10202.meta
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__10203 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentHashSet.EMPTY, this__10203.meta)
};
cljs.core.PersistentHashSet;
cljs.core.PersistentHashSet.EMPTY = new cljs.core.PersistentHashSet(null, cljs.core.hash_map.call(null), 0);
cljs.core.PersistentHashSet.fromArray = function(items) {
  var len__10205 = cljs.core.count.call(null, items);
  var i__10206 = 0;
  var out__10207 = cljs.core.transient$.call(null, cljs.core.PersistentHashSet.EMPTY);
  while(true) {
    if(i__10206 < len__10205) {
      var G__10208 = i__10206 + 1;
      var G__10209 = cljs.core.conj_BANG_.call(null, out__10207, items[i__10206]);
      i__10206 = G__10208;
      out__10207 = G__10209;
      continue
    }else {
      return cljs.core.persistent_BANG_.call(null, out__10207)
    }
    break
  }
};
cljs.core.TransientHashSet = function(transient_map) {
  this.transient_map = transient_map;
  this.cljs$lang$protocol_mask$partition0$ = 259;
  this.cljs$lang$protocol_mask$partition1$ = 34
};
cljs.core.TransientHashSet.cljs$lang$type = true;
cljs.core.TransientHashSet.cljs$lang$ctorPrSeq = function(this__2260__auto__) {
  return cljs.core.list.call(null, "cljs.core/TransientHashSet")
};
cljs.core.TransientHashSet.prototype.call = function() {
  var G__10227 = null;
  var G__10227__2 = function(this_sym10213, k) {
    var this__10215 = this;
    var this_sym10213__10216 = this;
    var tcoll__10217 = this_sym10213__10216;
    if(cljs.core._lookup.call(null, this__10215.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return null
    }else {
      return k
    }
  };
  var G__10227__3 = function(this_sym10214, k, not_found) {
    var this__10215 = this;
    var this_sym10214__10218 = this;
    var tcoll__10219 = this_sym10214__10218;
    if(cljs.core._lookup.call(null, this__10215.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return not_found
    }else {
      return k
    }
  };
  G__10227 = function(this_sym10214, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10227__2.call(this, this_sym10214, k);
      case 3:
        return G__10227__3.call(this, this_sym10214, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__10227
}();
cljs.core.TransientHashSet.prototype.apply = function(this_sym10211, args10212) {
  var this__10220 = this;
  return this_sym10211.call.apply(this_sym10211, [this_sym10211].concat(args10212.slice()))
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, v) {
  var this__10221 = this;
  return tcoll.cljs$core$ILookup$_lookup$arity$3(tcoll, v, null)
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, v, not_found) {
  var this__10222 = this;
  if(cljs.core._lookup.call(null, this__10222.transient_map, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return not_found
  }else {
    return v
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var this__10223 = this;
  return cljs.core.count.call(null, this__10223.transient_map)
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = function(tcoll, v) {
  var this__10224 = this;
  this__10224.transient_map = cljs.core.dissoc_BANG_.call(null, this__10224.transient_map, v);
  return tcoll
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var this__10225 = this;
  this__10225.transient_map = cljs.core.assoc_BANG_.call(null, this__10225.transient_map, o, null);
  return tcoll
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var this__10226 = this;
  return new cljs.core.PersistentHashSet(null, cljs.core.persistent_BANG_.call(null, this__10226.transient_map), null)
};
cljs.core.TransientHashSet;
cljs.core.PersistentTreeSet = function(meta, tree_map, __hash) {
  this.meta = meta;
  this.tree_map = tree_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 417730831
};
cljs.core.PersistentTreeSet.cljs$lang$type = true;
cljs.core.PersistentTreeSet.cljs$lang$ctorPrSeq = function(this__2260__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentTreeSet")
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__10230 = this;
  var h__2143__auto____10231 = this__10230.__hash;
  if(!(h__2143__auto____10231 == null)) {
    return h__2143__auto____10231
  }else {
    var h__2143__auto____10232 = cljs.core.hash_iset.call(null, coll);
    this__10230.__hash = h__2143__auto____10232;
    return h__2143__auto____10232
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var this__10233 = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, v, null)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var this__10234 = this;
  if(cljs.core.truth_(cljs.core._contains_key_QMARK_.call(null, this__10234.tree_map, v))) {
    return v
  }else {
    return not_found
  }
};
cljs.core.PersistentTreeSet.prototype.call = function() {
  var G__10260 = null;
  var G__10260__2 = function(this_sym10235, k) {
    var this__10237 = this;
    var this_sym10235__10238 = this;
    var coll__10239 = this_sym10235__10238;
    return coll__10239.cljs$core$ILookup$_lookup$arity$2(coll__10239, k)
  };
  var G__10260__3 = function(this_sym10236, k, not_found) {
    var this__10237 = this;
    var this_sym10236__10240 = this;
    var coll__10241 = this_sym10236__10240;
    return coll__10241.cljs$core$ILookup$_lookup$arity$3(coll__10241, k, not_found)
  };
  G__10260 = function(this_sym10236, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10260__2.call(this, this_sym10236, k);
      case 3:
        return G__10260__3.call(this, this_sym10236, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__10260
}();
cljs.core.PersistentTreeSet.prototype.apply = function(this_sym10228, args10229) {
  var this__10242 = this;
  return this_sym10228.call.apply(this_sym10228, [this_sym10228].concat(args10229.slice()))
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__10243 = this;
  return new cljs.core.PersistentTreeSet(this__10243.meta, cljs.core.assoc.call(null, this__10243.tree_map, o, null), null)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var this__10244 = this;
  return cljs.core.map.call(null, cljs.core.key, cljs.core.rseq.call(null, this__10244.tree_map))
};
cljs.core.PersistentTreeSet.prototype.toString = function() {
  var this__10245 = this;
  var this__10246 = this;
  return cljs.core.pr_str.call(null, this__10246)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var this__10247 = this;
  return cljs.core.map.call(null, cljs.core.key, cljs.core._sorted_seq.call(null, this__10247.tree_map, ascending_QMARK_))
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var this__10248 = this;
  return cljs.core.map.call(null, cljs.core.key, cljs.core._sorted_seq_from.call(null, this__10248.tree_map, k, ascending_QMARK_))
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var this__10249 = this;
  return entry
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var this__10250 = this;
  return cljs.core._comparator.call(null, this__10250.tree_map)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__10251 = this;
  return cljs.core.keys.call(null, this__10251.tree_map)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var this__10252 = this;
  return new cljs.core.PersistentTreeSet(this__10252.meta, cljs.core.dissoc.call(null, this__10252.tree_map, v), null)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__10253 = this;
  return cljs.core.count.call(null, this__10253.tree_map)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__10254 = this;
  var and__3941__auto____10255 = cljs.core.set_QMARK_.call(null, other);
  if(and__3941__auto____10255) {
    var and__3941__auto____10256 = cljs.core.count.call(null, coll) === cljs.core.count.call(null, other);
    if(and__3941__auto____10256) {
      return cljs.core.every_QMARK_.call(null, function(p1__10210_SHARP_) {
        return cljs.core.contains_QMARK_.call(null, coll, p1__10210_SHARP_)
      }, other)
    }else {
      return and__3941__auto____10256
    }
  }else {
    return and__3941__auto____10255
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__10257 = this;
  return new cljs.core.PersistentTreeSet(meta, this__10257.tree_map, this__10257.__hash)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__10258 = this;
  return this__10258.meta
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__10259 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentTreeSet.EMPTY, this__10259.meta)
};
cljs.core.PersistentTreeSet;
cljs.core.PersistentTreeSet.EMPTY = new cljs.core.PersistentTreeSet(null, cljs.core.sorted_map.call(null), 0);
cljs.core.hash_set = function() {
  var hash_set = null;
  var hash_set__0 = function() {
    return cljs.core.PersistentHashSet.EMPTY
  };
  var hash_set__1 = function() {
    var G__10265__delegate = function(keys) {
      var in__10263 = cljs.core.seq.call(null, keys);
      var out__10264 = cljs.core.transient$.call(null, cljs.core.PersistentHashSet.EMPTY);
      while(true) {
        if(cljs.core.seq.call(null, in__10263)) {
          var G__10266 = cljs.core.next.call(null, in__10263);
          var G__10267 = cljs.core.conj_BANG_.call(null, out__10264, cljs.core.first.call(null, in__10263));
          in__10263 = G__10266;
          out__10264 = G__10267;
          continue
        }else {
          return cljs.core.persistent_BANG_.call(null, out__10264)
        }
        break
      }
    };
    var G__10265 = function(var_args) {
      var keys = null;
      if(goog.isDef(var_args)) {
        keys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
      }
      return G__10265__delegate.call(this, keys)
    };
    G__10265.cljs$lang$maxFixedArity = 0;
    G__10265.cljs$lang$applyTo = function(arglist__10268) {
      var keys = cljs.core.seq(arglist__10268);
      return G__10265__delegate(keys)
    };
    G__10265.cljs$lang$arity$variadic = G__10265__delegate;
    return G__10265
  }();
  hash_set = function(var_args) {
    var keys = var_args;
    switch(arguments.length) {
      case 0:
        return hash_set__0.call(this);
      default:
        return hash_set__1.cljs$lang$arity$variadic(cljs.core.array_seq(arguments, 0))
    }
    throw"Invalid arity: " + arguments.length;
  };
  hash_set.cljs$lang$maxFixedArity = 0;
  hash_set.cljs$lang$applyTo = hash_set__1.cljs$lang$applyTo;
  hash_set.cljs$lang$arity$0 = hash_set__0;
  hash_set.cljs$lang$arity$variadic = hash_set__1.cljs$lang$arity$variadic;
  return hash_set
}();
cljs.core.set = function set(coll) {
  return cljs.core.apply.call(null, cljs.core.hash_set, coll)
};
cljs.core.sorted_set = function() {
  var sorted_set__delegate = function(keys) {
    return cljs.core.reduce.call(null, cljs.core._conj, cljs.core.PersistentTreeSet.EMPTY, keys)
  };
  var sorted_set = function(var_args) {
    var keys = null;
    if(goog.isDef(var_args)) {
      keys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return sorted_set__delegate.call(this, keys)
  };
  sorted_set.cljs$lang$maxFixedArity = 0;
  sorted_set.cljs$lang$applyTo = function(arglist__10269) {
    var keys = cljs.core.seq(arglist__10269);
    return sorted_set__delegate(keys)
  };
  sorted_set.cljs$lang$arity$variadic = sorted_set__delegate;
  return sorted_set
}();
cljs.core.sorted_set_by = function() {
  var sorted_set_by__delegate = function(comparator, keys) {
    return cljs.core.reduce.call(null, cljs.core._conj, new cljs.core.PersistentTreeSet(null, cljs.core.sorted_map_by.call(null, comparator), 0), keys)
  };
  var sorted_set_by = function(comparator, var_args) {
    var keys = null;
    if(goog.isDef(var_args)) {
      keys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return sorted_set_by__delegate.call(this, comparator, keys)
  };
  sorted_set_by.cljs$lang$maxFixedArity = 1;
  sorted_set_by.cljs$lang$applyTo = function(arglist__10271) {
    var comparator = cljs.core.first(arglist__10271);
    var keys = cljs.core.rest(arglist__10271);
    return sorted_set_by__delegate(comparator, keys)
  };
  sorted_set_by.cljs$lang$arity$variadic = sorted_set_by__delegate;
  return sorted_set_by
}();
cljs.core.replace = function replace(smap, coll) {
  if(cljs.core.vector_QMARK_.call(null, coll)) {
    var n__10277 = cljs.core.count.call(null, coll);
    return cljs.core.reduce.call(null, function(v, i) {
      var temp__4090__auto____10278 = cljs.core.find.call(null, smap, cljs.core.nth.call(null, v, i));
      if(cljs.core.truth_(temp__4090__auto____10278)) {
        var e__10279 = temp__4090__auto____10278;
        return cljs.core.assoc.call(null, v, i, cljs.core.second.call(null, e__10279))
      }else {
        return v
      }
    }, coll, cljs.core.take.call(null, n__10277, cljs.core.iterate.call(null, cljs.core.inc, 0)))
  }else {
    return cljs.core.map.call(null, function(p1__10270_SHARP_) {
      var temp__4090__auto____10280 = cljs.core.find.call(null, smap, p1__10270_SHARP_);
      if(cljs.core.truth_(temp__4090__auto____10280)) {
        var e__10281 = temp__4090__auto____10280;
        return cljs.core.second.call(null, e__10281)
      }else {
        return p1__10270_SHARP_
      }
    }, coll)
  }
};
cljs.core.distinct = function distinct(coll) {
  var step__10311 = function step(xs, seen) {
    return new cljs.core.LazySeq(null, false, function() {
      return function(p__10304, seen) {
        while(true) {
          var vec__10305__10306 = p__10304;
          var f__10307 = cljs.core.nth.call(null, vec__10305__10306, 0, null);
          var xs__10308 = vec__10305__10306;
          var temp__4092__auto____10309 = cljs.core.seq.call(null, xs__10308);
          if(temp__4092__auto____10309) {
            var s__10310 = temp__4092__auto____10309;
            if(cljs.core.contains_QMARK_.call(null, seen, f__10307)) {
              var G__10312 = cljs.core.rest.call(null, s__10310);
              var G__10313 = seen;
              p__10304 = G__10312;
              seen = G__10313;
              continue
            }else {
              return cljs.core.cons.call(null, f__10307, step.call(null, cljs.core.rest.call(null, s__10310), cljs.core.conj.call(null, seen, f__10307)))
            }
          }else {
            return null
          }
          break
        }
      }.call(null, xs, seen)
    }, null)
  };
  return step__10311.call(null, coll, cljs.core.PersistentHashSet.EMPTY)
};
cljs.core.butlast = function butlast(s) {
  var ret__10316 = cljs.core.PersistentVector.EMPTY;
  var s__10317 = s;
  while(true) {
    if(cljs.core.next.call(null, s__10317)) {
      var G__10318 = cljs.core.conj.call(null, ret__10316, cljs.core.first.call(null, s__10317));
      var G__10319 = cljs.core.next.call(null, s__10317);
      ret__10316 = G__10318;
      s__10317 = G__10319;
      continue
    }else {
      return cljs.core.seq.call(null, ret__10316)
    }
    break
  }
};
cljs.core.name = function name(x) {
  if(cljs.core.string_QMARK_.call(null, x)) {
    return x
  }else {
    if(function() {
      var or__3943__auto____10322 = cljs.core.keyword_QMARK_.call(null, x);
      if(or__3943__auto____10322) {
        return or__3943__auto____10322
      }else {
        return cljs.core.symbol_QMARK_.call(null, x)
      }
    }()) {
      var i__10323 = x.lastIndexOf("/");
      if(i__10323 < 0) {
        return cljs.core.subs.call(null, x, 2)
      }else {
        return cljs.core.subs.call(null, x, i__10323 + 1)
      }
    }else {
      if("\ufdd0'else") {
        throw new Error([cljs.core.str("Doesn't support name: "), cljs.core.str(x)].join(""));
      }else {
        return null
      }
    }
  }
};
cljs.core.namespace = function namespace(x) {
  if(function() {
    var or__3943__auto____10326 = cljs.core.keyword_QMARK_.call(null, x);
    if(or__3943__auto____10326) {
      return or__3943__auto____10326
    }else {
      return cljs.core.symbol_QMARK_.call(null, x)
    }
  }()) {
    var i__10327 = x.lastIndexOf("/");
    if(i__10327 > -1) {
      return cljs.core.subs.call(null, x, 2, i__10327)
    }else {
      return null
    }
  }else {
    throw new Error([cljs.core.str("Doesn't support namespace: "), cljs.core.str(x)].join(""));
  }
};
cljs.core.zipmap = function zipmap(keys, vals) {
  var map__10334 = cljs.core.ObjMap.EMPTY;
  var ks__10335 = cljs.core.seq.call(null, keys);
  var vs__10336 = cljs.core.seq.call(null, vals);
  while(true) {
    if(function() {
      var and__3941__auto____10337 = ks__10335;
      if(and__3941__auto____10337) {
        return vs__10336
      }else {
        return and__3941__auto____10337
      }
    }()) {
      var G__10338 = cljs.core.assoc.call(null, map__10334, cljs.core.first.call(null, ks__10335), cljs.core.first.call(null, vs__10336));
      var G__10339 = cljs.core.next.call(null, ks__10335);
      var G__10340 = cljs.core.next.call(null, vs__10336);
      map__10334 = G__10338;
      ks__10335 = G__10339;
      vs__10336 = G__10340;
      continue
    }else {
      return map__10334
    }
    break
  }
};
cljs.core.max_key = function() {
  var max_key = null;
  var max_key__2 = function(k, x) {
    return x
  };
  var max_key__3 = function(k, x, y) {
    if(k.call(null, x) > k.call(null, y)) {
      return x
    }else {
      return y
    }
  };
  var max_key__4 = function() {
    var G__10343__delegate = function(k, x, y, more) {
      return cljs.core.reduce.call(null, function(p1__10328_SHARP_, p2__10329_SHARP_) {
        return max_key.call(null, k, p1__10328_SHARP_, p2__10329_SHARP_)
      }, max_key.call(null, k, x, y), more)
    };
    var G__10343 = function(k, x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__10343__delegate.call(this, k, x, y, more)
    };
    G__10343.cljs$lang$maxFixedArity = 3;
    G__10343.cljs$lang$applyTo = function(arglist__10344) {
      var k = cljs.core.first(arglist__10344);
      var x = cljs.core.first(cljs.core.next(arglist__10344));
      var y = cljs.core.first(cljs.core.next(cljs.core.next(arglist__10344)));
      var more = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__10344)));
      return G__10343__delegate(k, x, y, more)
    };
    G__10343.cljs$lang$arity$variadic = G__10343__delegate;
    return G__10343
  }();
  max_key = function(k, x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return max_key__2.call(this, k, x);
      case 3:
        return max_key__3.call(this, k, x, y);
      default:
        return max_key__4.cljs$lang$arity$variadic(k, x, y, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  max_key.cljs$lang$maxFixedArity = 3;
  max_key.cljs$lang$applyTo = max_key__4.cljs$lang$applyTo;
  max_key.cljs$lang$arity$2 = max_key__2;
  max_key.cljs$lang$arity$3 = max_key__3;
  max_key.cljs$lang$arity$variadic = max_key__4.cljs$lang$arity$variadic;
  return max_key
}();
cljs.core.min_key = function() {
  var min_key = null;
  var min_key__2 = function(k, x) {
    return x
  };
  var min_key__3 = function(k, x, y) {
    if(k.call(null, x) < k.call(null, y)) {
      return x
    }else {
      return y
    }
  };
  var min_key__4 = function() {
    var G__10345__delegate = function(k, x, y, more) {
      return cljs.core.reduce.call(null, function(p1__10341_SHARP_, p2__10342_SHARP_) {
        return min_key.call(null, k, p1__10341_SHARP_, p2__10342_SHARP_)
      }, min_key.call(null, k, x, y), more)
    };
    var G__10345 = function(k, x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__10345__delegate.call(this, k, x, y, more)
    };
    G__10345.cljs$lang$maxFixedArity = 3;
    G__10345.cljs$lang$applyTo = function(arglist__10346) {
      var k = cljs.core.first(arglist__10346);
      var x = cljs.core.first(cljs.core.next(arglist__10346));
      var y = cljs.core.first(cljs.core.next(cljs.core.next(arglist__10346)));
      var more = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__10346)));
      return G__10345__delegate(k, x, y, more)
    };
    G__10345.cljs$lang$arity$variadic = G__10345__delegate;
    return G__10345
  }();
  min_key = function(k, x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return min_key__2.call(this, k, x);
      case 3:
        return min_key__3.call(this, k, x, y);
      default:
        return min_key__4.cljs$lang$arity$variadic(k, x, y, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  min_key.cljs$lang$maxFixedArity = 3;
  min_key.cljs$lang$applyTo = min_key__4.cljs$lang$applyTo;
  min_key.cljs$lang$arity$2 = min_key__2;
  min_key.cljs$lang$arity$3 = min_key__3;
  min_key.cljs$lang$arity$variadic = min_key__4.cljs$lang$arity$variadic;
  return min_key
}();
cljs.core.partition_all = function() {
  var partition_all = null;
  var partition_all__2 = function(n, coll) {
    return partition_all.call(null, n, n, coll)
  };
  var partition_all__3 = function(n, step, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__4092__auto____10349 = cljs.core.seq.call(null, coll);
      if(temp__4092__auto____10349) {
        var s__10350 = temp__4092__auto____10349;
        return cljs.core.cons.call(null, cljs.core.take.call(null, n, s__10350), partition_all.call(null, n, step, cljs.core.drop.call(null, step, s__10350)))
      }else {
        return null
      }
    }, null)
  };
  partition_all = function(n, step, coll) {
    switch(arguments.length) {
      case 2:
        return partition_all__2.call(this, n, step);
      case 3:
        return partition_all__3.call(this, n, step, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  partition_all.cljs$lang$arity$2 = partition_all__2;
  partition_all.cljs$lang$arity$3 = partition_all__3;
  return partition_all
}();
cljs.core.take_while = function take_while(pred, coll) {
  return new cljs.core.LazySeq(null, false, function() {
    var temp__4092__auto____10353 = cljs.core.seq.call(null, coll);
    if(temp__4092__auto____10353) {
      var s__10354 = temp__4092__auto____10353;
      if(cljs.core.truth_(pred.call(null, cljs.core.first.call(null, s__10354)))) {
        return cljs.core.cons.call(null, cljs.core.first.call(null, s__10354), take_while.call(null, pred, cljs.core.rest.call(null, s__10354)))
      }else {
        return null
      }
    }else {
      return null
    }
  }, null)
};
cljs.core.mk_bound_fn = function mk_bound_fn(sc, test, key) {
  return function(e) {
    var comp__10356 = cljs.core._comparator.call(null, sc);
    return test.call(null, comp__10356.call(null, cljs.core._entry_key.call(null, sc, e), key), 0)
  }
};
cljs.core.subseq = function() {
  var subseq = null;
  var subseq__3 = function(sc, test, key) {
    var include__10368 = cljs.core.mk_bound_fn.call(null, sc, test, key);
    if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._GT_, cljs.core._GT__EQ_]).call(null, test))) {
      var temp__4092__auto____10369 = cljs.core._sorted_seq_from.call(null, sc, key, true);
      if(cljs.core.truth_(temp__4092__auto____10369)) {
        var vec__10370__10371 = temp__4092__auto____10369;
        var e__10372 = cljs.core.nth.call(null, vec__10370__10371, 0, null);
        var s__10373 = vec__10370__10371;
        if(cljs.core.truth_(include__10368.call(null, e__10372))) {
          return s__10373
        }else {
          return cljs.core.next.call(null, s__10373)
        }
      }else {
        return null
      }
    }else {
      return cljs.core.take_while.call(null, include__10368, cljs.core._sorted_seq.call(null, sc, true))
    }
  };
  var subseq__5 = function(sc, start_test, start_key, end_test, end_key) {
    var temp__4092__auto____10374 = cljs.core._sorted_seq_from.call(null, sc, start_key, true);
    if(cljs.core.truth_(temp__4092__auto____10374)) {
      var vec__10375__10376 = temp__4092__auto____10374;
      var e__10377 = cljs.core.nth.call(null, vec__10375__10376, 0, null);
      var s__10378 = vec__10375__10376;
      return cljs.core.take_while.call(null, cljs.core.mk_bound_fn.call(null, sc, end_test, end_key), cljs.core.truth_(cljs.core.mk_bound_fn.call(null, sc, start_test, start_key).call(null, e__10377)) ? s__10378 : cljs.core.next.call(null, s__10378))
    }else {
      return null
    }
  };
  subseq = function(sc, start_test, start_key, end_test, end_key) {
    switch(arguments.length) {
      case 3:
        return subseq__3.call(this, sc, start_test, start_key);
      case 5:
        return subseq__5.call(this, sc, start_test, start_key, end_test, end_key)
    }
    throw"Invalid arity: " + arguments.length;
  };
  subseq.cljs$lang$arity$3 = subseq__3;
  subseq.cljs$lang$arity$5 = subseq__5;
  return subseq
}();
cljs.core.rsubseq = function() {
  var rsubseq = null;
  var rsubseq__3 = function(sc, test, key) {
    var include__10390 = cljs.core.mk_bound_fn.call(null, sc, test, key);
    if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._LT_, cljs.core._LT__EQ_]).call(null, test))) {
      var temp__4092__auto____10391 = cljs.core._sorted_seq_from.call(null, sc, key, false);
      if(cljs.core.truth_(temp__4092__auto____10391)) {
        var vec__10392__10393 = temp__4092__auto____10391;
        var e__10394 = cljs.core.nth.call(null, vec__10392__10393, 0, null);
        var s__10395 = vec__10392__10393;
        if(cljs.core.truth_(include__10390.call(null, e__10394))) {
          return s__10395
        }else {
          return cljs.core.next.call(null, s__10395)
        }
      }else {
        return null
      }
    }else {
      return cljs.core.take_while.call(null, include__10390, cljs.core._sorted_seq.call(null, sc, false))
    }
  };
  var rsubseq__5 = function(sc, start_test, start_key, end_test, end_key) {
    var temp__4092__auto____10396 = cljs.core._sorted_seq_from.call(null, sc, end_key, false);
    if(cljs.core.truth_(temp__4092__auto____10396)) {
      var vec__10397__10398 = temp__4092__auto____10396;
      var e__10399 = cljs.core.nth.call(null, vec__10397__10398, 0, null);
      var s__10400 = vec__10397__10398;
      return cljs.core.take_while.call(null, cljs.core.mk_bound_fn.call(null, sc, start_test, start_key), cljs.core.truth_(cljs.core.mk_bound_fn.call(null, sc, end_test, end_key).call(null, e__10399)) ? s__10400 : cljs.core.next.call(null, s__10400))
    }else {
      return null
    }
  };
  rsubseq = function(sc, start_test, start_key, end_test, end_key) {
    switch(arguments.length) {
      case 3:
        return rsubseq__3.call(this, sc, start_test, start_key);
      case 5:
        return rsubseq__5.call(this, sc, start_test, start_key, end_test, end_key)
    }
    throw"Invalid arity: " + arguments.length;
  };
  rsubseq.cljs$lang$arity$3 = rsubseq__3;
  rsubseq.cljs$lang$arity$5 = rsubseq__5;
  return rsubseq
}();
cljs.core.Range = function(meta, start, end, step, __hash) {
  this.meta = meta;
  this.start = start;
  this.end = end;
  this.step = step;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32375006
};
cljs.core.Range.cljs$lang$type = true;
cljs.core.Range.cljs$lang$ctorPrSeq = function(this__2260__auto__) {
  return cljs.core.list.call(null, "cljs.core/Range")
};
cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = function(rng) {
  var this__10401 = this;
  var h__2143__auto____10402 = this__10401.__hash;
  if(!(h__2143__auto____10402 == null)) {
    return h__2143__auto____10402
  }else {
    var h__2143__auto____10403 = cljs.core.hash_coll.call(null, rng);
    this__10401.__hash = h__2143__auto____10403;
    return h__2143__auto____10403
  }
};
cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = function(rng) {
  var this__10404 = this;
  if(this__10404.step > 0) {
    if(this__10404.start + this__10404.step < this__10404.end) {
      return new cljs.core.Range(this__10404.meta, this__10404.start + this__10404.step, this__10404.end, this__10404.step, null)
    }else {
      return null
    }
  }else {
    if(this__10404.start + this__10404.step > this__10404.end) {
      return new cljs.core.Range(this__10404.meta, this__10404.start + this__10404.step, this__10404.end, this__10404.step, null)
    }else {
      return null
    }
  }
};
cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = function(rng, o) {
  var this__10405 = this;
  return cljs.core.cons.call(null, o, rng)
};
cljs.core.Range.prototype.toString = function() {
  var this__10406 = this;
  var this__10407 = this;
  return cljs.core.pr_str.call(null, this__10407)
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = function(rng, f) {
  var this__10408 = this;
  return cljs.core.ci_reduce.call(null, rng, f)
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = function(rng, f, s) {
  var this__10409 = this;
  return cljs.core.ci_reduce.call(null, rng, f, s)
};
cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = function(rng) {
  var this__10410 = this;
  if(this__10410.step > 0) {
    if(this__10410.start < this__10410.end) {
      return rng
    }else {
      return null
    }
  }else {
    if(this__10410.start > this__10410.end) {
      return rng
    }else {
      return null
    }
  }
};
cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = function(rng) {
  var this__10411 = this;
  if(cljs.core.not.call(null, rng.cljs$core$ISeqable$_seq$arity$1(rng))) {
    return 0
  }else {
    return Math.ceil((this__10411.end - this__10411.start) / this__10411.step)
  }
};
cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = function(rng) {
  var this__10412 = this;
  return this__10412.start
};
cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = function(rng) {
  var this__10413 = this;
  if(!(rng.cljs$core$ISeqable$_seq$arity$1(rng) == null)) {
    return new cljs.core.Range(this__10413.meta, this__10413.start + this__10413.step, this__10413.end, this__10413.step, null)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(rng, other) {
  var this__10414 = this;
  return cljs.core.equiv_sequential.call(null, rng, other)
};
cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(rng, meta) {
  var this__10415 = this;
  return new cljs.core.Range(meta, this__10415.start, this__10415.end, this__10415.step, this__10415.__hash)
};
cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = function(rng) {
  var this__10416 = this;
  return this__10416.meta
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = function(rng, n) {
  var this__10417 = this;
  if(n < rng.cljs$core$ICounted$_count$arity$1(rng)) {
    return this__10417.start + n * this__10417.step
  }else {
    if(function() {
      var and__3941__auto____10418 = this__10417.start > this__10417.end;
      if(and__3941__auto____10418) {
        return this__10417.step === 0
      }else {
        return and__3941__auto____10418
      }
    }()) {
      return this__10417.start
    }else {
      throw new Error("Index out of bounds");
    }
  }
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = function(rng, n, not_found) {
  var this__10419 = this;
  if(n < rng.cljs$core$ICounted$_count$arity$1(rng)) {
    return this__10419.start + n * this__10419.step
  }else {
    if(function() {
      var and__3941__auto____10420 = this__10419.start > this__10419.end;
      if(and__3941__auto____10420) {
        return this__10419.step === 0
      }else {
        return and__3941__auto____10420
      }
    }()) {
      return this__10419.start
    }else {
      return not_found
    }
  }
};
cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(rng) {
  var this__10421 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, this__10421.meta)
};
cljs.core.Range;
cljs.core.range = function() {
  var range = null;
  var range__0 = function() {
    return range.call(null, 0, Number.MAX_VALUE, 1)
  };
  var range__1 = function(end) {
    return range.call(null, 0, end, 1)
  };
  var range__2 = function(start, end) {
    return range.call(null, start, end, 1)
  };
  var range__3 = function(start, end, step) {
    return new cljs.core.Range(null, start, end, step, null)
  };
  range = function(start, end, step) {
    switch(arguments.length) {
      case 0:
        return range__0.call(this);
      case 1:
        return range__1.call(this, start);
      case 2:
        return range__2.call(this, start, end);
      case 3:
        return range__3.call(this, start, end, step)
    }
    throw"Invalid arity: " + arguments.length;
  };
  range.cljs$lang$arity$0 = range__0;
  range.cljs$lang$arity$1 = range__1;
  range.cljs$lang$arity$2 = range__2;
  range.cljs$lang$arity$3 = range__3;
  return range
}();
cljs.core.take_nth = function take_nth(n, coll) {
  return new cljs.core.LazySeq(null, false, function() {
    var temp__4092__auto____10424 = cljs.core.seq.call(null, coll);
    if(temp__4092__auto____10424) {
      var s__10425 = temp__4092__auto____10424;
      return cljs.core.cons.call(null, cljs.core.first.call(null, s__10425), take_nth.call(null, n, cljs.core.drop.call(null, n, s__10425)))
    }else {
      return null
    }
  }, null)
};
cljs.core.split_with = function split_with(pred, coll) {
  return cljs.core.PersistentVector.fromArray([cljs.core.take_while.call(null, pred, coll), cljs.core.drop_while.call(null, pred, coll)], true)
};
cljs.core.partition_by = function partition_by(f, coll) {
  return new cljs.core.LazySeq(null, false, function() {
    var temp__4092__auto____10432 = cljs.core.seq.call(null, coll);
    if(temp__4092__auto____10432) {
      var s__10433 = temp__4092__auto____10432;
      var fst__10434 = cljs.core.first.call(null, s__10433);
      var fv__10435 = f.call(null, fst__10434);
      var run__10436 = cljs.core.cons.call(null, fst__10434, cljs.core.take_while.call(null, function(p1__10426_SHARP_) {
        return cljs.core._EQ_.call(null, fv__10435, f.call(null, p1__10426_SHARP_))
      }, cljs.core.next.call(null, s__10433)));
      return cljs.core.cons.call(null, run__10436, partition_by.call(null, f, cljs.core.seq.call(null, cljs.core.drop.call(null, cljs.core.count.call(null, run__10436), s__10433))))
    }else {
      return null
    }
  }, null)
};
cljs.core.frequencies = function frequencies(coll) {
  return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(counts, x) {
    return cljs.core.assoc_BANG_.call(null, counts, x, cljs.core._lookup.call(null, counts, x, 0) + 1)
  }, cljs.core.transient$.call(null, cljs.core.ObjMap.EMPTY), coll))
};
cljs.core.reductions = function() {
  var reductions = null;
  var reductions__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__4090__auto____10451 = cljs.core.seq.call(null, coll);
      if(temp__4090__auto____10451) {
        var s__10452 = temp__4090__auto____10451;
        return reductions.call(null, f, cljs.core.first.call(null, s__10452), cljs.core.rest.call(null, s__10452))
      }else {
        return cljs.core.list.call(null, f.call(null))
      }
    }, null)
  };
  var reductions__3 = function(f, init, coll) {
    return cljs.core.cons.call(null, init, new cljs.core.LazySeq(null, false, function() {
      var temp__4092__auto____10453 = cljs.core.seq.call(null, coll);
      if(temp__4092__auto____10453) {
        var s__10454 = temp__4092__auto____10453;
        return reductions.call(null, f, f.call(null, init, cljs.core.first.call(null, s__10454)), cljs.core.rest.call(null, s__10454))
      }else {
        return null
      }
    }, null))
  };
  reductions = function(f, init, coll) {
    switch(arguments.length) {
      case 2:
        return reductions__2.call(this, f, init);
      case 3:
        return reductions__3.call(this, f, init, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  reductions.cljs$lang$arity$2 = reductions__2;
  reductions.cljs$lang$arity$3 = reductions__3;
  return reductions
}();
cljs.core.juxt = function() {
  var juxt = null;
  var juxt__1 = function(f) {
    return function() {
      var G__10457 = null;
      var G__10457__0 = function() {
        return cljs.core.vector.call(null, f.call(null))
      };
      var G__10457__1 = function(x) {
        return cljs.core.vector.call(null, f.call(null, x))
      };
      var G__10457__2 = function(x, y) {
        return cljs.core.vector.call(null, f.call(null, x, y))
      };
      var G__10457__3 = function(x, y, z) {
        return cljs.core.vector.call(null, f.call(null, x, y, z))
      };
      var G__10457__4 = function() {
        var G__10458__delegate = function(x, y, z, args) {
          return cljs.core.vector.call(null, cljs.core.apply.call(null, f, x, y, z, args))
        };
        var G__10458 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__10458__delegate.call(this, x, y, z, args)
        };
        G__10458.cljs$lang$maxFixedArity = 3;
        G__10458.cljs$lang$applyTo = function(arglist__10459) {
          var x = cljs.core.first(arglist__10459);
          var y = cljs.core.first(cljs.core.next(arglist__10459));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__10459)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__10459)));
          return G__10458__delegate(x, y, z, args)
        };
        G__10458.cljs$lang$arity$variadic = G__10458__delegate;
        return G__10458
      }();
      G__10457 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__10457__0.call(this);
          case 1:
            return G__10457__1.call(this, x);
          case 2:
            return G__10457__2.call(this, x, y);
          case 3:
            return G__10457__3.call(this, x, y, z);
          default:
            return G__10457__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__10457.cljs$lang$maxFixedArity = 3;
      G__10457.cljs$lang$applyTo = G__10457__4.cljs$lang$applyTo;
      return G__10457
    }()
  };
  var juxt__2 = function(f, g) {
    return function() {
      var G__10460 = null;
      var G__10460__0 = function() {
        return cljs.core.vector.call(null, f.call(null), g.call(null))
      };
      var G__10460__1 = function(x) {
        return cljs.core.vector.call(null, f.call(null, x), g.call(null, x))
      };
      var G__10460__2 = function(x, y) {
        return cljs.core.vector.call(null, f.call(null, x, y), g.call(null, x, y))
      };
      var G__10460__3 = function(x, y, z) {
        return cljs.core.vector.call(null, f.call(null, x, y, z), g.call(null, x, y, z))
      };
      var G__10460__4 = function() {
        var G__10461__delegate = function(x, y, z, args) {
          return cljs.core.vector.call(null, cljs.core.apply.call(null, f, x, y, z, args), cljs.core.apply.call(null, g, x, y, z, args))
        };
        var G__10461 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__10461__delegate.call(this, x, y, z, args)
        };
        G__10461.cljs$lang$maxFixedArity = 3;
        G__10461.cljs$lang$applyTo = function(arglist__10462) {
          var x = cljs.core.first(arglist__10462);
          var y = cljs.core.first(cljs.core.next(arglist__10462));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__10462)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__10462)));
          return G__10461__delegate(x, y, z, args)
        };
        G__10461.cljs$lang$arity$variadic = G__10461__delegate;
        return G__10461
      }();
      G__10460 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__10460__0.call(this);
          case 1:
            return G__10460__1.call(this, x);
          case 2:
            return G__10460__2.call(this, x, y);
          case 3:
            return G__10460__3.call(this, x, y, z);
          default:
            return G__10460__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__10460.cljs$lang$maxFixedArity = 3;
      G__10460.cljs$lang$applyTo = G__10460__4.cljs$lang$applyTo;
      return G__10460
    }()
  };
  var juxt__3 = function(f, g, h) {
    return function() {
      var G__10463 = null;
      var G__10463__0 = function() {
        return cljs.core.vector.call(null, f.call(null), g.call(null), h.call(null))
      };
      var G__10463__1 = function(x) {
        return cljs.core.vector.call(null, f.call(null, x), g.call(null, x), h.call(null, x))
      };
      var G__10463__2 = function(x, y) {
        return cljs.core.vector.call(null, f.call(null, x, y), g.call(null, x, y), h.call(null, x, y))
      };
      var G__10463__3 = function(x, y, z) {
        return cljs.core.vector.call(null, f.call(null, x, y, z), g.call(null, x, y, z), h.call(null, x, y, z))
      };
      var G__10463__4 = function() {
        var G__10464__delegate = function(x, y, z, args) {
          return cljs.core.vector.call(null, cljs.core.apply.call(null, f, x, y, z, args), cljs.core.apply.call(null, g, x, y, z, args), cljs.core.apply.call(null, h, x, y, z, args))
        };
        var G__10464 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__10464__delegate.call(this, x, y, z, args)
        };
        G__10464.cljs$lang$maxFixedArity = 3;
        G__10464.cljs$lang$applyTo = function(arglist__10465) {
          var x = cljs.core.first(arglist__10465);
          var y = cljs.core.first(cljs.core.next(arglist__10465));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__10465)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__10465)));
          return G__10464__delegate(x, y, z, args)
        };
        G__10464.cljs$lang$arity$variadic = G__10464__delegate;
        return G__10464
      }();
      G__10463 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__10463__0.call(this);
          case 1:
            return G__10463__1.call(this, x);
          case 2:
            return G__10463__2.call(this, x, y);
          case 3:
            return G__10463__3.call(this, x, y, z);
          default:
            return G__10463__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__10463.cljs$lang$maxFixedArity = 3;
      G__10463.cljs$lang$applyTo = G__10463__4.cljs$lang$applyTo;
      return G__10463
    }()
  };
  var juxt__4 = function() {
    var G__10466__delegate = function(f, g, h, fs) {
      var fs__10456 = cljs.core.list_STAR_.call(null, f, g, h, fs);
      return function() {
        var G__10467 = null;
        var G__10467__0 = function() {
          return cljs.core.reduce.call(null, function(p1__10437_SHARP_, p2__10438_SHARP_) {
            return cljs.core.conj.call(null, p1__10437_SHARP_, p2__10438_SHARP_.call(null))
          }, cljs.core.PersistentVector.EMPTY, fs__10456)
        };
        var G__10467__1 = function(x) {
          return cljs.core.reduce.call(null, function(p1__10439_SHARP_, p2__10440_SHARP_) {
            return cljs.core.conj.call(null, p1__10439_SHARP_, p2__10440_SHARP_.call(null, x))
          }, cljs.core.PersistentVector.EMPTY, fs__10456)
        };
        var G__10467__2 = function(x, y) {
          return cljs.core.reduce.call(null, function(p1__10441_SHARP_, p2__10442_SHARP_) {
            return cljs.core.conj.call(null, p1__10441_SHARP_, p2__10442_SHARP_.call(null, x, y))
          }, cljs.core.PersistentVector.EMPTY, fs__10456)
        };
        var G__10467__3 = function(x, y, z) {
          return cljs.core.reduce.call(null, function(p1__10443_SHARP_, p2__10444_SHARP_) {
            return cljs.core.conj.call(null, p1__10443_SHARP_, p2__10444_SHARP_.call(null, x, y, z))
          }, cljs.core.PersistentVector.EMPTY, fs__10456)
        };
        var G__10467__4 = function() {
          var G__10468__delegate = function(x, y, z, args) {
            return cljs.core.reduce.call(null, function(p1__10445_SHARP_, p2__10446_SHARP_) {
              return cljs.core.conj.call(null, p1__10445_SHARP_, cljs.core.apply.call(null, p2__10446_SHARP_, x, y, z, args))
            }, cljs.core.PersistentVector.EMPTY, fs__10456)
          };
          var G__10468 = function(x, y, z, var_args) {
            var args = null;
            if(goog.isDef(var_args)) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
            }
            return G__10468__delegate.call(this, x, y, z, args)
          };
          G__10468.cljs$lang$maxFixedArity = 3;
          G__10468.cljs$lang$applyTo = function(arglist__10469) {
            var x = cljs.core.first(arglist__10469);
            var y = cljs.core.first(cljs.core.next(arglist__10469));
            var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__10469)));
            var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__10469)));
            return G__10468__delegate(x, y, z, args)
          };
          G__10468.cljs$lang$arity$variadic = G__10468__delegate;
          return G__10468
        }();
        G__10467 = function(x, y, z, var_args) {
          var args = var_args;
          switch(arguments.length) {
            case 0:
              return G__10467__0.call(this);
            case 1:
              return G__10467__1.call(this, x);
            case 2:
              return G__10467__2.call(this, x, y);
            case 3:
              return G__10467__3.call(this, x, y, z);
            default:
              return G__10467__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
          }
          throw"Invalid arity: " + arguments.length;
        };
        G__10467.cljs$lang$maxFixedArity = 3;
        G__10467.cljs$lang$applyTo = G__10467__4.cljs$lang$applyTo;
        return G__10467
      }()
    };
    var G__10466 = function(f, g, h, var_args) {
      var fs = null;
      if(goog.isDef(var_args)) {
        fs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__10466__delegate.call(this, f, g, h, fs)
    };
    G__10466.cljs$lang$maxFixedArity = 3;
    G__10466.cljs$lang$applyTo = function(arglist__10470) {
      var f = cljs.core.first(arglist__10470);
      var g = cljs.core.first(cljs.core.next(arglist__10470));
      var h = cljs.core.first(cljs.core.next(cljs.core.next(arglist__10470)));
      var fs = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__10470)));
      return G__10466__delegate(f, g, h, fs)
    };
    G__10466.cljs$lang$arity$variadic = G__10466__delegate;
    return G__10466
  }();
  juxt = function(f, g, h, var_args) {
    var fs = var_args;
    switch(arguments.length) {
      case 1:
        return juxt__1.call(this, f);
      case 2:
        return juxt__2.call(this, f, g);
      case 3:
        return juxt__3.call(this, f, g, h);
      default:
        return juxt__4.cljs$lang$arity$variadic(f, g, h, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  juxt.cljs$lang$maxFixedArity = 3;
  juxt.cljs$lang$applyTo = juxt__4.cljs$lang$applyTo;
  juxt.cljs$lang$arity$1 = juxt__1;
  juxt.cljs$lang$arity$2 = juxt__2;
  juxt.cljs$lang$arity$3 = juxt__3;
  juxt.cljs$lang$arity$variadic = juxt__4.cljs$lang$arity$variadic;
  return juxt
}();
cljs.core.dorun = function() {
  var dorun = null;
  var dorun__1 = function(coll) {
    while(true) {
      if(cljs.core.seq.call(null, coll)) {
        var G__10473 = cljs.core.next.call(null, coll);
        coll = G__10473;
        continue
      }else {
        return null
      }
      break
    }
  };
  var dorun__2 = function(n, coll) {
    while(true) {
      if(cljs.core.truth_(function() {
        var and__3941__auto____10472 = cljs.core.seq.call(null, coll);
        if(and__3941__auto____10472) {
          return n > 0
        }else {
          return and__3941__auto____10472
        }
      }())) {
        var G__10474 = n - 1;
        var G__10475 = cljs.core.next.call(null, coll);
        n = G__10474;
        coll = G__10475;
        continue
      }else {
        return null
      }
      break
    }
  };
  dorun = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return dorun__1.call(this, n);
      case 2:
        return dorun__2.call(this, n, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  dorun.cljs$lang$arity$1 = dorun__1;
  dorun.cljs$lang$arity$2 = dorun__2;
  return dorun
}();
cljs.core.doall = function() {
  var doall = null;
  var doall__1 = function(coll) {
    cljs.core.dorun.call(null, coll);
    return coll
  };
  var doall__2 = function(n, coll) {
    cljs.core.dorun.call(null, n, coll);
    return coll
  };
  doall = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return doall__1.call(this, n);
      case 2:
        return doall__2.call(this, n, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  doall.cljs$lang$arity$1 = doall__1;
  doall.cljs$lang$arity$2 = doall__2;
  return doall
}();
cljs.core.regexp_QMARK_ = function regexp_QMARK_(o) {
  return o instanceof RegExp
};
cljs.core.re_matches = function re_matches(re, s) {
  var matches__10477 = re.exec(s);
  if(cljs.core._EQ_.call(null, cljs.core.first.call(null, matches__10477), s)) {
    if(cljs.core.count.call(null, matches__10477) === 1) {
      return cljs.core.first.call(null, matches__10477)
    }else {
      return cljs.core.vec.call(null, matches__10477)
    }
  }else {
    return null
  }
};
cljs.core.re_find = function re_find(re, s) {
  var matches__10479 = re.exec(s);
  if(matches__10479 == null) {
    return null
  }else {
    if(cljs.core.count.call(null, matches__10479) === 1) {
      return cljs.core.first.call(null, matches__10479)
    }else {
      return cljs.core.vec.call(null, matches__10479)
    }
  }
};
cljs.core.re_seq = function re_seq(re, s) {
  var match_data__10484 = cljs.core.re_find.call(null, re, s);
  var match_idx__10485 = s.search(re);
  var match_str__10486 = cljs.core.coll_QMARK_.call(null, match_data__10484) ? cljs.core.first.call(null, match_data__10484) : match_data__10484;
  var post_match__10487 = cljs.core.subs.call(null, s, match_idx__10485 + cljs.core.count.call(null, match_str__10486));
  if(cljs.core.truth_(match_data__10484)) {
    return new cljs.core.LazySeq(null, false, function() {
      return cljs.core.cons.call(null, match_data__10484, re_seq.call(null, re, post_match__10487))
    }, null)
  }else {
    return null
  }
};
cljs.core.re_pattern = function re_pattern(s) {
  var vec__10494__10495 = cljs.core.re_find.call(null, /^(?:\(\?([idmsux]*)\))?(.*)/, s);
  var ___10496 = cljs.core.nth.call(null, vec__10494__10495, 0, null);
  var flags__10497 = cljs.core.nth.call(null, vec__10494__10495, 1, null);
  var pattern__10498 = cljs.core.nth.call(null, vec__10494__10495, 2, null);
  return new RegExp(pattern__10498, flags__10497)
};
cljs.core.pr_sequential = function pr_sequential(print_one, begin, sep, end, opts, coll) {
  return cljs.core.concat.call(null, cljs.core.PersistentVector.fromArray([begin], true), cljs.core.flatten1.call(null, cljs.core.interpose.call(null, cljs.core.PersistentVector.fromArray([sep], true), cljs.core.map.call(null, function(p1__10488_SHARP_) {
    return print_one.call(null, p1__10488_SHARP_, opts)
  }, coll))), cljs.core.PersistentVector.fromArray([end], true))
};
cljs.core.string_print = function string_print(x) {
  cljs.core._STAR_print_fn_STAR_.call(null, x);
  return null
};
cljs.core.flush = function flush() {
  return null
};
cljs.core.pr_seq = function pr_seq(obj, opts) {
  if(obj == null) {
    return cljs.core.list.call(null, "nil")
  }else {
    if(void 0 === obj) {
      return cljs.core.list.call(null, "#<undefined>")
    }else {
      if("\ufdd0'else") {
        return cljs.core.concat.call(null, cljs.core.truth_(function() {
          var and__3941__auto____10508 = cljs.core._lookup.call(null, opts, "\ufdd0'meta", null);
          if(cljs.core.truth_(and__3941__auto____10508)) {
            var and__3941__auto____10512 = function() {
              var G__10509__10510 = obj;
              if(G__10509__10510) {
                if(function() {
                  var or__3943__auto____10511 = G__10509__10510.cljs$lang$protocol_mask$partition0$ & 131072;
                  if(or__3943__auto____10511) {
                    return or__3943__auto____10511
                  }else {
                    return G__10509__10510.cljs$core$IMeta$
                  }
                }()) {
                  return true
                }else {
                  if(!G__10509__10510.cljs$lang$protocol_mask$partition0$) {
                    return cljs.core.type_satisfies_.call(null, cljs.core.IMeta, G__10509__10510)
                  }else {
                    return false
                  }
                }
              }else {
                return cljs.core.type_satisfies_.call(null, cljs.core.IMeta, G__10509__10510)
              }
            }();
            if(cljs.core.truth_(and__3941__auto____10512)) {
              return cljs.core.meta.call(null, obj)
            }else {
              return and__3941__auto____10512
            }
          }else {
            return and__3941__auto____10508
          }
        }()) ? cljs.core.concat.call(null, cljs.core.PersistentVector.fromArray(["^"], true), pr_seq.call(null, cljs.core.meta.call(null, obj), opts), cljs.core.PersistentVector.fromArray([" "], true)) : null, function() {
          var and__3941__auto____10513 = !(obj == null);
          if(and__3941__auto____10513) {
            return obj.cljs$lang$type
          }else {
            return and__3941__auto____10513
          }
        }() ? obj.cljs$lang$ctorPrSeq(obj) : function() {
          var G__10514__10515 = obj;
          if(G__10514__10515) {
            if(function() {
              var or__3943__auto____10516 = G__10514__10515.cljs$lang$protocol_mask$partition0$ & 536870912;
              if(or__3943__auto____10516) {
                return or__3943__auto____10516
              }else {
                return G__10514__10515.cljs$core$IPrintable$
              }
            }()) {
              return true
            }else {
              if(!G__10514__10515.cljs$lang$protocol_mask$partition0$) {
                return cljs.core.type_satisfies_.call(null, cljs.core.IPrintable, G__10514__10515)
              }else {
                return false
              }
            }
          }else {
            return cljs.core.type_satisfies_.call(null, cljs.core.IPrintable, G__10514__10515)
          }
        }() ? cljs.core._pr_seq.call(null, obj, opts) : cljs.core.truth_(cljs.core.regexp_QMARK_.call(null, obj)) ? cljs.core.list.call(null, '#"', obj.source, '"') : "\ufdd0'else" ? cljs.core.list.call(null, "#<", [cljs.core.str(obj)].join(""), ">") : null)
      }else {
        return null
      }
    }
  }
};
cljs.core.pr_sb = function pr_sb(objs, opts) {
  var sb__10536 = new goog.string.StringBuffer;
  var G__10537__10538 = cljs.core.seq.call(null, cljs.core.pr_seq.call(null, cljs.core.first.call(null, objs), opts));
  if(G__10537__10538) {
    var string__10539 = cljs.core.first.call(null, G__10537__10538);
    var G__10537__10540 = G__10537__10538;
    while(true) {
      sb__10536.append(string__10539);
      var temp__4092__auto____10541 = cljs.core.next.call(null, G__10537__10540);
      if(temp__4092__auto____10541) {
        var G__10537__10542 = temp__4092__auto____10541;
        var G__10555 = cljs.core.first.call(null, G__10537__10542);
        var G__10556 = G__10537__10542;
        string__10539 = G__10555;
        G__10537__10540 = G__10556;
        continue
      }else {
      }
      break
    }
  }else {
  }
  var G__10543__10544 = cljs.core.seq.call(null, cljs.core.next.call(null, objs));
  if(G__10543__10544) {
    var obj__10545 = cljs.core.first.call(null, G__10543__10544);
    var G__10543__10546 = G__10543__10544;
    while(true) {
      sb__10536.append(" ");
      var G__10547__10548 = cljs.core.seq.call(null, cljs.core.pr_seq.call(null, obj__10545, opts));
      if(G__10547__10548) {
        var string__10549 = cljs.core.first.call(null, G__10547__10548);
        var G__10547__10550 = G__10547__10548;
        while(true) {
          sb__10536.append(string__10549);
          var temp__4092__auto____10551 = cljs.core.next.call(null, G__10547__10550);
          if(temp__4092__auto____10551) {
            var G__10547__10552 = temp__4092__auto____10551;
            var G__10557 = cljs.core.first.call(null, G__10547__10552);
            var G__10558 = G__10547__10552;
            string__10549 = G__10557;
            G__10547__10550 = G__10558;
            continue
          }else {
          }
          break
        }
      }else {
      }
      var temp__4092__auto____10553 = cljs.core.next.call(null, G__10543__10546);
      if(temp__4092__auto____10553) {
        var G__10543__10554 = temp__4092__auto____10553;
        var G__10559 = cljs.core.first.call(null, G__10543__10554);
        var G__10560 = G__10543__10554;
        obj__10545 = G__10559;
        G__10543__10546 = G__10560;
        continue
      }else {
      }
      break
    }
  }else {
  }
  return sb__10536
};
cljs.core.pr_str_with_opts = function pr_str_with_opts(objs, opts) {
  return[cljs.core.str(cljs.core.pr_sb.call(null, objs, opts))].join("")
};
cljs.core.prn_str_with_opts = function prn_str_with_opts(objs, opts) {
  var sb__10562 = cljs.core.pr_sb.call(null, objs, opts);
  sb__10562.append("\n");
  return[cljs.core.str(sb__10562)].join("")
};
cljs.core.pr_with_opts = function pr_with_opts(objs, opts) {
  var G__10581__10582 = cljs.core.seq.call(null, cljs.core.pr_seq.call(null, cljs.core.first.call(null, objs), opts));
  if(G__10581__10582) {
    var string__10583 = cljs.core.first.call(null, G__10581__10582);
    var G__10581__10584 = G__10581__10582;
    while(true) {
      cljs.core.string_print.call(null, string__10583);
      var temp__4092__auto____10585 = cljs.core.next.call(null, G__10581__10584);
      if(temp__4092__auto____10585) {
        var G__10581__10586 = temp__4092__auto____10585;
        var G__10599 = cljs.core.first.call(null, G__10581__10586);
        var G__10600 = G__10581__10586;
        string__10583 = G__10599;
        G__10581__10584 = G__10600;
        continue
      }else {
      }
      break
    }
  }else {
  }
  var G__10587__10588 = cljs.core.seq.call(null, cljs.core.next.call(null, objs));
  if(G__10587__10588) {
    var obj__10589 = cljs.core.first.call(null, G__10587__10588);
    var G__10587__10590 = G__10587__10588;
    while(true) {
      cljs.core.string_print.call(null, " ");
      var G__10591__10592 = cljs.core.seq.call(null, cljs.core.pr_seq.call(null, obj__10589, opts));
      if(G__10591__10592) {
        var string__10593 = cljs.core.first.call(null, G__10591__10592);
        var G__10591__10594 = G__10591__10592;
        while(true) {
          cljs.core.string_print.call(null, string__10593);
          var temp__4092__auto____10595 = cljs.core.next.call(null, G__10591__10594);
          if(temp__4092__auto____10595) {
            var G__10591__10596 = temp__4092__auto____10595;
            var G__10601 = cljs.core.first.call(null, G__10591__10596);
            var G__10602 = G__10591__10596;
            string__10593 = G__10601;
            G__10591__10594 = G__10602;
            continue
          }else {
          }
          break
        }
      }else {
      }
      var temp__4092__auto____10597 = cljs.core.next.call(null, G__10587__10590);
      if(temp__4092__auto____10597) {
        var G__10587__10598 = temp__4092__auto____10597;
        var G__10603 = cljs.core.first.call(null, G__10587__10598);
        var G__10604 = G__10587__10598;
        obj__10589 = G__10603;
        G__10587__10590 = G__10604;
        continue
      }else {
        return null
      }
      break
    }
  }else {
    return null
  }
};
cljs.core.newline = function newline(opts) {
  cljs.core.string_print.call(null, "\n");
  if(cljs.core.truth_(cljs.core._lookup.call(null, opts, "\ufdd0'flush-on-newline", null))) {
    return cljs.core.flush.call(null)
  }else {
    return null
  }
};
cljs.core._STAR_flush_on_newline_STAR_ = true;
cljs.core._STAR_print_readably_STAR_ = true;
cljs.core._STAR_print_meta_STAR_ = false;
cljs.core._STAR_print_dup_STAR_ = false;
cljs.core.pr_opts = function pr_opts() {
  return cljs.core.ObjMap.fromObject(["\ufdd0'flush-on-newline", "\ufdd0'readably", "\ufdd0'meta", "\ufdd0'dup"], {"\ufdd0'flush-on-newline":cljs.core._STAR_flush_on_newline_STAR_, "\ufdd0'readably":cljs.core._STAR_print_readably_STAR_, "\ufdd0'meta":cljs.core._STAR_print_meta_STAR_, "\ufdd0'dup":cljs.core._STAR_print_dup_STAR_})
};
cljs.core.pr_str = function() {
  var pr_str__delegate = function(objs) {
    return cljs.core.pr_str_with_opts.call(null, objs, cljs.core.pr_opts.call(null))
  };
  var pr_str = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return pr_str__delegate.call(this, objs)
  };
  pr_str.cljs$lang$maxFixedArity = 0;
  pr_str.cljs$lang$applyTo = function(arglist__10605) {
    var objs = cljs.core.seq(arglist__10605);
    return pr_str__delegate(objs)
  };
  pr_str.cljs$lang$arity$variadic = pr_str__delegate;
  return pr_str
}();
cljs.core.prn_str = function() {
  var prn_str__delegate = function(objs) {
    return cljs.core.prn_str_with_opts.call(null, objs, cljs.core.pr_opts.call(null))
  };
  var prn_str = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return prn_str__delegate.call(this, objs)
  };
  prn_str.cljs$lang$maxFixedArity = 0;
  prn_str.cljs$lang$applyTo = function(arglist__10606) {
    var objs = cljs.core.seq(arglist__10606);
    return prn_str__delegate(objs)
  };
  prn_str.cljs$lang$arity$variadic = prn_str__delegate;
  return prn_str
}();
cljs.core.pr = function() {
  var pr__delegate = function(objs) {
    return cljs.core.pr_with_opts.call(null, objs, cljs.core.pr_opts.call(null))
  };
  var pr = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return pr__delegate.call(this, objs)
  };
  pr.cljs$lang$maxFixedArity = 0;
  pr.cljs$lang$applyTo = function(arglist__10607) {
    var objs = cljs.core.seq(arglist__10607);
    return pr__delegate(objs)
  };
  pr.cljs$lang$arity$variadic = pr__delegate;
  return pr
}();
cljs.core.print = function() {
  var cljs_core_print__delegate = function(objs) {
    return cljs.core.pr_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), "\ufdd0'readably", false))
  };
  var cljs_core_print = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return cljs_core_print__delegate.call(this, objs)
  };
  cljs_core_print.cljs$lang$maxFixedArity = 0;
  cljs_core_print.cljs$lang$applyTo = function(arglist__10608) {
    var objs = cljs.core.seq(arglist__10608);
    return cljs_core_print__delegate(objs)
  };
  cljs_core_print.cljs$lang$arity$variadic = cljs_core_print__delegate;
  return cljs_core_print
}();
cljs.core.print_str = function() {
  var print_str__delegate = function(objs) {
    return cljs.core.pr_str_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), "\ufdd0'readably", false))
  };
  var print_str = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return print_str__delegate.call(this, objs)
  };
  print_str.cljs$lang$maxFixedArity = 0;
  print_str.cljs$lang$applyTo = function(arglist__10609) {
    var objs = cljs.core.seq(arglist__10609);
    return print_str__delegate(objs)
  };
  print_str.cljs$lang$arity$variadic = print_str__delegate;
  return print_str
}();
cljs.core.println = function() {
  var println__delegate = function(objs) {
    cljs.core.pr_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), "\ufdd0'readably", false));
    return cljs.core.newline.call(null, cljs.core.pr_opts.call(null))
  };
  var println = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return println__delegate.call(this, objs)
  };
  println.cljs$lang$maxFixedArity = 0;
  println.cljs$lang$applyTo = function(arglist__10610) {
    var objs = cljs.core.seq(arglist__10610);
    return println__delegate(objs)
  };
  println.cljs$lang$arity$variadic = println__delegate;
  return println
}();
cljs.core.println_str = function() {
  var println_str__delegate = function(objs) {
    return cljs.core.prn_str_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), "\ufdd0'readably", false))
  };
  var println_str = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return println_str__delegate.call(this, objs)
  };
  println_str.cljs$lang$maxFixedArity = 0;
  println_str.cljs$lang$applyTo = function(arglist__10611) {
    var objs = cljs.core.seq(arglist__10611);
    return println_str__delegate(objs)
  };
  println_str.cljs$lang$arity$variadic = println_str__delegate;
  return println_str
}();
cljs.core.prn = function() {
  var prn__delegate = function(objs) {
    cljs.core.pr_with_opts.call(null, objs, cljs.core.pr_opts.call(null));
    return cljs.core.newline.call(null, cljs.core.pr_opts.call(null))
  };
  var prn = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return prn__delegate.call(this, objs)
  };
  prn.cljs$lang$maxFixedArity = 0;
  prn.cljs$lang$applyTo = function(arglist__10612) {
    var objs = cljs.core.seq(arglist__10612);
    return prn__delegate(objs)
  };
  prn.cljs$lang$arity$variadic = prn__delegate;
  return prn
}();
cljs.core.printf = function() {
  var printf__delegate = function(fmt, args) {
    return cljs.core.print.call(null, cljs.core.apply.call(null, cljs.core.format, fmt, args))
  };
  var printf = function(fmt, var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return printf__delegate.call(this, fmt, args)
  };
  printf.cljs$lang$maxFixedArity = 1;
  printf.cljs$lang$applyTo = function(arglist__10613) {
    var fmt = cljs.core.first(arglist__10613);
    var args = cljs.core.rest(arglist__10613);
    return printf__delegate(fmt, args)
  };
  printf.cljs$lang$arity$variadic = printf__delegate;
  return printf
}();
cljs.core.HashMap.prototype.cljs$core$IPrintable$ = true;
cljs.core.HashMap.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  var pr_pair__10614 = function(keyval) {
    return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "", " ", "", opts, keyval)
  };
  return cljs.core.pr_sequential.call(null, pr_pair__10614, "{", ", ", "}", opts, coll)
};
cljs.core.IPrintable["number"] = true;
cljs.core._pr_seq["number"] = function(n, opts) {
  return cljs.core.list.call(null, [cljs.core.str(n)].join(""))
};
cljs.core.IndexedSeq.prototype.cljs$core$IPrintable$ = true;
cljs.core.IndexedSeq.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.Subvec.prototype.cljs$core$IPrintable$ = true;
cljs.core.Subvec.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "[", " ", "]", opts, coll)
};
cljs.core.ChunkedCons.prototype.cljs$core$IPrintable$ = true;
cljs.core.ChunkedCons.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  var pr_pair__10615 = function(keyval) {
    return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "", " ", "", opts, keyval)
  };
  return cljs.core.pr_sequential.call(null, pr_pair__10615, "{", ", ", "}", opts, coll)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  var pr_pair__10616 = function(keyval) {
    return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "", " ", "", opts, keyval)
  };
  return cljs.core.pr_sequential.call(null, pr_pair__10616, "{", ", ", "}", opts, coll)
};
cljs.core.PersistentQueue.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentQueue.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "#queue [", " ", "]", opts, cljs.core.seq.call(null, coll))
};
cljs.core.LazySeq.prototype.cljs$core$IPrintable$ = true;
cljs.core.LazySeq.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.RSeq.prototype.cljs$core$IPrintable$ = true;
cljs.core.RSeq.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "#{", " ", "}", opts, coll)
};
cljs.core.IPrintable["boolean"] = true;
cljs.core._pr_seq["boolean"] = function(bool, opts) {
  return cljs.core.list.call(null, [cljs.core.str(bool)].join(""))
};
cljs.core.IPrintable["string"] = true;
cljs.core._pr_seq["string"] = function(obj, opts) {
  if(cljs.core.keyword_QMARK_.call(null, obj)) {
    return cljs.core.list.call(null, [cljs.core.str(":"), cljs.core.str(function() {
      var temp__4092__auto____10617 = cljs.core.namespace.call(null, obj);
      if(cljs.core.truth_(temp__4092__auto____10617)) {
        var nspc__10618 = temp__4092__auto____10617;
        return[cljs.core.str(nspc__10618), cljs.core.str("/")].join("")
      }else {
        return null
      }
    }()), cljs.core.str(cljs.core.name.call(null, obj))].join(""))
  }else {
    if(cljs.core.symbol_QMARK_.call(null, obj)) {
      return cljs.core.list.call(null, [cljs.core.str(function() {
        var temp__4092__auto____10619 = cljs.core.namespace.call(null, obj);
        if(cljs.core.truth_(temp__4092__auto____10619)) {
          var nspc__10620 = temp__4092__auto____10619;
          return[cljs.core.str(nspc__10620), cljs.core.str("/")].join("")
        }else {
          return null
        }
      }()), cljs.core.str(cljs.core.name.call(null, obj))].join(""))
    }else {
      if("\ufdd0'else") {
        return cljs.core.list.call(null, cljs.core.truth_((new cljs.core.Keyword("\ufdd0'readably")).call(null, opts)) ? goog.string.quote(obj) : obj)
      }else {
        return null
      }
    }
  }
};
cljs.core.NodeSeq.prototype.cljs$core$IPrintable$ = true;
cljs.core.NodeSeq.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.RedNode.prototype.cljs$core$IPrintable$ = true;
cljs.core.RedNode.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "[", " ", "]", opts, coll)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintable$ = true;
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  var pr_pair__10621 = function(keyval) {
    return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "", " ", "", opts, keyval)
  };
  return cljs.core.pr_sequential.call(null, pr_pair__10621, "{", ", ", "}", opts, coll)
};
cljs.core.Vector.prototype.cljs$core$IPrintable$ = true;
cljs.core.Vector.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "[", " ", "]", opts, coll)
};
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "#{", " ", "}", opts, coll)
};
cljs.core.PersistentVector.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "[", " ", "]", opts, coll)
};
cljs.core.List.prototype.cljs$core$IPrintable$ = true;
cljs.core.List.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.IPrintable["array"] = true;
cljs.core._pr_seq["array"] = function(a, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "#<Array [", ", ", "]>", opts, a)
};
cljs.core.IPrintable["function"] = true;
cljs.core._pr_seq["function"] = function(this$) {
  return cljs.core.list.call(null, "#<", [cljs.core.str(this$)].join(""), ">")
};
cljs.core.EmptyList.prototype.cljs$core$IPrintable$ = true;
cljs.core.EmptyList.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.list.call(null, "()")
};
cljs.core.BlackNode.prototype.cljs$core$IPrintable$ = true;
cljs.core.BlackNode.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "[", " ", "]", opts, coll)
};
Date.prototype.cljs$core$IPrintable$ = true;
Date.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(d, _) {
  var normalize__10623 = function(n, len) {
    var ns__10622 = [cljs.core.str(n)].join("");
    while(true) {
      if(cljs.core.count.call(null, ns__10622) < len) {
        var G__10625 = [cljs.core.str("0"), cljs.core.str(ns__10622)].join("");
        ns__10622 = G__10625;
        continue
      }else {
        return ns__10622
      }
      break
    }
  };
  return cljs.core.list.call(null, [cljs.core.str('#inst "'), cljs.core.str(d.getUTCFullYear()), cljs.core.str("-"), cljs.core.str(normalize__10623.call(null, d.getUTCMonth() + 1, 2)), cljs.core.str("-"), cljs.core.str(normalize__10623.call(null, d.getUTCDate(), 2)), cljs.core.str("T"), cljs.core.str(normalize__10623.call(null, d.getUTCHours(), 2)), cljs.core.str(":"), cljs.core.str(normalize__10623.call(null, d.getUTCMinutes(), 2)), cljs.core.str(":"), cljs.core.str(normalize__10623.call(null, d.getUTCSeconds(), 
  2)), cljs.core.str("."), cljs.core.str(normalize__10623.call(null, d.getUTCMilliseconds(), 3)), cljs.core.str("-"), cljs.core.str('00:00"')].join(""))
};
cljs.core.Cons.prototype.cljs$core$IPrintable$ = true;
cljs.core.Cons.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.Range.prototype.cljs$core$IPrintable$ = true;
cljs.core.Range.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintable$ = true;
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.ObjMap.prototype.cljs$core$IPrintable$ = true;
cljs.core.ObjMap.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  var pr_pair__10624 = function(keyval) {
    return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "", " ", "", opts, keyval)
  };
  return cljs.core.pr_sequential.call(null, pr_pair__10624, "{", ", ", "}", opts, coll)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  return cljs.core.compare_indexed.call(null, x, y)
};
cljs.core.Atom = function(state, meta, validator, watches) {
  this.state = state;
  this.meta = meta;
  this.validator = validator;
  this.watches = watches;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2690809856
};
cljs.core.Atom.cljs$lang$type = true;
cljs.core.Atom.cljs$lang$ctorPrSeq = function(this__2260__auto__) {
  return cljs.core.list.call(null, "cljs.core/Atom")
};
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var this__10626 = this;
  return goog.getUid(this$)
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = function(this$, oldval, newval) {
  var this__10627 = this;
  var G__10628__10629 = cljs.core.seq.call(null, this__10627.watches);
  if(G__10628__10629) {
    var G__10631__10633 = cljs.core.first.call(null, G__10628__10629);
    var vec__10632__10634 = G__10631__10633;
    var key__10635 = cljs.core.nth.call(null, vec__10632__10634, 0, null);
    var f__10636 = cljs.core.nth.call(null, vec__10632__10634, 1, null);
    var G__10628__10637 = G__10628__10629;
    var G__10631__10638 = G__10631__10633;
    var G__10628__10639 = G__10628__10637;
    while(true) {
      var vec__10640__10641 = G__10631__10638;
      var key__10642 = cljs.core.nth.call(null, vec__10640__10641, 0, null);
      var f__10643 = cljs.core.nth.call(null, vec__10640__10641, 1, null);
      var G__10628__10644 = G__10628__10639;
      f__10643.call(null, key__10642, this$, oldval, newval);
      var temp__4092__auto____10645 = cljs.core.next.call(null, G__10628__10644);
      if(temp__4092__auto____10645) {
        var G__10628__10646 = temp__4092__auto____10645;
        var G__10653 = cljs.core.first.call(null, G__10628__10646);
        var G__10654 = G__10628__10646;
        G__10631__10638 = G__10653;
        G__10628__10639 = G__10654;
        continue
      }else {
        return null
      }
      break
    }
  }else {
    return null
  }
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = function(this$, key, f) {
  var this__10647 = this;
  return this$.watches = cljs.core.assoc.call(null, this__10647.watches, key, f)
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = function(this$, key) {
  var this__10648 = this;
  return this$.watches = cljs.core.dissoc.call(null, this__10648.watches, key)
};
cljs.core.Atom.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(a, opts) {
  var this__10649 = this;
  return cljs.core.concat.call(null, cljs.core.PersistentVector.fromArray(["#<Atom: "], true), cljs.core._pr_seq.call(null, this__10649.state, opts), ">")
};
cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var this__10650 = this;
  return this__10650.meta
};
cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var this__10651 = this;
  return this__10651.state
};
cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var this__10652 = this;
  return o === other
};
cljs.core.Atom;
cljs.core.atom = function() {
  var atom = null;
  var atom__1 = function(x) {
    return new cljs.core.Atom(x, null, null, null)
  };
  var atom__2 = function() {
    var G__10666__delegate = function(x, p__10655) {
      var map__10661__10662 = p__10655;
      var map__10661__10663 = cljs.core.seq_QMARK_.call(null, map__10661__10662) ? cljs.core.apply.call(null, cljs.core.hash_map, map__10661__10662) : map__10661__10662;
      var validator__10664 = cljs.core._lookup.call(null, map__10661__10663, "\ufdd0'validator", null);
      var meta__10665 = cljs.core._lookup.call(null, map__10661__10663, "\ufdd0'meta", null);
      return new cljs.core.Atom(x, meta__10665, validator__10664, null)
    };
    var G__10666 = function(x, var_args) {
      var p__10655 = null;
      if(goog.isDef(var_args)) {
        p__10655 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
      }
      return G__10666__delegate.call(this, x, p__10655)
    };
    G__10666.cljs$lang$maxFixedArity = 1;
    G__10666.cljs$lang$applyTo = function(arglist__10667) {
      var x = cljs.core.first(arglist__10667);
      var p__10655 = cljs.core.rest(arglist__10667);
      return G__10666__delegate(x, p__10655)
    };
    G__10666.cljs$lang$arity$variadic = G__10666__delegate;
    return G__10666
  }();
  atom = function(x, var_args) {
    var p__10655 = var_args;
    switch(arguments.length) {
      case 1:
        return atom__1.call(this, x);
      default:
        return atom__2.cljs$lang$arity$variadic(x, cljs.core.array_seq(arguments, 1))
    }
    throw"Invalid arity: " + arguments.length;
  };
  atom.cljs$lang$maxFixedArity = 1;
  atom.cljs$lang$applyTo = atom__2.cljs$lang$applyTo;
  atom.cljs$lang$arity$1 = atom__1;
  atom.cljs$lang$arity$variadic = atom__2.cljs$lang$arity$variadic;
  return atom
}();
cljs.core.reset_BANG_ = function reset_BANG_(a, new_value) {
  var temp__4092__auto____10671 = a.validator;
  if(cljs.core.truth_(temp__4092__auto____10671)) {
    var validate__10672 = temp__4092__auto____10671;
    if(cljs.core.truth_(validate__10672.call(null, new_value))) {
    }else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Validator rejected reference state"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.with_meta(cljs.core.list("\ufdd1'validate", "\ufdd1'new-value"), cljs.core.hash_map("\ufdd0'line", 6440, "\ufdd0'column", 13))))].join(""));
    }
  }else {
  }
  var old_value__10673 = a.state;
  a.state = new_value;
  cljs.core._notify_watches.call(null, a, old_value__10673, new_value);
  return new_value
};
cljs.core.swap_BANG_ = function() {
  var swap_BANG_ = null;
  var swap_BANG___2 = function(a, f) {
    return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state))
  };
  var swap_BANG___3 = function(a, f, x) {
    return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state, x))
  };
  var swap_BANG___4 = function(a, f, x, y) {
    return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state, x, y))
  };
  var swap_BANG___5 = function(a, f, x, y, z) {
    return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state, x, y, z))
  };
  var swap_BANG___6 = function() {
    var G__10674__delegate = function(a, f, x, y, z, more) {
      return cljs.core.reset_BANG_.call(null, a, cljs.core.apply.call(null, f, a.state, x, y, z, more))
    };
    var G__10674 = function(a, f, x, y, z, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 5), 0)
      }
      return G__10674__delegate.call(this, a, f, x, y, z, more)
    };
    G__10674.cljs$lang$maxFixedArity = 5;
    G__10674.cljs$lang$applyTo = function(arglist__10675) {
      var a = cljs.core.first(arglist__10675);
      var f = cljs.core.first(cljs.core.next(arglist__10675));
      var x = cljs.core.first(cljs.core.next(cljs.core.next(arglist__10675)));
      var y = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(arglist__10675))));
      var z = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(cljs.core.next(arglist__10675)))));
      var more = cljs.core.rest(cljs.core.next(cljs.core.next(cljs.core.next(cljs.core.next(arglist__10675)))));
      return G__10674__delegate(a, f, x, y, z, more)
    };
    G__10674.cljs$lang$arity$variadic = G__10674__delegate;
    return G__10674
  }();
  swap_BANG_ = function(a, f, x, y, z, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return swap_BANG___2.call(this, a, f);
      case 3:
        return swap_BANG___3.call(this, a, f, x);
      case 4:
        return swap_BANG___4.call(this, a, f, x, y);
      case 5:
        return swap_BANG___5.call(this, a, f, x, y, z);
      default:
        return swap_BANG___6.cljs$lang$arity$variadic(a, f, x, y, z, cljs.core.array_seq(arguments, 5))
    }
    throw"Invalid arity: " + arguments.length;
  };
  swap_BANG_.cljs$lang$maxFixedArity = 5;
  swap_BANG_.cljs$lang$applyTo = swap_BANG___6.cljs$lang$applyTo;
  swap_BANG_.cljs$lang$arity$2 = swap_BANG___2;
  swap_BANG_.cljs$lang$arity$3 = swap_BANG___3;
  swap_BANG_.cljs$lang$arity$4 = swap_BANG___4;
  swap_BANG_.cljs$lang$arity$5 = swap_BANG___5;
  swap_BANG_.cljs$lang$arity$variadic = swap_BANG___6.cljs$lang$arity$variadic;
  return swap_BANG_
}();
cljs.core.compare_and_set_BANG_ = function compare_and_set_BANG_(a, oldval, newval) {
  if(cljs.core._EQ_.call(null, a.state, oldval)) {
    cljs.core.reset_BANG_.call(null, a, newval);
    return true
  }else {
    return false
  }
};
cljs.core.deref = function deref(o) {
  return cljs.core._deref.call(null, o)
};
cljs.core.set_validator_BANG_ = function set_validator_BANG_(iref, val) {
  return iref.validator = val
};
cljs.core.get_validator = function get_validator(iref) {
  return iref.validator
};
cljs.core.alter_meta_BANG_ = function() {
  var alter_meta_BANG___delegate = function(iref, f, args) {
    return iref.meta = cljs.core.apply.call(null, f, iref.meta, args)
  };
  var alter_meta_BANG_ = function(iref, f, var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return alter_meta_BANG___delegate.call(this, iref, f, args)
  };
  alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
  alter_meta_BANG_.cljs$lang$applyTo = function(arglist__10676) {
    var iref = cljs.core.first(arglist__10676);
    var f = cljs.core.first(cljs.core.next(arglist__10676));
    var args = cljs.core.rest(cljs.core.next(arglist__10676));
    return alter_meta_BANG___delegate(iref, f, args)
  };
  alter_meta_BANG_.cljs$lang$arity$variadic = alter_meta_BANG___delegate;
  return alter_meta_BANG_
}();
cljs.core.reset_meta_BANG_ = function reset_meta_BANG_(iref, m) {
  return iref.meta = m
};
cljs.core.add_watch = function add_watch(iref, key, f) {
  return cljs.core._add_watch.call(null, iref, key, f)
};
cljs.core.remove_watch = function remove_watch(iref, key) {
  return cljs.core._remove_watch.call(null, iref, key)
};
cljs.core.gensym_counter = null;
cljs.core.gensym = function() {
  var gensym = null;
  var gensym__0 = function() {
    return gensym.call(null, "G__")
  };
  var gensym__1 = function(prefix_string) {
    if(cljs.core.gensym_counter == null) {
      cljs.core.gensym_counter = cljs.core.atom.call(null, 0)
    }else {
    }
    return cljs.core.symbol.call(null, [cljs.core.str(prefix_string), cljs.core.str(cljs.core.swap_BANG_.call(null, cljs.core.gensym_counter, cljs.core.inc))].join(""))
  };
  gensym = function(prefix_string) {
    switch(arguments.length) {
      case 0:
        return gensym__0.call(this);
      case 1:
        return gensym__1.call(this, prefix_string)
    }
    throw"Invalid arity: " + arguments.length;
  };
  gensym.cljs$lang$arity$0 = gensym__0;
  gensym.cljs$lang$arity$1 = gensym__1;
  return gensym
}();
cljs.core.fixture1 = 1;
cljs.core.fixture2 = 2;
cljs.core.Delay = function(state, f) {
  this.state = state;
  this.f = f;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 1073774592
};
cljs.core.Delay.cljs$lang$type = true;
cljs.core.Delay.cljs$lang$ctorPrSeq = function(this__2260__auto__) {
  return cljs.core.list.call(null, "cljs.core/Delay")
};
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = function(d) {
  var this__10677 = this;
  return(new cljs.core.Keyword("\ufdd0'done")).call(null, cljs.core.deref.call(null, this__10677.state))
};
cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var this__10678 = this;
  return(new cljs.core.Keyword("\ufdd0'value")).call(null, cljs.core.swap_BANG_.call(null, this__10678.state, function(p__10679) {
    var map__10680__10681 = p__10679;
    var map__10680__10682 = cljs.core.seq_QMARK_.call(null, map__10680__10681) ? cljs.core.apply.call(null, cljs.core.hash_map, map__10680__10681) : map__10680__10681;
    var curr_state__10683 = map__10680__10682;
    var done__10684 = cljs.core._lookup.call(null, map__10680__10682, "\ufdd0'done", null);
    if(cljs.core.truth_(done__10684)) {
      return curr_state__10683
    }else {
      return cljs.core.ObjMap.fromObject(["\ufdd0'done", "\ufdd0'value"], {"\ufdd0'done":true, "\ufdd0'value":this__10678.f.call(null)})
    }
  }))
};
cljs.core.Delay;
cljs.core.delay_QMARK_ = function delay_QMARK_(x) {
  return cljs.core.instance_QMARK_.call(null, cljs.core.Delay, x)
};
cljs.core.force = function force(x) {
  if(cljs.core.delay_QMARK_.call(null, x)) {
    return cljs.core.deref.call(null, x)
  }else {
    return x
  }
};
cljs.core.realized_QMARK_ = function realized_QMARK_(d) {
  return cljs.core._realized_QMARK_.call(null, d)
};
cljs.core.js__GT_clj = function() {
  var js__GT_clj__delegate = function(x, options) {
    var map__10713__10714 = options;
    var map__10713__10715 = cljs.core.seq_QMARK_.call(null, map__10713__10714) ? cljs.core.apply.call(null, cljs.core.hash_map, map__10713__10714) : map__10713__10714;
    var keywordize_keys__10716 = cljs.core._lookup.call(null, map__10713__10715, "\ufdd0'keywordize-keys", null);
    var keyfn__10717 = cljs.core.truth_(keywordize_keys__10716) ? cljs.core.keyword : cljs.core.str;
    var f__10740 = function thisfn(x) {
      if(cljs.core.seq_QMARK_.call(null, x)) {
        return cljs.core.doall.call(null, cljs.core.map.call(null, thisfn, x))
      }else {
        if(cljs.core.coll_QMARK_.call(null, x)) {
          return cljs.core.into.call(null, cljs.core.empty.call(null, x), cljs.core.map.call(null, thisfn, x))
        }else {
          if(cljs.core.truth_(goog.isArray(x))) {
            return cljs.core.vec.call(null, cljs.core.map.call(null, thisfn, x))
          }else {
            if(cljs.core.type.call(null, x) === Object) {
              return cljs.core.into.call(null, cljs.core.ObjMap.EMPTY, function() {
                var iter__2413__auto____10739 = function iter__10729(s__10730) {
                  return new cljs.core.LazySeq(null, false, function() {
                    var s__10730__10735 = s__10730;
                    while(true) {
                      var temp__4092__auto____10736 = cljs.core.seq.call(null, s__10730__10735);
                      if(temp__4092__auto____10736) {
                        var xs__4579__auto____10737 = temp__4092__auto____10736;
                        var k__10738 = cljs.core.first.call(null, xs__4579__auto____10737);
                        return cljs.core.cons.call(null, cljs.core.PersistentVector.fromArray([keyfn__10717.call(null, k__10738), thisfn.call(null, x[k__10738])], true), iter__10729.call(null, cljs.core.rest.call(null, s__10730__10735)))
                      }else {
                        return null
                      }
                      break
                    }
                  }, null)
                };
                return iter__2413__auto____10739.call(null, cljs.core.js_keys.call(null, x))
              }())
            }else {
              if("\ufdd0'else") {
                return x
              }else {
                return null
              }
            }
          }
        }
      }
    };
    return f__10740.call(null, x)
  };
  var js__GT_clj = function(x, var_args) {
    var options = null;
    if(goog.isDef(var_args)) {
      options = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return js__GT_clj__delegate.call(this, x, options)
  };
  js__GT_clj.cljs$lang$maxFixedArity = 1;
  js__GT_clj.cljs$lang$applyTo = function(arglist__10741) {
    var x = cljs.core.first(arglist__10741);
    var options = cljs.core.rest(arglist__10741);
    return js__GT_clj__delegate(x, options)
  };
  js__GT_clj.cljs$lang$arity$variadic = js__GT_clj__delegate;
  return js__GT_clj
}();
cljs.core.memoize = function memoize(f) {
  var mem__10746 = cljs.core.atom.call(null, cljs.core.ObjMap.EMPTY);
  return function() {
    var G__10750__delegate = function(args) {
      var temp__4090__auto____10747 = cljs.core._lookup.call(null, cljs.core.deref.call(null, mem__10746), args, null);
      if(cljs.core.truth_(temp__4090__auto____10747)) {
        var v__10748 = temp__4090__auto____10747;
        return v__10748
      }else {
        var ret__10749 = cljs.core.apply.call(null, f, args);
        cljs.core.swap_BANG_.call(null, mem__10746, cljs.core.assoc, args, ret__10749);
        return ret__10749
      }
    };
    var G__10750 = function(var_args) {
      var args = null;
      if(goog.isDef(var_args)) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
      }
      return G__10750__delegate.call(this, args)
    };
    G__10750.cljs$lang$maxFixedArity = 0;
    G__10750.cljs$lang$applyTo = function(arglist__10751) {
      var args = cljs.core.seq(arglist__10751);
      return G__10750__delegate(args)
    };
    G__10750.cljs$lang$arity$variadic = G__10750__delegate;
    return G__10750
  }()
};
cljs.core.trampoline = function() {
  var trampoline = null;
  var trampoline__1 = function(f) {
    while(true) {
      var ret__10753 = f.call(null);
      if(cljs.core.fn_QMARK_.call(null, ret__10753)) {
        var G__10754 = ret__10753;
        f = G__10754;
        continue
      }else {
        return ret__10753
      }
      break
    }
  };
  var trampoline__2 = function() {
    var G__10755__delegate = function(f, args) {
      return trampoline.call(null, function() {
        return cljs.core.apply.call(null, f, args)
      })
    };
    var G__10755 = function(f, var_args) {
      var args = null;
      if(goog.isDef(var_args)) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
      }
      return G__10755__delegate.call(this, f, args)
    };
    G__10755.cljs$lang$maxFixedArity = 1;
    G__10755.cljs$lang$applyTo = function(arglist__10756) {
      var f = cljs.core.first(arglist__10756);
      var args = cljs.core.rest(arglist__10756);
      return G__10755__delegate(f, args)
    };
    G__10755.cljs$lang$arity$variadic = G__10755__delegate;
    return G__10755
  }();
  trampoline = function(f, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 1:
        return trampoline__1.call(this, f);
      default:
        return trampoline__2.cljs$lang$arity$variadic(f, cljs.core.array_seq(arguments, 1))
    }
    throw"Invalid arity: " + arguments.length;
  };
  trampoline.cljs$lang$maxFixedArity = 1;
  trampoline.cljs$lang$applyTo = trampoline__2.cljs$lang$applyTo;
  trampoline.cljs$lang$arity$1 = trampoline__1;
  trampoline.cljs$lang$arity$variadic = trampoline__2.cljs$lang$arity$variadic;
  return trampoline
}();
cljs.core.rand = function() {
  var rand = null;
  var rand__0 = function() {
    return rand.call(null, 1)
  };
  var rand__1 = function(n) {
    return Math.random.call(null) * n
  };
  rand = function(n) {
    switch(arguments.length) {
      case 0:
        return rand__0.call(this);
      case 1:
        return rand__1.call(this, n)
    }
    throw"Invalid arity: " + arguments.length;
  };
  rand.cljs$lang$arity$0 = rand__0;
  rand.cljs$lang$arity$1 = rand__1;
  return rand
}();
cljs.core.rand_int = function rand_int(n) {
  return Math.floor.call(null, Math.random.call(null) * n)
};
cljs.core.rand_nth = function rand_nth(coll) {
  return cljs.core.nth.call(null, coll, cljs.core.rand_int.call(null, cljs.core.count.call(null, coll)))
};
cljs.core.group_by = function group_by(f, coll) {
  return cljs.core.reduce.call(null, function(ret, x) {
    var k__10758 = f.call(null, x);
    return cljs.core.assoc.call(null, ret, k__10758, cljs.core.conj.call(null, cljs.core._lookup.call(null, ret, k__10758, cljs.core.PersistentVector.EMPTY), x))
  }, cljs.core.ObjMap.EMPTY, coll)
};
cljs.core.make_hierarchy = function make_hierarchy() {
  return cljs.core.ObjMap.fromObject(["\ufdd0'parents", "\ufdd0'descendants", "\ufdd0'ancestors"], {"\ufdd0'parents":cljs.core.ObjMap.EMPTY, "\ufdd0'descendants":cljs.core.ObjMap.EMPTY, "\ufdd0'ancestors":cljs.core.ObjMap.EMPTY})
};
cljs.core.global_hierarchy = cljs.core.atom.call(null, cljs.core.make_hierarchy.call(null));
cljs.core.isa_QMARK_ = function() {
  var isa_QMARK_ = null;
  var isa_QMARK___2 = function(child, parent) {
    return isa_QMARK_.call(null, cljs.core.deref.call(null, cljs.core.global_hierarchy), child, parent)
  };
  var isa_QMARK___3 = function(h, child, parent) {
    var or__3943__auto____10767 = cljs.core._EQ_.call(null, child, parent);
    if(or__3943__auto____10767) {
      return or__3943__auto____10767
    }else {
      var or__3943__auto____10768 = cljs.core.contains_QMARK_.call(null, (new cljs.core.Keyword("\ufdd0'ancestors")).call(null, h).call(null, child), parent);
      if(or__3943__auto____10768) {
        return or__3943__auto____10768
      }else {
        var and__3941__auto____10769 = cljs.core.vector_QMARK_.call(null, parent);
        if(and__3941__auto____10769) {
          var and__3941__auto____10770 = cljs.core.vector_QMARK_.call(null, child);
          if(and__3941__auto____10770) {
            var and__3941__auto____10771 = cljs.core.count.call(null, parent) === cljs.core.count.call(null, child);
            if(and__3941__auto____10771) {
              var ret__10772 = true;
              var i__10773 = 0;
              while(true) {
                if(function() {
                  var or__3943__auto____10774 = cljs.core.not.call(null, ret__10772);
                  if(or__3943__auto____10774) {
                    return or__3943__auto____10774
                  }else {
                    return i__10773 === cljs.core.count.call(null, parent)
                  }
                }()) {
                  return ret__10772
                }else {
                  var G__10775 = isa_QMARK_.call(null, h, child.call(null, i__10773), parent.call(null, i__10773));
                  var G__10776 = i__10773 + 1;
                  ret__10772 = G__10775;
                  i__10773 = G__10776;
                  continue
                }
                break
              }
            }else {
              return and__3941__auto____10771
            }
          }else {
            return and__3941__auto____10770
          }
        }else {
          return and__3941__auto____10769
        }
      }
    }
  };
  isa_QMARK_ = function(h, child, parent) {
    switch(arguments.length) {
      case 2:
        return isa_QMARK___2.call(this, h, child);
      case 3:
        return isa_QMARK___3.call(this, h, child, parent)
    }
    throw"Invalid arity: " + arguments.length;
  };
  isa_QMARK_.cljs$lang$arity$2 = isa_QMARK___2;
  isa_QMARK_.cljs$lang$arity$3 = isa_QMARK___3;
  return isa_QMARK_
}();
cljs.core.parents = function() {
  var parents = null;
  var parents__1 = function(tag) {
    return parents.call(null, cljs.core.deref.call(null, cljs.core.global_hierarchy), tag)
  };
  var parents__2 = function(h, tag) {
    return cljs.core.not_empty.call(null, cljs.core._lookup.call(null, (new cljs.core.Keyword("\ufdd0'parents")).call(null, h), tag, null))
  };
  parents = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return parents__1.call(this, h);
      case 2:
        return parents__2.call(this, h, tag)
    }
    throw"Invalid arity: " + arguments.length;
  };
  parents.cljs$lang$arity$1 = parents__1;
  parents.cljs$lang$arity$2 = parents__2;
  return parents
}();
cljs.core.ancestors = function() {
  var ancestors = null;
  var ancestors__1 = function(tag) {
    return ancestors.call(null, cljs.core.deref.call(null, cljs.core.global_hierarchy), tag)
  };
  var ancestors__2 = function(h, tag) {
    return cljs.core.not_empty.call(null, cljs.core._lookup.call(null, (new cljs.core.Keyword("\ufdd0'ancestors")).call(null, h), tag, null))
  };
  ancestors = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return ancestors__1.call(this, h);
      case 2:
        return ancestors__2.call(this, h, tag)
    }
    throw"Invalid arity: " + arguments.length;
  };
  ancestors.cljs$lang$arity$1 = ancestors__1;
  ancestors.cljs$lang$arity$2 = ancestors__2;
  return ancestors
}();
cljs.core.descendants = function() {
  var descendants = null;
  var descendants__1 = function(tag) {
    return descendants.call(null, cljs.core.deref.call(null, cljs.core.global_hierarchy), tag)
  };
  var descendants__2 = function(h, tag) {
    return cljs.core.not_empty.call(null, cljs.core._lookup.call(null, (new cljs.core.Keyword("\ufdd0'descendants")).call(null, h), tag, null))
  };
  descendants = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return descendants__1.call(this, h);
      case 2:
        return descendants__2.call(this, h, tag)
    }
    throw"Invalid arity: " + arguments.length;
  };
  descendants.cljs$lang$arity$1 = descendants__1;
  descendants.cljs$lang$arity$2 = descendants__2;
  return descendants
}();
cljs.core.derive = function() {
  var derive = null;
  var derive__2 = function(tag, parent) {
    if(cljs.core.truth_(cljs.core.namespace.call(null, parent))) {
    }else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.with_meta(cljs.core.list("\ufdd1'namespace", "\ufdd1'parent"), cljs.core.hash_map("\ufdd0'line", 6724, "\ufdd0'column", 12))))].join(""));
    }
    cljs.core.swap_BANG_.call(null, cljs.core.global_hierarchy, derive, tag, parent);
    return null
  };
  var derive__3 = function(h, tag, parent) {
    if(cljs.core.not_EQ_.call(null, tag, parent)) {
    }else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.with_meta(cljs.core.list("\ufdd1'not=", "\ufdd1'tag", "\ufdd1'parent"), cljs.core.hash_map("\ufdd0'line", 6728, "\ufdd0'column", 12))))].join(""));
    }
    var tp__10785 = (new cljs.core.Keyword("\ufdd0'parents")).call(null, h);
    var td__10786 = (new cljs.core.Keyword("\ufdd0'descendants")).call(null, h);
    var ta__10787 = (new cljs.core.Keyword("\ufdd0'ancestors")).call(null, h);
    var tf__10788 = function(m, source, sources, target, targets) {
      return cljs.core.reduce.call(null, function(ret, k) {
        return cljs.core.assoc.call(null, ret, k, cljs.core.reduce.call(null, cljs.core.conj, cljs.core._lookup.call(null, targets, k, cljs.core.PersistentHashSet.EMPTY), cljs.core.cons.call(null, target, targets.call(null, target))))
      }, m, cljs.core.cons.call(null, source, sources.call(null, source)))
    };
    var or__3943__auto____10789 = cljs.core.contains_QMARK_.call(null, tp__10785.call(null, tag), parent) ? null : function() {
      if(cljs.core.contains_QMARK_.call(null, ta__10787.call(null, tag), parent)) {
        throw new Error([cljs.core.str(tag), cljs.core.str("already has"), cljs.core.str(parent), cljs.core.str("as ancestor")].join(""));
      }else {
      }
      if(cljs.core.contains_QMARK_.call(null, ta__10787.call(null, parent), tag)) {
        throw new Error([cljs.core.str("Cyclic derivation:"), cljs.core.str(parent), cljs.core.str("has"), cljs.core.str(tag), cljs.core.str("as ancestor")].join(""));
      }else {
      }
      return cljs.core.ObjMap.fromObject(["\ufdd0'parents", "\ufdd0'ancestors", "\ufdd0'descendants"], {"\ufdd0'parents":cljs.core.assoc.call(null, (new cljs.core.Keyword("\ufdd0'parents")).call(null, h), tag, cljs.core.conj.call(null, cljs.core._lookup.call(null, tp__10785, tag, cljs.core.PersistentHashSet.EMPTY), parent)), "\ufdd0'ancestors":tf__10788.call(null, (new cljs.core.Keyword("\ufdd0'ancestors")).call(null, h), tag, td__10786, parent, ta__10787), "\ufdd0'descendants":tf__10788.call(null, 
      (new cljs.core.Keyword("\ufdd0'descendants")).call(null, h), parent, ta__10787, tag, td__10786)})
    }();
    if(cljs.core.truth_(or__3943__auto____10789)) {
      return or__3943__auto____10789
    }else {
      return h
    }
  };
  derive = function(h, tag, parent) {
    switch(arguments.length) {
      case 2:
        return derive__2.call(this, h, tag);
      case 3:
        return derive__3.call(this, h, tag, parent)
    }
    throw"Invalid arity: " + arguments.length;
  };
  derive.cljs$lang$arity$2 = derive__2;
  derive.cljs$lang$arity$3 = derive__3;
  return derive
}();
cljs.core.underive = function() {
  var underive = null;
  var underive__2 = function(tag, parent) {
    cljs.core.swap_BANG_.call(null, cljs.core.global_hierarchy, underive, tag, parent);
    return null
  };
  var underive__3 = function(h, tag, parent) {
    var parentMap__10794 = (new cljs.core.Keyword("\ufdd0'parents")).call(null, h);
    var childsParents__10795 = cljs.core.truth_(parentMap__10794.call(null, tag)) ? cljs.core.disj.call(null, parentMap__10794.call(null, tag), parent) : cljs.core.PersistentHashSet.EMPTY;
    var newParents__10796 = cljs.core.truth_(cljs.core.not_empty.call(null, childsParents__10795)) ? cljs.core.assoc.call(null, parentMap__10794, tag, childsParents__10795) : cljs.core.dissoc.call(null, parentMap__10794, tag);
    var deriv_seq__10797 = cljs.core.flatten.call(null, cljs.core.map.call(null, function(p1__10777_SHARP_) {
      return cljs.core.cons.call(null, cljs.core.first.call(null, p1__10777_SHARP_), cljs.core.interpose.call(null, cljs.core.first.call(null, p1__10777_SHARP_), cljs.core.second.call(null, p1__10777_SHARP_)))
    }, cljs.core.seq.call(null, newParents__10796)));
    if(cljs.core.contains_QMARK_.call(null, parentMap__10794.call(null, tag), parent)) {
      return cljs.core.reduce.call(null, function(p1__10778_SHARP_, p2__10779_SHARP_) {
        return cljs.core.apply.call(null, cljs.core.derive, p1__10778_SHARP_, p2__10779_SHARP_)
      }, cljs.core.make_hierarchy.call(null), cljs.core.partition.call(null, 2, deriv_seq__10797))
    }else {
      return h
    }
  };
  underive = function(h, tag, parent) {
    switch(arguments.length) {
      case 2:
        return underive__2.call(this, h, tag);
      case 3:
        return underive__3.call(this, h, tag, parent)
    }
    throw"Invalid arity: " + arguments.length;
  };
  underive.cljs$lang$arity$2 = underive__2;
  underive.cljs$lang$arity$3 = underive__3;
  return underive
}();
cljs.core.reset_cache = function reset_cache(method_cache, method_table, cached_hierarchy, hierarchy) {
  cljs.core.swap_BANG_.call(null, method_cache, function(_) {
    return cljs.core.deref.call(null, method_table)
  });
  return cljs.core.swap_BANG_.call(null, cached_hierarchy, function(_) {
    return cljs.core.deref.call(null, hierarchy)
  })
};
cljs.core.prefers_STAR_ = function prefers_STAR_(x, y, prefer_table) {
  var xprefs__10805 = cljs.core.deref.call(null, prefer_table).call(null, x);
  var or__3943__auto____10807 = cljs.core.truth_(function() {
    var and__3941__auto____10806 = xprefs__10805;
    if(cljs.core.truth_(and__3941__auto____10806)) {
      return xprefs__10805.call(null, y)
    }else {
      return and__3941__auto____10806
    }
  }()) ? true : null;
  if(cljs.core.truth_(or__3943__auto____10807)) {
    return or__3943__auto____10807
  }else {
    var or__3943__auto____10809 = function() {
      var ps__10808 = cljs.core.parents.call(null, y);
      while(true) {
        if(cljs.core.count.call(null, ps__10808) > 0) {
          if(cljs.core.truth_(prefers_STAR_.call(null, x, cljs.core.first.call(null, ps__10808), prefer_table))) {
          }else {
          }
          var G__10812 = cljs.core.rest.call(null, ps__10808);
          ps__10808 = G__10812;
          continue
        }else {
          return null
        }
        break
      }
    }();
    if(cljs.core.truth_(or__3943__auto____10809)) {
      return or__3943__auto____10809
    }else {
      var or__3943__auto____10811 = function() {
        var ps__10810 = cljs.core.parents.call(null, x);
        while(true) {
          if(cljs.core.count.call(null, ps__10810) > 0) {
            if(cljs.core.truth_(prefers_STAR_.call(null, cljs.core.first.call(null, ps__10810), y, prefer_table))) {
            }else {
            }
            var G__10813 = cljs.core.rest.call(null, ps__10810);
            ps__10810 = G__10813;
            continue
          }else {
            return null
          }
          break
        }
      }();
      if(cljs.core.truth_(or__3943__auto____10811)) {
        return or__3943__auto____10811
      }else {
        return false
      }
    }
  }
};
cljs.core.dominates = function dominates(x, y, prefer_table) {
  var or__3943__auto____10815 = cljs.core.prefers_STAR_.call(null, x, y, prefer_table);
  if(cljs.core.truth_(or__3943__auto____10815)) {
    return or__3943__auto____10815
  }else {
    return cljs.core.isa_QMARK_.call(null, x, y)
  }
};
cljs.core.find_and_cache_best_method = function find_and_cache_best_method(name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  var best_entry__10833 = cljs.core.reduce.call(null, function(be, p__10825) {
    var vec__10826__10827 = p__10825;
    var k__10828 = cljs.core.nth.call(null, vec__10826__10827, 0, null);
    var ___10829 = cljs.core.nth.call(null, vec__10826__10827, 1, null);
    var e__10830 = vec__10826__10827;
    if(cljs.core.isa_QMARK_.call(null, dispatch_val, k__10828)) {
      var be2__10832 = cljs.core.truth_(function() {
        var or__3943__auto____10831 = be == null;
        if(or__3943__auto____10831) {
          return or__3943__auto____10831
        }else {
          return cljs.core.dominates.call(null, k__10828, cljs.core.first.call(null, be), prefer_table)
        }
      }()) ? e__10830 : be;
      if(cljs.core.truth_(cljs.core.dominates.call(null, cljs.core.first.call(null, be2__10832), k__10828, prefer_table))) {
      }else {
        throw new Error([cljs.core.str("Multiple methods in multimethod '"), cljs.core.str(name), cljs.core.str("' match dispatch value: "), cljs.core.str(dispatch_val), cljs.core.str(" -> "), cljs.core.str(k__10828), cljs.core.str(" and "), cljs.core.str(cljs.core.first.call(null, be2__10832)), cljs.core.str(", and neither is preferred")].join(""));
      }
      return be2__10832
    }else {
      return be
    }
  }, null, cljs.core.deref.call(null, method_table));
  if(cljs.core.truth_(best_entry__10833)) {
    if(cljs.core._EQ_.call(null, cljs.core.deref.call(null, cached_hierarchy), cljs.core.deref.call(null, hierarchy))) {
      cljs.core.swap_BANG_.call(null, method_cache, cljs.core.assoc, dispatch_val, cljs.core.second.call(null, best_entry__10833));
      return cljs.core.second.call(null, best_entry__10833)
    }else {
      cljs.core.reset_cache.call(null, method_cache, method_table, cached_hierarchy, hierarchy);
      return find_and_cache_best_method.call(null, name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy)
    }
  }else {
    return null
  }
};
cljs.core.IMultiFn = {};
cljs.core._reset = function _reset(mf) {
  if(function() {
    var and__3941__auto____10838 = mf;
    if(and__3941__auto____10838) {
      return mf.cljs$core$IMultiFn$_reset$arity$1
    }else {
      return and__3941__auto____10838
    }
  }()) {
    return mf.cljs$core$IMultiFn$_reset$arity$1(mf)
  }else {
    var x__2314__auto____10839 = mf == null ? null : mf;
    return function() {
      var or__3943__auto____10840 = cljs.core._reset[goog.typeOf(x__2314__auto____10839)];
      if(or__3943__auto____10840) {
        return or__3943__auto____10840
      }else {
        var or__3943__auto____10841 = cljs.core._reset["_"];
        if(or__3943__auto____10841) {
          return or__3943__auto____10841
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-reset", mf);
        }
      }
    }().call(null, mf)
  }
};
cljs.core._add_method = function _add_method(mf, dispatch_val, method) {
  if(function() {
    var and__3941__auto____10846 = mf;
    if(and__3941__auto____10846) {
      return mf.cljs$core$IMultiFn$_add_method$arity$3
    }else {
      return and__3941__auto____10846
    }
  }()) {
    return mf.cljs$core$IMultiFn$_add_method$arity$3(mf, dispatch_val, method)
  }else {
    var x__2314__auto____10847 = mf == null ? null : mf;
    return function() {
      var or__3943__auto____10848 = cljs.core._add_method[goog.typeOf(x__2314__auto____10847)];
      if(or__3943__auto____10848) {
        return or__3943__auto____10848
      }else {
        var or__3943__auto____10849 = cljs.core._add_method["_"];
        if(or__3943__auto____10849) {
          return or__3943__auto____10849
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-add-method", mf);
        }
      }
    }().call(null, mf, dispatch_val, method)
  }
};
cljs.core._remove_method = function _remove_method(mf, dispatch_val) {
  if(function() {
    var and__3941__auto____10854 = mf;
    if(and__3941__auto____10854) {
      return mf.cljs$core$IMultiFn$_remove_method$arity$2
    }else {
      return and__3941__auto____10854
    }
  }()) {
    return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf, dispatch_val)
  }else {
    var x__2314__auto____10855 = mf == null ? null : mf;
    return function() {
      var or__3943__auto____10856 = cljs.core._remove_method[goog.typeOf(x__2314__auto____10855)];
      if(or__3943__auto____10856) {
        return or__3943__auto____10856
      }else {
        var or__3943__auto____10857 = cljs.core._remove_method["_"];
        if(or__3943__auto____10857) {
          return or__3943__auto____10857
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-remove-method", mf);
        }
      }
    }().call(null, mf, dispatch_val)
  }
};
cljs.core._prefer_method = function _prefer_method(mf, dispatch_val, dispatch_val_y) {
  if(function() {
    var and__3941__auto____10862 = mf;
    if(and__3941__auto____10862) {
      return mf.cljs$core$IMultiFn$_prefer_method$arity$3
    }else {
      return and__3941__auto____10862
    }
  }()) {
    return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf, dispatch_val, dispatch_val_y)
  }else {
    var x__2314__auto____10863 = mf == null ? null : mf;
    return function() {
      var or__3943__auto____10864 = cljs.core._prefer_method[goog.typeOf(x__2314__auto____10863)];
      if(or__3943__auto____10864) {
        return or__3943__auto____10864
      }else {
        var or__3943__auto____10865 = cljs.core._prefer_method["_"];
        if(or__3943__auto____10865) {
          return or__3943__auto____10865
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-prefer-method", mf);
        }
      }
    }().call(null, mf, dispatch_val, dispatch_val_y)
  }
};
cljs.core._get_method = function _get_method(mf, dispatch_val) {
  if(function() {
    var and__3941__auto____10870 = mf;
    if(and__3941__auto____10870) {
      return mf.cljs$core$IMultiFn$_get_method$arity$2
    }else {
      return and__3941__auto____10870
    }
  }()) {
    return mf.cljs$core$IMultiFn$_get_method$arity$2(mf, dispatch_val)
  }else {
    var x__2314__auto____10871 = mf == null ? null : mf;
    return function() {
      var or__3943__auto____10872 = cljs.core._get_method[goog.typeOf(x__2314__auto____10871)];
      if(or__3943__auto____10872) {
        return or__3943__auto____10872
      }else {
        var or__3943__auto____10873 = cljs.core._get_method["_"];
        if(or__3943__auto____10873) {
          return or__3943__auto____10873
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-get-method", mf);
        }
      }
    }().call(null, mf, dispatch_val)
  }
};
cljs.core._methods = function _methods(mf) {
  if(function() {
    var and__3941__auto____10878 = mf;
    if(and__3941__auto____10878) {
      return mf.cljs$core$IMultiFn$_methods$arity$1
    }else {
      return and__3941__auto____10878
    }
  }()) {
    return mf.cljs$core$IMultiFn$_methods$arity$1(mf)
  }else {
    var x__2314__auto____10879 = mf == null ? null : mf;
    return function() {
      var or__3943__auto____10880 = cljs.core._methods[goog.typeOf(x__2314__auto____10879)];
      if(or__3943__auto____10880) {
        return or__3943__auto____10880
      }else {
        var or__3943__auto____10881 = cljs.core._methods["_"];
        if(or__3943__auto____10881) {
          return or__3943__auto____10881
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-methods", mf);
        }
      }
    }().call(null, mf)
  }
};
cljs.core._prefers = function _prefers(mf) {
  if(function() {
    var and__3941__auto____10886 = mf;
    if(and__3941__auto____10886) {
      return mf.cljs$core$IMultiFn$_prefers$arity$1
    }else {
      return and__3941__auto____10886
    }
  }()) {
    return mf.cljs$core$IMultiFn$_prefers$arity$1(mf)
  }else {
    var x__2314__auto____10887 = mf == null ? null : mf;
    return function() {
      var or__3943__auto____10888 = cljs.core._prefers[goog.typeOf(x__2314__auto____10887)];
      if(or__3943__auto____10888) {
        return or__3943__auto____10888
      }else {
        var or__3943__auto____10889 = cljs.core._prefers["_"];
        if(or__3943__auto____10889) {
          return or__3943__auto____10889
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-prefers", mf);
        }
      }
    }().call(null, mf)
  }
};
cljs.core._dispatch = function _dispatch(mf, args) {
  if(function() {
    var and__3941__auto____10894 = mf;
    if(and__3941__auto____10894) {
      return mf.cljs$core$IMultiFn$_dispatch$arity$2
    }else {
      return and__3941__auto____10894
    }
  }()) {
    return mf.cljs$core$IMultiFn$_dispatch$arity$2(mf, args)
  }else {
    var x__2314__auto____10895 = mf == null ? null : mf;
    return function() {
      var or__3943__auto____10896 = cljs.core._dispatch[goog.typeOf(x__2314__auto____10895)];
      if(or__3943__auto____10896) {
        return or__3943__auto____10896
      }else {
        var or__3943__auto____10897 = cljs.core._dispatch["_"];
        if(or__3943__auto____10897) {
          return or__3943__auto____10897
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-dispatch", mf);
        }
      }
    }().call(null, mf, args)
  }
};
cljs.core.do_dispatch = function do_dispatch(mf, dispatch_fn, args) {
  var dispatch_val__10900 = cljs.core.apply.call(null, dispatch_fn, args);
  var target_fn__10901 = cljs.core._get_method.call(null, mf, dispatch_val__10900);
  if(cljs.core.truth_(target_fn__10901)) {
  }else {
    throw new Error([cljs.core.str("No method in multimethod '"), cljs.core.str(cljs.core.name), cljs.core.str("' for dispatch value: "), cljs.core.str(dispatch_val__10900)].join(""));
  }
  return cljs.core.apply.call(null, target_fn__10901, args)
};
cljs.core.MultiFn = function(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  this.name = name;
  this.dispatch_fn = dispatch_fn;
  this.default_dispatch_val = default_dispatch_val;
  this.hierarchy = hierarchy;
  this.method_table = method_table;
  this.prefer_table = prefer_table;
  this.method_cache = method_cache;
  this.cached_hierarchy = cached_hierarchy;
  this.cljs$lang$protocol_mask$partition0$ = 4194304;
  this.cljs$lang$protocol_mask$partition1$ = 64
};
cljs.core.MultiFn.cljs$lang$type = true;
cljs.core.MultiFn.cljs$lang$ctorPrSeq = function(this__2260__auto__) {
  return cljs.core.list.call(null, "cljs.core/MultiFn")
};
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var this__10902 = this;
  return goog.getUid(this$)
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = function(mf) {
  var this__10903 = this;
  cljs.core.swap_BANG_.call(null, this__10903.method_table, function(mf) {
    return cljs.core.ObjMap.EMPTY
  });
  cljs.core.swap_BANG_.call(null, this__10903.method_cache, function(mf) {
    return cljs.core.ObjMap.EMPTY
  });
  cljs.core.swap_BANG_.call(null, this__10903.prefer_table, function(mf) {
    return cljs.core.ObjMap.EMPTY
  });
  cljs.core.swap_BANG_.call(null, this__10903.cached_hierarchy, function(mf) {
    return null
  });
  return mf
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = function(mf, dispatch_val, method) {
  var this__10904 = this;
  cljs.core.swap_BANG_.call(null, this__10904.method_table, cljs.core.assoc, dispatch_val, method);
  cljs.core.reset_cache.call(null, this__10904.method_cache, this__10904.method_table, this__10904.cached_hierarchy, this__10904.hierarchy);
  return mf
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = function(mf, dispatch_val) {
  var this__10905 = this;
  cljs.core.swap_BANG_.call(null, this__10905.method_table, cljs.core.dissoc, dispatch_val);
  cljs.core.reset_cache.call(null, this__10905.method_cache, this__10905.method_table, this__10905.cached_hierarchy, this__10905.hierarchy);
  return mf
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = function(mf, dispatch_val) {
  var this__10906 = this;
  if(cljs.core._EQ_.call(null, cljs.core.deref.call(null, this__10906.cached_hierarchy), cljs.core.deref.call(null, this__10906.hierarchy))) {
  }else {
    cljs.core.reset_cache.call(null, this__10906.method_cache, this__10906.method_table, this__10906.cached_hierarchy, this__10906.hierarchy)
  }
  var temp__4090__auto____10907 = cljs.core.deref.call(null, this__10906.method_cache).call(null, dispatch_val);
  if(cljs.core.truth_(temp__4090__auto____10907)) {
    var target_fn__10908 = temp__4090__auto____10907;
    return target_fn__10908
  }else {
    var temp__4090__auto____10909 = cljs.core.find_and_cache_best_method.call(null, this__10906.name, dispatch_val, this__10906.hierarchy, this__10906.method_table, this__10906.prefer_table, this__10906.method_cache, this__10906.cached_hierarchy);
    if(cljs.core.truth_(temp__4090__auto____10909)) {
      var target_fn__10910 = temp__4090__auto____10909;
      return target_fn__10910
    }else {
      return cljs.core.deref.call(null, this__10906.method_table).call(null, this__10906.default_dispatch_val)
    }
  }
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = function(mf, dispatch_val_x, dispatch_val_y) {
  var this__10911 = this;
  if(cljs.core.truth_(cljs.core.prefers_STAR_.call(null, dispatch_val_x, dispatch_val_y, this__10911.prefer_table))) {
    throw new Error([cljs.core.str("Preference conflict in multimethod '"), cljs.core.str(this__10911.name), cljs.core.str("': "), cljs.core.str(dispatch_val_y), cljs.core.str(" is already preferred to "), cljs.core.str(dispatch_val_x)].join(""));
  }else {
  }
  cljs.core.swap_BANG_.call(null, this__10911.prefer_table, function(old) {
    return cljs.core.assoc.call(null, old, dispatch_val_x, cljs.core.conj.call(null, cljs.core._lookup.call(null, old, dispatch_val_x, cljs.core.PersistentHashSet.EMPTY), dispatch_val_y))
  });
  return cljs.core.reset_cache.call(null, this__10911.method_cache, this__10911.method_table, this__10911.cached_hierarchy, this__10911.hierarchy)
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = function(mf) {
  var this__10912 = this;
  return cljs.core.deref.call(null, this__10912.method_table)
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = function(mf) {
  var this__10913 = this;
  return cljs.core.deref.call(null, this__10913.prefer_table)
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_dispatch$arity$2 = function(mf, args) {
  var this__10914 = this;
  return cljs.core.do_dispatch.call(null, mf, this__10914.dispatch_fn, args)
};
cljs.core.MultiFn;
cljs.core.MultiFn.prototype.call = function() {
  var G__10916__delegate = function(_, args) {
    var self__10915 = this;
    return cljs.core._dispatch.call(null, self__10915, args)
  };
  var G__10916 = function(_, var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return G__10916__delegate.call(this, _, args)
  };
  G__10916.cljs$lang$maxFixedArity = 1;
  G__10916.cljs$lang$applyTo = function(arglist__10917) {
    var _ = cljs.core.first(arglist__10917);
    var args = cljs.core.rest(arglist__10917);
    return G__10916__delegate(_, args)
  };
  G__10916.cljs$lang$arity$variadic = G__10916__delegate;
  return G__10916
}();
cljs.core.MultiFn.prototype.apply = function(_, args) {
  var self__10918 = this;
  return cljs.core._dispatch.call(null, self__10918, args)
};
cljs.core.remove_all_methods = function remove_all_methods(multifn) {
  return cljs.core._reset.call(null, multifn)
};
cljs.core.remove_method = function remove_method(multifn, dispatch_val) {
  return cljs.core._remove_method.call(null, multifn, dispatch_val)
};
cljs.core.prefer_method = function prefer_method(multifn, dispatch_val_x, dispatch_val_y) {
  return cljs.core._prefer_method.call(null, multifn, dispatch_val_x, dispatch_val_y)
};
cljs.core.methods$ = function methods$(multifn) {
  return cljs.core._methods.call(null, multifn)
};
cljs.core.get_method = function get_method(multifn, dispatch_val) {
  return cljs.core._get_method.call(null, multifn, dispatch_val)
};
cljs.core.prefers = function prefers(multifn) {
  return cljs.core._prefers.call(null, multifn)
};
cljs.core.UUID = function(uuid) {
  this.uuid = uuid;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 543162368
};
cljs.core.UUID.cljs$lang$type = true;
cljs.core.UUID.cljs$lang$ctorPrSeq = function(this__2260__auto__) {
  return cljs.core.list.call(null, "cljs.core/UUID")
};
cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var this__10919 = this;
  return goog.string.hashCode(cljs.core.pr_str.call(null, this$))
};
cljs.core.UUID.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(_10921, _) {
  var this__10920 = this;
  return cljs.core.list.call(null, [cljs.core.str('#uuid "'), cljs.core.str(this__10920.uuid), cljs.core.str('"')].join(""))
};
cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var this__10922 = this;
  var and__3941__auto____10923 = cljs.core.instance_QMARK_.call(null, cljs.core.UUID, other);
  if(and__3941__auto____10923) {
    return this__10922.uuid === other.uuid
  }else {
    return and__3941__auto____10923
  }
};
cljs.core.UUID.prototype.toString = function() {
  var this__10924 = this;
  var this__10925 = this;
  return cljs.core.pr_str.call(null, this__10925)
};
cljs.core.UUID;
goog.provide("goog.debug.EntryPointMonitor");
goog.provide("goog.debug.entryPointRegistry");
goog.debug.EntryPointMonitor = function() {
};
goog.debug.EntryPointMonitor.prototype.wrap;
goog.debug.EntryPointMonitor.prototype.unwrap;
goog.debug.entryPointRegistry.refList_ = [];
goog.debug.entryPointRegistry.register = function(callback) {
  goog.debug.entryPointRegistry.refList_[goog.debug.entryPointRegistry.refList_.length] = callback
};
goog.debug.entryPointRegistry.monitorAll = function(monitor) {
  var transformer = goog.bind(monitor.wrap, monitor);
  for(var i = 0;i < goog.debug.entryPointRegistry.refList_.length;i++) {
    goog.debug.entryPointRegistry.refList_[i](transformer)
  }
};
goog.debug.entryPointRegistry.unmonitorAllIfPossible = function(monitor) {
  var transformer = goog.bind(monitor.unwrap, monitor);
  for(var i = 0;i < goog.debug.entryPointRegistry.refList_.length;i++) {
    goog.debug.entryPointRegistry.refList_[i](transformer)
  }
};
goog.provide("goog.debug.errorHandlerWeakDep");
goog.debug.errorHandlerWeakDep = {protectEntryPoint:function(fn, opt_tracers) {
  return fn
}};
goog.provide("goog.userAgent");
goog.require("goog.string");
goog.userAgent.ASSUME_IE = false;
goog.userAgent.ASSUME_GECKO = false;
goog.userAgent.ASSUME_WEBKIT = false;
goog.userAgent.ASSUME_MOBILE_WEBKIT = false;
goog.userAgent.ASSUME_OPERA = false;
goog.userAgent.BROWSER_KNOWN_ = goog.userAgent.ASSUME_IE || goog.userAgent.ASSUME_GECKO || goog.userAgent.ASSUME_MOBILE_WEBKIT || goog.userAgent.ASSUME_WEBKIT || goog.userAgent.ASSUME_OPERA;
goog.userAgent.getUserAgentString = function() {
  return goog.global["navigator"] ? goog.global["navigator"].userAgent : null
};
goog.userAgent.getNavigator = function() {
  return goog.global["navigator"]
};
goog.userAgent.init_ = function() {
  goog.userAgent.detectedOpera_ = false;
  goog.userAgent.detectedIe_ = false;
  goog.userAgent.detectedWebkit_ = false;
  goog.userAgent.detectedMobile_ = false;
  goog.userAgent.detectedGecko_ = false;
  var ua;
  if(!goog.userAgent.BROWSER_KNOWN_ && (ua = goog.userAgent.getUserAgentString())) {
    var navigator = goog.userAgent.getNavigator();
    goog.userAgent.detectedOpera_ = ua.indexOf("Opera") == 0;
    goog.userAgent.detectedIe_ = !goog.userAgent.detectedOpera_ && ua.indexOf("MSIE") != -1;
    goog.userAgent.detectedWebkit_ = !goog.userAgent.detectedOpera_ && ua.indexOf("WebKit") != -1;
    goog.userAgent.detectedMobile_ = goog.userAgent.detectedWebkit_ && ua.indexOf("Mobile") != -1;
    goog.userAgent.detectedGecko_ = !goog.userAgent.detectedOpera_ && !goog.userAgent.detectedWebkit_ && navigator.product == "Gecko"
  }
};
if(!goog.userAgent.BROWSER_KNOWN_) {
  goog.userAgent.init_()
}
goog.userAgent.OPERA = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_OPERA : goog.userAgent.detectedOpera_;
goog.userAgent.IE = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_IE : goog.userAgent.detectedIe_;
goog.userAgent.GECKO = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_GECKO : goog.userAgent.detectedGecko_;
goog.userAgent.WEBKIT = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_WEBKIT || goog.userAgent.ASSUME_MOBILE_WEBKIT : goog.userAgent.detectedWebkit_;
goog.userAgent.MOBILE = goog.userAgent.ASSUME_MOBILE_WEBKIT || goog.userAgent.detectedMobile_;
goog.userAgent.SAFARI = goog.userAgent.WEBKIT;
goog.userAgent.determinePlatform_ = function() {
  var navigator = goog.userAgent.getNavigator();
  return navigator && navigator.platform || ""
};
goog.userAgent.PLATFORM = goog.userAgent.determinePlatform_();
goog.userAgent.ASSUME_MAC = false;
goog.userAgent.ASSUME_WINDOWS = false;
goog.userAgent.ASSUME_LINUX = false;
goog.userAgent.ASSUME_X11 = false;
goog.userAgent.PLATFORM_KNOWN_ = goog.userAgent.ASSUME_MAC || goog.userAgent.ASSUME_WINDOWS || goog.userAgent.ASSUME_LINUX || goog.userAgent.ASSUME_X11;
goog.userAgent.initPlatform_ = function() {
  goog.userAgent.detectedMac_ = goog.string.contains(goog.userAgent.PLATFORM, "Mac");
  goog.userAgent.detectedWindows_ = goog.string.contains(goog.userAgent.PLATFORM, "Win");
  goog.userAgent.detectedLinux_ = goog.string.contains(goog.userAgent.PLATFORM, "Linux");
  goog.userAgent.detectedX11_ = !!goog.userAgent.getNavigator() && goog.string.contains(goog.userAgent.getNavigator()["appVersion"] || "", "X11")
};
if(!goog.userAgent.PLATFORM_KNOWN_) {
  goog.userAgent.initPlatform_()
}
goog.userAgent.MAC = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_MAC : goog.userAgent.detectedMac_;
goog.userAgent.WINDOWS = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_WINDOWS : goog.userAgent.detectedWindows_;
goog.userAgent.LINUX = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_LINUX : goog.userAgent.detectedLinux_;
goog.userAgent.X11 = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_X11 : goog.userAgent.detectedX11_;
goog.userAgent.determineVersion_ = function() {
  var version = "", re;
  if(goog.userAgent.OPERA && goog.global["opera"]) {
    var operaVersion = goog.global["opera"].version;
    version = typeof operaVersion == "function" ? operaVersion() : operaVersion
  }else {
    if(goog.userAgent.GECKO) {
      re = /rv\:([^\);]+)(\)|;)/
    }else {
      if(goog.userAgent.IE) {
        re = /MSIE\s+([^\);]+)(\)|;)/
      }else {
        if(goog.userAgent.WEBKIT) {
          re = /WebKit\/(\S+)/
        }
      }
    }
    if(re) {
      var arr = re.exec(goog.userAgent.getUserAgentString());
      version = arr ? arr[1] : ""
    }
  }
  if(goog.userAgent.IE) {
    var docMode = goog.userAgent.getDocumentMode_();
    if(docMode > parseFloat(version)) {
      return String(docMode)
    }
  }
  return version
};
goog.userAgent.getDocumentMode_ = function() {
  var doc = goog.global["document"];
  return doc ? doc["documentMode"] : undefined
};
goog.userAgent.VERSION = goog.userAgent.determineVersion_();
goog.userAgent.compare = function(v1, v2) {
  return goog.string.compareVersions(v1, v2)
};
goog.userAgent.isVersionCache_ = {};
goog.userAgent.isVersion = function(version) {
  return goog.userAgent.isVersionCache_[version] || (goog.userAgent.isVersionCache_[version] = goog.string.compareVersions(goog.userAgent.VERSION, version) >= 0)
};
goog.provide("goog.events.BrowserFeature");
goog.require("goog.userAgent");
goog.events.BrowserFeature = {HAS_W3C_BUTTON:!goog.userAgent.IE || goog.userAgent.isVersion("9"), SET_KEY_CODE_TO_PREVENT_DEFAULT:goog.userAgent.IE && !goog.userAgent.isVersion("8")};
goog.provide("goog.disposable.IDisposable");
goog.disposable.IDisposable = function() {
};
goog.disposable.IDisposable.prototype.dispose;
goog.disposable.IDisposable.prototype.isDisposed;
goog.provide("goog.Disposable");
goog.provide("goog.dispose");
goog.require("goog.disposable.IDisposable");
goog.Disposable = function() {
  if(goog.Disposable.ENABLE_MONITORING) {
    goog.Disposable.instances_[goog.getUid(this)] = this
  }
};
goog.Disposable.ENABLE_MONITORING = false;
goog.Disposable.instances_ = {};
goog.Disposable.getUndisposedObjects = function() {
  var ret = [];
  for(var id in goog.Disposable.instances_) {
    if(goog.Disposable.instances_.hasOwnProperty(id)) {
      ret.push(goog.Disposable.instances_[Number(id)])
    }
  }
  return ret
};
goog.Disposable.clearUndisposedObjects = function() {
  goog.Disposable.instances_ = {}
};
goog.Disposable.prototype.disposed_ = false;
goog.Disposable.prototype.isDisposed = function() {
  return this.disposed_
};
goog.Disposable.prototype.getDisposed = goog.Disposable.prototype.isDisposed;
goog.Disposable.prototype.dispose = function() {
  if(!this.disposed_) {
    this.disposed_ = true;
    this.disposeInternal();
    if(goog.Disposable.ENABLE_MONITORING) {
      var uid = goog.getUid(this);
      if(!goog.Disposable.instances_.hasOwnProperty(uid)) {
        throw Error(this + " did not call the goog.Disposable base " + "constructor or was disposed of after a clearUndisposedObjects " + "call");
      }
      delete goog.Disposable.instances_[uid]
    }
  }
};
goog.Disposable.prototype.disposeInternal = function() {
};
goog.dispose = function(obj) {
  if(obj && typeof obj.dispose == "function") {
    obj.dispose()
  }
};
goog.provide("goog.events.Event");
goog.require("goog.Disposable");
goog.events.Event = function(type, opt_target) {
  goog.Disposable.call(this);
  this.type = type;
  this.target = opt_target;
  this.currentTarget = this.target
};
goog.inherits(goog.events.Event, goog.Disposable);
goog.events.Event.prototype.disposeInternal = function() {
  delete this.type;
  delete this.target;
  delete this.currentTarget
};
goog.events.Event.prototype.propagationStopped_ = false;
goog.events.Event.prototype.returnValue_ = true;
goog.events.Event.prototype.stopPropagation = function() {
  this.propagationStopped_ = true
};
goog.events.Event.prototype.preventDefault = function() {
  this.returnValue_ = false
};
goog.events.Event.stopPropagation = function(e) {
  e.stopPropagation()
};
goog.events.Event.preventDefault = function(e) {
  e.preventDefault()
};
goog.provide("goog.events.EventType");
goog.require("goog.userAgent");
goog.events.EventType = {CLICK:"click", DBLCLICK:"dblclick", MOUSEDOWN:"mousedown", MOUSEUP:"mouseup", MOUSEOVER:"mouseover", MOUSEOUT:"mouseout", MOUSEMOVE:"mousemove", SELECTSTART:"selectstart", KEYPRESS:"keypress", KEYDOWN:"keydown", KEYUP:"keyup", BLUR:"blur", FOCUS:"focus", DEACTIVATE:"deactivate", FOCUSIN:goog.userAgent.IE ? "focusin" : "DOMFocusIn", FOCUSOUT:goog.userAgent.IE ? "focusout" : "DOMFocusOut", CHANGE:"change", SELECT:"select", SUBMIT:"submit", INPUT:"input", PROPERTYCHANGE:"propertychange", 
DRAGSTART:"dragstart", DRAGENTER:"dragenter", DRAGOVER:"dragover", DRAGLEAVE:"dragleave", DROP:"drop", TOUCHSTART:"touchstart", TOUCHMOVE:"touchmove", TOUCHEND:"touchend", TOUCHCANCEL:"touchcancel", CONTEXTMENU:"contextmenu", ERROR:"error", HELP:"help", LOAD:"load", LOSECAPTURE:"losecapture", READYSTATECHANGE:"readystatechange", RESIZE:"resize", SCROLL:"scroll", UNLOAD:"unload", HASHCHANGE:"hashchange", PAGEHIDE:"pagehide", PAGESHOW:"pageshow", POPSTATE:"popstate", COPY:"copy", PASTE:"paste", CUT:"cut", 
MESSAGE:"message", CONNECT:"connect"};
goog.provide("goog.reflect");
goog.reflect.object = function(type, object) {
  return object
};
goog.reflect.sinkValue = new Function("a", "return a");
goog.provide("goog.events.BrowserEvent");
goog.provide("goog.events.BrowserEvent.MouseButton");
goog.require("goog.events.BrowserFeature");
goog.require("goog.events.Event");
goog.require("goog.events.EventType");
goog.require("goog.reflect");
goog.require("goog.userAgent");
goog.events.BrowserEvent = function(opt_e, opt_currentTarget) {
  if(opt_e) {
    this.init(opt_e, opt_currentTarget)
  }
};
goog.inherits(goog.events.BrowserEvent, goog.events.Event);
goog.events.BrowserEvent.MouseButton = {LEFT:0, MIDDLE:1, RIGHT:2};
goog.events.BrowserEvent.IEButtonMap = [1, 4, 2];
goog.events.BrowserEvent.prototype.target = null;
goog.events.BrowserEvent.prototype.currentTarget;
goog.events.BrowserEvent.prototype.relatedTarget = null;
goog.events.BrowserEvent.prototype.offsetX = 0;
goog.events.BrowserEvent.prototype.offsetY = 0;
goog.events.BrowserEvent.prototype.clientX = 0;
goog.events.BrowserEvent.prototype.clientY = 0;
goog.events.BrowserEvent.prototype.screenX = 0;
goog.events.BrowserEvent.prototype.screenY = 0;
goog.events.BrowserEvent.prototype.button = 0;
goog.events.BrowserEvent.prototype.keyCode = 0;
goog.events.BrowserEvent.prototype.charCode = 0;
goog.events.BrowserEvent.prototype.ctrlKey = false;
goog.events.BrowserEvent.prototype.altKey = false;
goog.events.BrowserEvent.prototype.shiftKey = false;
goog.events.BrowserEvent.prototype.metaKey = false;
goog.events.BrowserEvent.prototype.state;
goog.events.BrowserEvent.prototype.platformModifierKey = false;
goog.events.BrowserEvent.prototype.event_ = null;
goog.events.BrowserEvent.prototype.init = function(e, opt_currentTarget) {
  var type = this.type = e.type;
  goog.events.Event.call(this, type);
  this.target = e.target || e.srcElement;
  this.currentTarget = opt_currentTarget;
  var relatedTarget = e.relatedTarget;
  if(relatedTarget) {
    if(goog.userAgent.GECKO) {
      try {
        goog.reflect.sinkValue(relatedTarget.nodeName)
      }catch(err) {
        relatedTarget = null
      }
    }
  }else {
    if(type == goog.events.EventType.MOUSEOVER) {
      relatedTarget = e.fromElement
    }else {
      if(type == goog.events.EventType.MOUSEOUT) {
        relatedTarget = e.toElement
      }
    }
  }
  this.relatedTarget = relatedTarget;
  this.offsetX = e.offsetX !== undefined ? e.offsetX : e.layerX;
  this.offsetY = e.offsetY !== undefined ? e.offsetY : e.layerY;
  this.clientX = e.clientX !== undefined ? e.clientX : e.pageX;
  this.clientY = e.clientY !== undefined ? e.clientY : e.pageY;
  this.screenX = e.screenX || 0;
  this.screenY = e.screenY || 0;
  this.button = e.button;
  this.keyCode = e.keyCode || 0;
  this.charCode = e.charCode || (type == "keypress" ? e.keyCode : 0);
  this.ctrlKey = e.ctrlKey;
  this.altKey = e.altKey;
  this.shiftKey = e.shiftKey;
  this.metaKey = e.metaKey;
  this.platformModifierKey = goog.userAgent.MAC ? e.metaKey : e.ctrlKey;
  this.state = e.state;
  this.event_ = e;
  delete this.returnValue_;
  delete this.propagationStopped_
};
goog.events.BrowserEvent.prototype.isButton = function(button) {
  if(!goog.events.BrowserFeature.HAS_W3C_BUTTON) {
    if(this.type == "click") {
      return button == goog.events.BrowserEvent.MouseButton.LEFT
    }else {
      return!!(this.event_.button & goog.events.BrowserEvent.IEButtonMap[button])
    }
  }else {
    return this.event_.button == button
  }
};
goog.events.BrowserEvent.prototype.isMouseActionButton = function() {
  return this.isButton(goog.events.BrowserEvent.MouseButton.LEFT) && !(goog.userAgent.WEBKIT && goog.userAgent.MAC && this.ctrlKey)
};
goog.events.BrowserEvent.prototype.stopPropagation = function() {
  goog.events.BrowserEvent.superClass_.stopPropagation.call(this);
  if(this.event_.stopPropagation) {
    this.event_.stopPropagation()
  }else {
    this.event_.cancelBubble = true
  }
};
goog.events.BrowserEvent.prototype.preventDefault = function() {
  goog.events.BrowserEvent.superClass_.preventDefault.call(this);
  var be = this.event_;
  if(!be.preventDefault) {
    be.returnValue = false;
    if(goog.events.BrowserFeature.SET_KEY_CODE_TO_PREVENT_DEFAULT) {
      try {
        var VK_F1 = 112;
        var VK_F12 = 123;
        if(be.ctrlKey || be.keyCode >= VK_F1 && be.keyCode <= VK_F12) {
          be.keyCode = -1
        }
      }catch(ex) {
      }
    }
  }else {
    be.preventDefault()
  }
};
goog.events.BrowserEvent.prototype.getBrowserEvent = function() {
  return this.event_
};
goog.events.BrowserEvent.prototype.disposeInternal = function() {
  goog.events.BrowserEvent.superClass_.disposeInternal.call(this);
  this.event_ = null;
  this.target = null;
  this.currentTarget = null;
  this.relatedTarget = null
};
goog.provide("goog.events.EventWrapper");
goog.events.EventWrapper = function() {
};
goog.events.EventWrapper.prototype.listen = function(src, listener, opt_capt, opt_scope, opt_eventHandler) {
};
goog.events.EventWrapper.prototype.unlisten = function(src, listener, opt_capt, opt_scope, opt_eventHandler) {
};
goog.provide("goog.events.Listener");
goog.events.Listener = function() {
};
goog.events.Listener.counter_ = 0;
goog.events.Listener.prototype.isFunctionListener_;
goog.events.Listener.prototype.listener;
goog.events.Listener.prototype.proxy;
goog.events.Listener.prototype.src;
goog.events.Listener.prototype.type;
goog.events.Listener.prototype.capture;
goog.events.Listener.prototype.handler;
goog.events.Listener.prototype.key = 0;
goog.events.Listener.prototype.removed = false;
goog.events.Listener.prototype.callOnce = false;
goog.events.Listener.prototype.init = function(listener, proxy, src, type, capture, opt_handler) {
  if(goog.isFunction(listener)) {
    this.isFunctionListener_ = true
  }else {
    if(listener && listener.handleEvent && goog.isFunction(listener.handleEvent)) {
      this.isFunctionListener_ = false
    }else {
      throw Error("Invalid listener argument");
    }
  }
  this.listener = listener;
  this.proxy = proxy;
  this.src = src;
  this.type = type;
  this.capture = !!capture;
  this.handler = opt_handler;
  this.callOnce = false;
  this.key = ++goog.events.Listener.counter_;
  this.removed = false
};
goog.events.Listener.prototype.handleEvent = function(eventObject) {
  if(this.isFunctionListener_) {
    return this.listener.call(this.handler || this.src, eventObject)
  }
  return this.listener.handleEvent.call(this.listener, eventObject)
};
goog.provide("goog.structs.SimplePool");
goog.require("goog.Disposable");
goog.structs.SimplePool = function(initialCount, maxCount) {
  goog.Disposable.call(this);
  this.maxCount_ = maxCount;
  this.freeQueue_ = [];
  this.createInitial_(initialCount)
};
goog.inherits(goog.structs.SimplePool, goog.Disposable);
goog.structs.SimplePool.prototype.createObjectFn_ = null;
goog.structs.SimplePool.prototype.disposeObjectFn_ = null;
goog.structs.SimplePool.prototype.setCreateObjectFn = function(createObjectFn) {
  this.createObjectFn_ = createObjectFn
};
goog.structs.SimplePool.prototype.setDisposeObjectFn = function(disposeObjectFn) {
  this.disposeObjectFn_ = disposeObjectFn
};
goog.structs.SimplePool.prototype.getObject = function() {
  if(this.freeQueue_.length) {
    return this.freeQueue_.pop()
  }
  return this.createObject()
};
goog.structs.SimplePool.prototype.releaseObject = function(obj) {
  if(this.freeQueue_.length < this.maxCount_) {
    this.freeQueue_.push(obj)
  }else {
    this.disposeObject(obj)
  }
};
goog.structs.SimplePool.prototype.createInitial_ = function(initialCount) {
  if(initialCount > this.maxCount_) {
    throw Error("[goog.structs.SimplePool] Initial cannot be greater than max");
  }
  for(var i = 0;i < initialCount;i++) {
    this.freeQueue_.push(this.createObject())
  }
};
goog.structs.SimplePool.prototype.createObject = function() {
  if(this.createObjectFn_) {
    return this.createObjectFn_()
  }else {
    return{}
  }
};
goog.structs.SimplePool.prototype.disposeObject = function(obj) {
  if(this.disposeObjectFn_) {
    this.disposeObjectFn_(obj)
  }else {
    if(goog.isObject(obj)) {
      if(goog.isFunction(obj.dispose)) {
        obj.dispose()
      }else {
        for(var i in obj) {
          delete obj[i]
        }
      }
    }
  }
};
goog.structs.SimplePool.prototype.disposeInternal = function() {
  goog.structs.SimplePool.superClass_.disposeInternal.call(this);
  var freeQueue = this.freeQueue_;
  while(freeQueue.length) {
    this.disposeObject(freeQueue.pop())
  }
  delete this.freeQueue_
};
goog.provide("goog.events.pools");
goog.require("goog.events.BrowserEvent");
goog.require("goog.events.Listener");
goog.require("goog.structs.SimplePool");
goog.require("goog.userAgent.jscript");
goog.events.ASSUME_GOOD_GC = false;
goog.events.pools.getObject;
goog.events.pools.releaseObject;
goog.events.pools.getArray;
goog.events.pools.releaseArray;
goog.events.pools.getProxy;
goog.events.pools.setProxyCallbackFunction;
goog.events.pools.releaseProxy;
goog.events.pools.getListener;
goog.events.pools.releaseListener;
goog.events.pools.getEvent;
goog.events.pools.releaseEvent;
(function() {
  var BAD_GC = !goog.events.ASSUME_GOOD_GC && goog.userAgent.jscript.HAS_JSCRIPT && !goog.userAgent.jscript.isVersion("5.7");
  function getObject() {
    return{count_:0, remaining_:0}
  }
  function getArray() {
    return[]
  }
  var proxyCallbackFunction;
  goog.events.pools.setProxyCallbackFunction = function(cb) {
    proxyCallbackFunction = cb
  };
  function getProxy() {
    var f = function(eventObject) {
      return proxyCallbackFunction.call(f.src, f.key, eventObject)
    };
    return f
  }
  function getListener() {
    return new goog.events.Listener
  }
  function getEvent() {
    return new goog.events.BrowserEvent
  }
  if(!BAD_GC) {
    goog.events.pools.getObject = getObject;
    goog.events.pools.releaseObject = goog.nullFunction;
    goog.events.pools.getArray = getArray;
    goog.events.pools.releaseArray = goog.nullFunction;
    goog.events.pools.getProxy = getProxy;
    goog.events.pools.releaseProxy = goog.nullFunction;
    goog.events.pools.getListener = getListener;
    goog.events.pools.releaseListener = goog.nullFunction;
    goog.events.pools.getEvent = getEvent;
    goog.events.pools.releaseEvent = goog.nullFunction
  }else {
    goog.events.pools.getObject = function() {
      return objectPool.getObject()
    };
    goog.events.pools.releaseObject = function(obj) {
      objectPool.releaseObject(obj)
    };
    goog.events.pools.getArray = function() {
      return arrayPool.getObject()
    };
    goog.events.pools.releaseArray = function(obj) {
      arrayPool.releaseObject(obj)
    };
    goog.events.pools.getProxy = function() {
      return proxyPool.getObject()
    };
    goog.events.pools.releaseProxy = function(obj) {
      proxyPool.releaseObject(getProxy())
    };
    goog.events.pools.getListener = function() {
      return listenerPool.getObject()
    };
    goog.events.pools.releaseListener = function(obj) {
      listenerPool.releaseObject(obj)
    };
    goog.events.pools.getEvent = function() {
      return eventPool.getObject()
    };
    goog.events.pools.releaseEvent = function(obj) {
      eventPool.releaseObject(obj)
    };
    var OBJECT_POOL_INITIAL_COUNT = 0;
    var OBJECT_POOL_MAX_COUNT = 600;
    var objectPool = new goog.structs.SimplePool(OBJECT_POOL_INITIAL_COUNT, OBJECT_POOL_MAX_COUNT);
    objectPool.setCreateObjectFn(getObject);
    var ARRAY_POOL_INITIAL_COUNT = 0;
    var ARRAY_POOL_MAX_COUNT = 600;
    var arrayPool = new goog.structs.SimplePool(ARRAY_POOL_INITIAL_COUNT, ARRAY_POOL_MAX_COUNT);
    arrayPool.setCreateObjectFn(getArray);
    var HANDLE_EVENT_PROXY_POOL_INITIAL_COUNT = 0;
    var HANDLE_EVENT_PROXY_POOL_MAX_COUNT = 600;
    var proxyPool = new goog.structs.SimplePool(HANDLE_EVENT_PROXY_POOL_INITIAL_COUNT, HANDLE_EVENT_PROXY_POOL_MAX_COUNT);
    proxyPool.setCreateObjectFn(getProxy);
    var LISTENER_POOL_INITIAL_COUNT = 0;
    var LISTENER_POOL_MAX_COUNT = 600;
    var listenerPool = new goog.structs.SimplePool(LISTENER_POOL_INITIAL_COUNT, LISTENER_POOL_MAX_COUNT);
    listenerPool.setCreateObjectFn(getListener);
    var EVENT_POOL_INITIAL_COUNT = 0;
    var EVENT_POOL_MAX_COUNT = 600;
    var eventPool = new goog.structs.SimplePool(EVENT_POOL_INITIAL_COUNT, EVENT_POOL_MAX_COUNT);
    eventPool.setCreateObjectFn(getEvent)
  }
})();
goog.provide("goog.events");
goog.require("goog.array");
goog.require("goog.debug.entryPointRegistry");
goog.require("goog.debug.errorHandlerWeakDep");
goog.require("goog.events.BrowserEvent");
goog.require("goog.events.Event");
goog.require("goog.events.EventWrapper");
goog.require("goog.events.pools");
goog.require("goog.object");
goog.require("goog.userAgent");
goog.events.listeners_ = {};
goog.events.listenerTree_ = {};
goog.events.sources_ = {};
goog.events.onString_ = "on";
goog.events.onStringMap_ = {};
goog.events.keySeparator_ = "_";
goog.events.requiresSyntheticEventPropagation_;
goog.events.listen = function(src, type, listener, opt_capt, opt_handler) {
  if(!type) {
    throw Error("Invalid event type");
  }else {
    if(goog.isArray(type)) {
      for(var i = 0;i < type.length;i++) {
        goog.events.listen(src, type[i], listener, opt_capt, opt_handler)
      }
      return null
    }else {
      var capture = !!opt_capt;
      var map = goog.events.listenerTree_;
      if(!(type in map)) {
        map[type] = goog.events.pools.getObject()
      }
      map = map[type];
      if(!(capture in map)) {
        map[capture] = goog.events.pools.getObject();
        map.count_++
      }
      map = map[capture];
      var srcUid = goog.getUid(src);
      var listenerArray, listenerObj;
      map.remaining_++;
      if(!map[srcUid]) {
        listenerArray = map[srcUid] = goog.events.pools.getArray();
        map.count_++
      }else {
        listenerArray = map[srcUid];
        for(var i = 0;i < listenerArray.length;i++) {
          listenerObj = listenerArray[i];
          if(listenerObj.listener == listener && listenerObj.handler == opt_handler) {
            if(listenerObj.removed) {
              break
            }
            return listenerArray[i].key
          }
        }
      }
      var proxy = goog.events.pools.getProxy();
      proxy.src = src;
      listenerObj = goog.events.pools.getListener();
      listenerObj.init(listener, proxy, src, type, capture, opt_handler);
      var key = listenerObj.key;
      proxy.key = key;
      listenerArray.push(listenerObj);
      goog.events.listeners_[key] = listenerObj;
      if(!goog.events.sources_[srcUid]) {
        goog.events.sources_[srcUid] = goog.events.pools.getArray()
      }
      goog.events.sources_[srcUid].push(listenerObj);
      if(src.addEventListener) {
        if(src == goog.global || !src.customEvent_) {
          src.addEventListener(type, proxy, capture)
        }
      }else {
        src.attachEvent(goog.events.getOnString_(type), proxy)
      }
      return key
    }
  }
};
goog.events.listenOnce = function(src, type, listener, opt_capt, opt_handler) {
  if(goog.isArray(type)) {
    for(var i = 0;i < type.length;i++) {
      goog.events.listenOnce(src, type[i], listener, opt_capt, opt_handler)
    }
    return null
  }
  var key = goog.events.listen(src, type, listener, opt_capt, opt_handler);
  var listenerObj = goog.events.listeners_[key];
  listenerObj.callOnce = true;
  return key
};
goog.events.listenWithWrapper = function(src, wrapper, listener, opt_capt, opt_handler) {
  wrapper.listen(src, listener, opt_capt, opt_handler)
};
goog.events.unlisten = function(src, type, listener, opt_capt, opt_handler) {
  if(goog.isArray(type)) {
    for(var i = 0;i < type.length;i++) {
      goog.events.unlisten(src, type[i], listener, opt_capt, opt_handler)
    }
    return null
  }
  var capture = !!opt_capt;
  var listenerArray = goog.events.getListeners_(src, type, capture);
  if(!listenerArray) {
    return false
  }
  for(var i = 0;i < listenerArray.length;i++) {
    if(listenerArray[i].listener == listener && listenerArray[i].capture == capture && listenerArray[i].handler == opt_handler) {
      return goog.events.unlistenByKey(listenerArray[i].key)
    }
  }
  return false
};
goog.events.unlistenByKey = function(key) {
  if(!goog.events.listeners_[key]) {
    return false
  }
  var listener = goog.events.listeners_[key];
  if(listener.removed) {
    return false
  }
  var src = listener.src;
  var type = listener.type;
  var proxy = listener.proxy;
  var capture = listener.capture;
  if(src.removeEventListener) {
    if(src == goog.global || !src.customEvent_) {
      src.removeEventListener(type, proxy, capture)
    }
  }else {
    if(src.detachEvent) {
      src.detachEvent(goog.events.getOnString_(type), proxy)
    }
  }
  var srcUid = goog.getUid(src);
  var listenerArray = goog.events.listenerTree_[type][capture][srcUid];
  if(goog.events.sources_[srcUid]) {
    var sourcesArray = goog.events.sources_[srcUid];
    goog.array.remove(sourcesArray, listener);
    if(sourcesArray.length == 0) {
      delete goog.events.sources_[srcUid]
    }
  }
  listener.removed = true;
  listenerArray.needsCleanup_ = true;
  goog.events.cleanUp_(type, capture, srcUid, listenerArray);
  delete goog.events.listeners_[key];
  return true
};
goog.events.unlistenWithWrapper = function(src, wrapper, listener, opt_capt, opt_handler) {
  wrapper.unlisten(src, listener, opt_capt, opt_handler)
};
goog.events.cleanUp_ = function(type, capture, srcUid, listenerArray) {
  if(!listenerArray.locked_) {
    if(listenerArray.needsCleanup_) {
      for(var oldIndex = 0, newIndex = 0;oldIndex < listenerArray.length;oldIndex++) {
        if(listenerArray[oldIndex].removed) {
          var proxy = listenerArray[oldIndex].proxy;
          proxy.src = null;
          goog.events.pools.releaseProxy(proxy);
          goog.events.pools.releaseListener(listenerArray[oldIndex]);
          continue
        }
        if(oldIndex != newIndex) {
          listenerArray[newIndex] = listenerArray[oldIndex]
        }
        newIndex++
      }
      listenerArray.length = newIndex;
      listenerArray.needsCleanup_ = false;
      if(newIndex == 0) {
        goog.events.pools.releaseArray(listenerArray);
        delete goog.events.listenerTree_[type][capture][srcUid];
        goog.events.listenerTree_[type][capture].count_--;
        if(goog.events.listenerTree_[type][capture].count_ == 0) {
          goog.events.pools.releaseObject(goog.events.listenerTree_[type][capture]);
          delete goog.events.listenerTree_[type][capture];
          goog.events.listenerTree_[type].count_--
        }
        if(goog.events.listenerTree_[type].count_ == 0) {
          goog.events.pools.releaseObject(goog.events.listenerTree_[type]);
          delete goog.events.listenerTree_[type]
        }
      }
    }
  }
};
goog.events.removeAll = function(opt_obj, opt_type, opt_capt) {
  var count = 0;
  var noObj = opt_obj == null;
  var noType = opt_type == null;
  var noCapt = opt_capt == null;
  opt_capt = !!opt_capt;
  if(!noObj) {
    var srcUid = goog.getUid(opt_obj);
    if(goog.events.sources_[srcUid]) {
      var sourcesArray = goog.events.sources_[srcUid];
      for(var i = sourcesArray.length - 1;i >= 0;i--) {
        var listener = sourcesArray[i];
        if((noType || opt_type == listener.type) && (noCapt || opt_capt == listener.capture)) {
          goog.events.unlistenByKey(listener.key);
          count++
        }
      }
    }
  }else {
    goog.object.forEach(goog.events.sources_, function(listeners) {
      for(var i = listeners.length - 1;i >= 0;i--) {
        var listener = listeners[i];
        if((noType || opt_type == listener.type) && (noCapt || opt_capt == listener.capture)) {
          goog.events.unlistenByKey(listener.key);
          count++
        }
      }
    })
  }
  return count
};
goog.events.getListeners = function(obj, type, capture) {
  return goog.events.getListeners_(obj, type, capture) || []
};
goog.events.getListeners_ = function(obj, type, capture) {
  var map = goog.events.listenerTree_;
  if(type in map) {
    map = map[type];
    if(capture in map) {
      map = map[capture];
      var objUid = goog.getUid(obj);
      if(map[objUid]) {
        return map[objUid]
      }
    }
  }
  return null
};
goog.events.getListener = function(src, type, listener, opt_capt, opt_handler) {
  var capture = !!opt_capt;
  var listenerArray = goog.events.getListeners_(src, type, capture);
  if(listenerArray) {
    for(var i = 0;i < listenerArray.length;i++) {
      if(listenerArray[i].listener == listener && listenerArray[i].capture == capture && listenerArray[i].handler == opt_handler) {
        return listenerArray[i]
      }
    }
  }
  return null
};
goog.events.hasListener = function(obj, opt_type, opt_capture) {
  var objUid = goog.getUid(obj);
  var listeners = goog.events.sources_[objUid];
  if(listeners) {
    var hasType = goog.isDef(opt_type);
    var hasCapture = goog.isDef(opt_capture);
    if(hasType && hasCapture) {
      var map = goog.events.listenerTree_[opt_type];
      return!!map && !!map[opt_capture] && objUid in map[opt_capture]
    }else {
      if(!(hasType || hasCapture)) {
        return true
      }else {
        return goog.array.some(listeners, function(listener) {
          return hasType && listener.type == opt_type || hasCapture && listener.capture == opt_capture
        })
      }
    }
  }
  return false
};
goog.events.expose = function(e) {
  var str = [];
  for(var key in e) {
    if(e[key] && e[key].id) {
      str.push(key + " = " + e[key] + " (" + e[key].id + ")")
    }else {
      str.push(key + " = " + e[key])
    }
  }
  return str.join("\n")
};
goog.events.getOnString_ = function(type) {
  if(type in goog.events.onStringMap_) {
    return goog.events.onStringMap_[type]
  }
  return goog.events.onStringMap_[type] = goog.events.onString_ + type
};
goog.events.fireListeners = function(obj, type, capture, eventObject) {
  var map = goog.events.listenerTree_;
  if(type in map) {
    map = map[type];
    if(capture in map) {
      return goog.events.fireListeners_(map[capture], obj, type, capture, eventObject)
    }
  }
  return true
};
goog.events.fireListeners_ = function(map, obj, type, capture, eventObject) {
  var retval = 1;
  var objUid = goog.getUid(obj);
  if(map[objUid]) {
    map.remaining_--;
    var listenerArray = map[objUid];
    if(!listenerArray.locked_) {
      listenerArray.locked_ = 1
    }else {
      listenerArray.locked_++
    }
    try {
      var length = listenerArray.length;
      for(var i = 0;i < length;i++) {
        var listener = listenerArray[i];
        if(listener && !listener.removed) {
          retval &= goog.events.fireListener(listener, eventObject) !== false
        }
      }
    }finally {
      listenerArray.locked_--;
      goog.events.cleanUp_(type, capture, objUid, listenerArray)
    }
  }
  return Boolean(retval)
};
goog.events.fireListener = function(listener, eventObject) {
  var rv = listener.handleEvent(eventObject);
  if(listener.callOnce) {
    goog.events.unlistenByKey(listener.key)
  }
  return rv
};
goog.events.getTotalListenerCount = function() {
  return goog.object.getCount(goog.events.listeners_)
};
goog.events.dispatchEvent = function(src, e) {
  var type = e.type || e;
  var map = goog.events.listenerTree_;
  if(!(type in map)) {
    return true
  }
  if(goog.isString(e)) {
    e = new goog.events.Event(e, src)
  }else {
    if(!(e instanceof goog.events.Event)) {
      var oldEvent = e;
      e = new goog.events.Event(type, src);
      goog.object.extend(e, oldEvent)
    }else {
      e.target = e.target || src
    }
  }
  var rv = 1, ancestors;
  map = map[type];
  var hasCapture = true in map;
  var targetsMap;
  if(hasCapture) {
    ancestors = [];
    for(var parent = src;parent;parent = parent.getParentEventTarget()) {
      ancestors.push(parent)
    }
    targetsMap = map[true];
    targetsMap.remaining_ = targetsMap.count_;
    for(var i = ancestors.length - 1;!e.propagationStopped_ && i >= 0 && targetsMap.remaining_;i--) {
      e.currentTarget = ancestors[i];
      rv &= goog.events.fireListeners_(targetsMap, ancestors[i], e.type, true, e) && e.returnValue_ != false
    }
  }
  var hasBubble = false in map;
  if(hasBubble) {
    targetsMap = map[false];
    targetsMap.remaining_ = targetsMap.count_;
    if(hasCapture) {
      for(var i = 0;!e.propagationStopped_ && i < ancestors.length && targetsMap.remaining_;i++) {
        e.currentTarget = ancestors[i];
        rv &= goog.events.fireListeners_(targetsMap, ancestors[i], e.type, false, e) && e.returnValue_ != false
      }
    }else {
      for(var current = src;!e.propagationStopped_ && current && targetsMap.remaining_;current = current.getParentEventTarget()) {
        e.currentTarget = current;
        rv &= goog.events.fireListeners_(targetsMap, current, e.type, false, e) && e.returnValue_ != false
      }
    }
  }
  return Boolean(rv)
};
goog.events.protectBrowserEventEntryPoint = function(errorHandler) {
  goog.events.handleBrowserEvent_ = errorHandler.protectEntryPoint(goog.events.handleBrowserEvent_);
  goog.events.pools.setProxyCallbackFunction(goog.events.handleBrowserEvent_)
};
goog.events.handleBrowserEvent_ = function(key, opt_evt) {
  if(!goog.events.listeners_[key]) {
    return true
  }
  var listener = goog.events.listeners_[key];
  var type = listener.type;
  var map = goog.events.listenerTree_;
  if(!(type in map)) {
    return true
  }
  map = map[type];
  var retval, targetsMap;
  if(goog.events.synthesizeEventPropagation_()) {
    var ieEvent = opt_evt || goog.getObjectByName("window.event");
    var hasCapture = true in map;
    var hasBubble = false in map;
    if(hasCapture) {
      if(goog.events.isMarkedIeEvent_(ieEvent)) {
        return true
      }
      goog.events.markIeEvent_(ieEvent)
    }
    var evt = goog.events.pools.getEvent();
    evt.init(ieEvent, this);
    retval = true;
    try {
      if(hasCapture) {
        var ancestors = goog.events.pools.getArray();
        for(var parent = evt.currentTarget;parent;parent = parent.parentNode) {
          ancestors.push(parent)
        }
        targetsMap = map[true];
        targetsMap.remaining_ = targetsMap.count_;
        for(var i = ancestors.length - 1;!evt.propagationStopped_ && i >= 0 && targetsMap.remaining_;i--) {
          evt.currentTarget = ancestors[i];
          retval &= goog.events.fireListeners_(targetsMap, ancestors[i], type, true, evt)
        }
        if(hasBubble) {
          targetsMap = map[false];
          targetsMap.remaining_ = targetsMap.count_;
          for(var i = 0;!evt.propagationStopped_ && i < ancestors.length && targetsMap.remaining_;i++) {
            evt.currentTarget = ancestors[i];
            retval &= goog.events.fireListeners_(targetsMap, ancestors[i], type, false, evt)
          }
        }
      }else {
        retval = goog.events.fireListener(listener, evt)
      }
    }finally {
      if(ancestors) {
        ancestors.length = 0;
        goog.events.pools.releaseArray(ancestors)
      }
      evt.dispose();
      goog.events.pools.releaseEvent(evt)
    }
    return retval
  }
  var be = new goog.events.BrowserEvent(opt_evt, this);
  try {
    retval = goog.events.fireListener(listener, be)
  }finally {
    be.dispose()
  }
  return retval
};
goog.events.pools.setProxyCallbackFunction(goog.events.handleBrowserEvent_);
goog.events.markIeEvent_ = function(e) {
  var useReturnValue = false;
  if(e.keyCode == 0) {
    try {
      e.keyCode = -1;
      return
    }catch(ex) {
      useReturnValue = true
    }
  }
  if(useReturnValue || e.returnValue == undefined) {
    e.returnValue = true
  }
};
goog.events.isMarkedIeEvent_ = function(e) {
  return e.keyCode < 0 || e.returnValue != undefined
};
goog.events.uniqueIdCounter_ = 0;
goog.events.getUniqueId = function(identifier) {
  return identifier + "_" + goog.events.uniqueIdCounter_++
};
goog.events.synthesizeEventPropagation_ = function() {
  if(goog.events.requiresSyntheticEventPropagation_ === undefined) {
    goog.events.requiresSyntheticEventPropagation_ = goog.userAgent.IE && !goog.global["addEventListener"]
  }
  return goog.events.requiresSyntheticEventPropagation_
};
goog.debug.entryPointRegistry.register(function(transformer) {
  goog.events.handleBrowserEvent_ = transformer(goog.events.handleBrowserEvent_);
  goog.events.pools.setProxyCallbackFunction(goog.events.handleBrowserEvent_)
});
goog.provide("goog.dom.BrowserFeature");
goog.require("goog.userAgent");
goog.dom.BrowserFeature = {CAN_ADD_NAME_OR_TYPE_ATTRIBUTES:!goog.userAgent.IE || goog.userAgent.isVersion("9"), CAN_USE_CHILDREN_ATTRIBUTE:!goog.userAgent.GECKO && !goog.userAgent.IE || goog.userAgent.IE && goog.userAgent.isVersion("9") || goog.userAgent.GECKO && goog.userAgent.isVersion("1.9.1"), CAN_USE_INNER_TEXT:goog.userAgent.IE && !goog.userAgent.isVersion("9"), INNER_HTML_NEEDS_SCOPED_ELEMENT:goog.userAgent.IE};
goog.provide("goog.dom.TagName");
goog.dom.TagName = {A:"A", ABBR:"ABBR", ACRONYM:"ACRONYM", ADDRESS:"ADDRESS", APPLET:"APPLET", AREA:"AREA", B:"B", BASE:"BASE", BASEFONT:"BASEFONT", BDO:"BDO", BIG:"BIG", BLOCKQUOTE:"BLOCKQUOTE", BODY:"BODY", BR:"BR", BUTTON:"BUTTON", CANVAS:"CANVAS", CAPTION:"CAPTION", CENTER:"CENTER", CITE:"CITE", CODE:"CODE", COL:"COL", COLGROUP:"COLGROUP", DD:"DD", DEL:"DEL", DFN:"DFN", DIR:"DIR", DIV:"DIV", DL:"DL", DT:"DT", EM:"EM", FIELDSET:"FIELDSET", FONT:"FONT", FORM:"FORM", FRAME:"FRAME", FRAMESET:"FRAMESET", 
H1:"H1", H2:"H2", H3:"H3", H4:"H4", H5:"H5", H6:"H6", HEAD:"HEAD", HR:"HR", HTML:"HTML", I:"I", IFRAME:"IFRAME", IMG:"IMG", INPUT:"INPUT", INS:"INS", ISINDEX:"ISINDEX", KBD:"KBD", LABEL:"LABEL", LEGEND:"LEGEND", LI:"LI", LINK:"LINK", MAP:"MAP", MENU:"MENU", META:"META", NOFRAMES:"NOFRAMES", NOSCRIPT:"NOSCRIPT", OBJECT:"OBJECT", OL:"OL", OPTGROUP:"OPTGROUP", OPTION:"OPTION", P:"P", PARAM:"PARAM", PRE:"PRE", Q:"Q", S:"S", SAMP:"SAMP", SCRIPT:"SCRIPT", SELECT:"SELECT", SMALL:"SMALL", SPAN:"SPAN", STRIKE:"STRIKE", 
STRONG:"STRONG", STYLE:"STYLE", SUB:"SUB", SUP:"SUP", TABLE:"TABLE", TBODY:"TBODY", TD:"TD", TEXTAREA:"TEXTAREA", TFOOT:"TFOOT", TH:"TH", THEAD:"THEAD", TITLE:"TITLE", TR:"TR", TT:"TT", U:"U", UL:"UL", VAR:"VAR"};
goog.provide("goog.dom.classes");
goog.require("goog.array");
goog.dom.classes.set = function(element, className) {
  element.className = className
};
goog.dom.classes.get = function(element) {
  var className = element.className;
  return className && typeof className.split == "function" ? className.split(/\s+/) : []
};
goog.dom.classes.add = function(element, var_args) {
  var classes = goog.dom.classes.get(element);
  var args = goog.array.slice(arguments, 1);
  var b = goog.dom.classes.add_(classes, args);
  element.className = classes.join(" ");
  return b
};
goog.dom.classes.remove = function(element, var_args) {
  var classes = goog.dom.classes.get(element);
  var args = goog.array.slice(arguments, 1);
  var b = goog.dom.classes.remove_(classes, args);
  element.className = classes.join(" ");
  return b
};
goog.dom.classes.add_ = function(classes, args) {
  var rv = 0;
  for(var i = 0;i < args.length;i++) {
    if(!goog.array.contains(classes, args[i])) {
      classes.push(args[i]);
      rv++
    }
  }
  return rv == args.length
};
goog.dom.classes.remove_ = function(classes, args) {
  var rv = 0;
  for(var i = 0;i < classes.length;i++) {
    if(goog.array.contains(args, classes[i])) {
      goog.array.splice(classes, i--, 1);
      rv++
    }
  }
  return rv == args.length
};
goog.dom.classes.swap = function(element, fromClass, toClass) {
  var classes = goog.dom.classes.get(element);
  var removed = false;
  for(var i = 0;i < classes.length;i++) {
    if(classes[i] == fromClass) {
      goog.array.splice(classes, i--, 1);
      removed = true
    }
  }
  if(removed) {
    classes.push(toClass);
    element.className = classes.join(" ")
  }
  return removed
};
goog.dom.classes.addRemove = function(element, classesToRemove, classesToAdd) {
  var classes = goog.dom.classes.get(element);
  if(goog.isString(classesToRemove)) {
    goog.array.remove(classes, classesToRemove)
  }else {
    if(goog.isArray(classesToRemove)) {
      goog.dom.classes.remove_(classes, classesToRemove)
    }
  }
  if(goog.isString(classesToAdd) && !goog.array.contains(classes, classesToAdd)) {
    classes.push(classesToAdd)
  }else {
    if(goog.isArray(classesToAdd)) {
      goog.dom.classes.add_(classes, classesToAdd)
    }
  }
  element.className = classes.join(" ")
};
goog.dom.classes.has = function(element, className) {
  return goog.array.contains(goog.dom.classes.get(element), className)
};
goog.dom.classes.enable = function(element, className, enabled) {
  if(enabled) {
    goog.dom.classes.add(element, className)
  }else {
    goog.dom.classes.remove(element, className)
  }
};
goog.dom.classes.toggle = function(element, className) {
  var add = !goog.dom.classes.has(element, className);
  goog.dom.classes.enable(element, className, add);
  return add
};
goog.provide("goog.math.Coordinate");
goog.math.Coordinate = function(opt_x, opt_y) {
  this.x = goog.isDef(opt_x) ? opt_x : 0;
  this.y = goog.isDef(opt_y) ? opt_y : 0
};
goog.math.Coordinate.prototype.clone = function() {
  return new goog.math.Coordinate(this.x, this.y)
};
if(goog.DEBUG) {
  goog.math.Coordinate.prototype.toString = function() {
    return"(" + this.x + ", " + this.y + ")"
  }
}
goog.math.Coordinate.equals = function(a, b) {
  if(a == b) {
    return true
  }
  if(!a || !b) {
    return false
  }
  return a.x == b.x && a.y == b.y
};
goog.math.Coordinate.distance = function(a, b) {
  var dx = a.x - b.x;
  var dy = a.y - b.y;
  return Math.sqrt(dx * dx + dy * dy)
};
goog.math.Coordinate.squaredDistance = function(a, b) {
  var dx = a.x - b.x;
  var dy = a.y - b.y;
  return dx * dx + dy * dy
};
goog.math.Coordinate.difference = function(a, b) {
  return new goog.math.Coordinate(a.x - b.x, a.y - b.y)
};
goog.math.Coordinate.sum = function(a, b) {
  return new goog.math.Coordinate(a.x + b.x, a.y + b.y)
};
goog.provide("goog.math.Size");
goog.math.Size = function(width, height) {
  this.width = width;
  this.height = height
};
goog.math.Size.equals = function(a, b) {
  if(a == b) {
    return true
  }
  if(!a || !b) {
    return false
  }
  return a.width == b.width && a.height == b.height
};
goog.math.Size.prototype.clone = function() {
  return new goog.math.Size(this.width, this.height)
};
if(goog.DEBUG) {
  goog.math.Size.prototype.toString = function() {
    return"(" + this.width + " x " + this.height + ")"
  }
}
goog.math.Size.prototype.getLongest = function() {
  return Math.max(this.width, this.height)
};
goog.math.Size.prototype.getShortest = function() {
  return Math.min(this.width, this.height)
};
goog.math.Size.prototype.area = function() {
  return this.width * this.height
};
goog.math.Size.prototype.perimeter = function() {
  return(this.width + this.height) * 2
};
goog.math.Size.prototype.aspectRatio = function() {
  return this.width / this.height
};
goog.math.Size.prototype.isEmpty = function() {
  return!this.area()
};
goog.math.Size.prototype.ceil = function() {
  this.width = Math.ceil(this.width);
  this.height = Math.ceil(this.height);
  return this
};
goog.math.Size.prototype.fitsInside = function(target) {
  return this.width <= target.width && this.height <= target.height
};
goog.math.Size.prototype.floor = function() {
  this.width = Math.floor(this.width);
  this.height = Math.floor(this.height);
  return this
};
goog.math.Size.prototype.round = function() {
  this.width = Math.round(this.width);
  this.height = Math.round(this.height);
  return this
};
goog.math.Size.prototype.scale = function(s) {
  this.width *= s;
  this.height *= s;
  return this
};
goog.math.Size.prototype.scaleToFit = function(target) {
  var s = this.aspectRatio() > target.aspectRatio() ? target.width / this.width : target.height / this.height;
  return this.scale(s)
};
goog.provide("goog.dom");
goog.provide("goog.dom.DomHelper");
goog.provide("goog.dom.NodeType");
goog.require("goog.array");
goog.require("goog.dom.BrowserFeature");
goog.require("goog.dom.TagName");
goog.require("goog.dom.classes");
goog.require("goog.math.Coordinate");
goog.require("goog.math.Size");
goog.require("goog.object");
goog.require("goog.string");
goog.require("goog.userAgent");
goog.dom.ASSUME_QUIRKS_MODE = false;
goog.dom.ASSUME_STANDARDS_MODE = false;
goog.dom.COMPAT_MODE_KNOWN_ = goog.dom.ASSUME_QUIRKS_MODE || goog.dom.ASSUME_STANDARDS_MODE;
goog.dom.NodeType = {ELEMENT:1, ATTRIBUTE:2, TEXT:3, CDATA_SECTION:4, ENTITY_REFERENCE:5, ENTITY:6, PROCESSING_INSTRUCTION:7, COMMENT:8, DOCUMENT:9, DOCUMENT_TYPE:10, DOCUMENT_FRAGMENT:11, NOTATION:12};
goog.dom.getDomHelper = function(opt_element) {
  return opt_element ? new goog.dom.DomHelper(goog.dom.getOwnerDocument(opt_element)) : goog.dom.defaultDomHelper_ || (goog.dom.defaultDomHelper_ = new goog.dom.DomHelper)
};
goog.dom.defaultDomHelper_;
goog.dom.getDocument = function() {
  return document
};
goog.dom.getElement = function(element) {
  return goog.isString(element) ? document.getElementById(element) : element
};
goog.dom.$ = goog.dom.getElement;
goog.dom.getElementsByTagNameAndClass = function(opt_tag, opt_class, opt_el) {
  return goog.dom.getElementsByTagNameAndClass_(document, opt_tag, opt_class, opt_el)
};
goog.dom.getElementsByClass = function(className, opt_el) {
  var parent = opt_el || document;
  if(goog.dom.canUseQuerySelector_(parent)) {
    return parent.querySelectorAll("." + className)
  }else {
    if(parent.getElementsByClassName) {
      return parent.getElementsByClassName(className)
    }
  }
  return goog.dom.getElementsByTagNameAndClass_(document, "*", className, opt_el)
};
goog.dom.getElementByClass = function(className, opt_el) {
  var parent = opt_el || document;
  var retVal = null;
  if(goog.dom.canUseQuerySelector_(parent)) {
    retVal = parent.querySelector("." + className)
  }else {
    retVal = goog.dom.getElementsByClass(className, opt_el)[0]
  }
  return retVal || null
};
goog.dom.canUseQuerySelector_ = function(parent) {
  return parent.querySelectorAll && parent.querySelector && (!goog.userAgent.WEBKIT || goog.dom.isCss1CompatMode_(document) || goog.userAgent.isVersion("528"))
};
goog.dom.getElementsByTagNameAndClass_ = function(doc, opt_tag, opt_class, opt_el) {
  var parent = opt_el || doc;
  var tagName = opt_tag && opt_tag != "*" ? opt_tag.toUpperCase() : "";
  if(goog.dom.canUseQuerySelector_(parent) && (tagName || opt_class)) {
    var query = tagName + (opt_class ? "." + opt_class : "");
    return parent.querySelectorAll(query)
  }
  if(opt_class && parent.getElementsByClassName) {
    var els = parent.getElementsByClassName(opt_class);
    if(tagName) {
      var arrayLike = {};
      var len = 0;
      for(var i = 0, el;el = els[i];i++) {
        if(tagName == el.nodeName) {
          arrayLike[len++] = el
        }
      }
      arrayLike.length = len;
      return arrayLike
    }else {
      return els
    }
  }
  var els = parent.getElementsByTagName(tagName || "*");
  if(opt_class) {
    var arrayLike = {};
    var len = 0;
    for(var i = 0, el;el = els[i];i++) {
      var className = el.className;
      if(typeof className.split == "function" && goog.array.contains(className.split(/\s+/), opt_class)) {
        arrayLike[len++] = el
      }
    }
    arrayLike.length = len;
    return arrayLike
  }else {
    return els
  }
};
goog.dom.$$ = goog.dom.getElementsByTagNameAndClass;
goog.dom.setProperties = function(element, properties) {
  goog.object.forEach(properties, function(val, key) {
    if(key == "style") {
      element.style.cssText = val
    }else {
      if(key == "class") {
        element.className = val
      }else {
        if(key == "for") {
          element.htmlFor = val
        }else {
          if(key in goog.dom.DIRECT_ATTRIBUTE_MAP_) {
            element.setAttribute(goog.dom.DIRECT_ATTRIBUTE_MAP_[key], val)
          }else {
            element[key] = val
          }
        }
      }
    }
  })
};
goog.dom.DIRECT_ATTRIBUTE_MAP_ = {"cellpadding":"cellPadding", "cellspacing":"cellSpacing", "colspan":"colSpan", "rowspan":"rowSpan", "valign":"vAlign", "height":"height", "width":"width", "usemap":"useMap", "frameborder":"frameBorder", "maxlength":"maxLength", "type":"type"};
goog.dom.getViewportSize = function(opt_window) {
  return goog.dom.getViewportSize_(opt_window || window)
};
goog.dom.getViewportSize_ = function(win) {
  var doc = win.document;
  if(goog.userAgent.WEBKIT && !goog.userAgent.isVersion("500") && !goog.userAgent.MOBILE) {
    if(typeof win.innerHeight == "undefined") {
      win = window
    }
    var innerHeight = win.innerHeight;
    var scrollHeight = win.document.documentElement.scrollHeight;
    if(win == win.top) {
      if(scrollHeight < innerHeight) {
        innerHeight -= 15
      }
    }
    return new goog.math.Size(win.innerWidth, innerHeight)
  }
  var el = goog.dom.isCss1CompatMode_(doc) ? doc.documentElement : doc.body;
  return new goog.math.Size(el.clientWidth, el.clientHeight)
};
goog.dom.getDocumentHeight = function() {
  return goog.dom.getDocumentHeight_(window)
};
goog.dom.getDocumentHeight_ = function(win) {
  var doc = win.document;
  var height = 0;
  if(doc) {
    var vh = goog.dom.getViewportSize_(win).height;
    var body = doc.body;
    var docEl = doc.documentElement;
    if(goog.dom.isCss1CompatMode_(doc) && docEl.scrollHeight) {
      height = docEl.scrollHeight != vh ? docEl.scrollHeight : docEl.offsetHeight
    }else {
      var sh = docEl.scrollHeight;
      var oh = docEl.offsetHeight;
      if(docEl.clientHeight != oh) {
        sh = body.scrollHeight;
        oh = body.offsetHeight
      }
      if(sh > vh) {
        height = sh > oh ? sh : oh
      }else {
        height = sh < oh ? sh : oh
      }
    }
  }
  return height
};
goog.dom.getPageScroll = function(opt_window) {
  var win = opt_window || goog.global || window;
  return goog.dom.getDomHelper(win.document).getDocumentScroll()
};
goog.dom.getDocumentScroll = function() {
  return goog.dom.getDocumentScroll_(document)
};
goog.dom.getDocumentScroll_ = function(doc) {
  var el = goog.dom.getDocumentScrollElement_(doc);
  var win = goog.dom.getWindow_(doc);
  return new goog.math.Coordinate(win.pageXOffset || el.scrollLeft, win.pageYOffset || el.scrollTop)
};
goog.dom.getDocumentScrollElement = function() {
  return goog.dom.getDocumentScrollElement_(document)
};
goog.dom.getDocumentScrollElement_ = function(doc) {
  return!goog.userAgent.WEBKIT && goog.dom.isCss1CompatMode_(doc) ? doc.documentElement : doc.body
};
goog.dom.getWindow = function(opt_doc) {
  return opt_doc ? goog.dom.getWindow_(opt_doc) : window
};
goog.dom.getWindow_ = function(doc) {
  return doc.parentWindow || doc.defaultView
};
goog.dom.createDom = function(tagName, opt_attributes, var_args) {
  return goog.dom.createDom_(document, arguments)
};
goog.dom.createDom_ = function(doc, args) {
  var tagName = args[0];
  var attributes = args[1];
  if(!goog.dom.BrowserFeature.CAN_ADD_NAME_OR_TYPE_ATTRIBUTES && attributes && (attributes.name || attributes.type)) {
    var tagNameArr = ["<", tagName];
    if(attributes.name) {
      tagNameArr.push(' name="', goog.string.htmlEscape(attributes.name), '"')
    }
    if(attributes.type) {
      tagNameArr.push(' type="', goog.string.htmlEscape(attributes.type), '"');
      var clone = {};
      goog.object.extend(clone, attributes);
      attributes = clone;
      delete attributes.type
    }
    tagNameArr.push(">");
    tagName = tagNameArr.join("")
  }
  var element = doc.createElement(tagName);
  if(attributes) {
    if(goog.isString(attributes)) {
      element.className = attributes
    }else {
      if(goog.isArray(attributes)) {
        goog.dom.classes.add.apply(null, [element].concat(attributes))
      }else {
        goog.dom.setProperties(element, attributes)
      }
    }
  }
  if(args.length > 2) {
    goog.dom.append_(doc, element, args, 2)
  }
  return element
};
goog.dom.append_ = function(doc, parent, args, startIndex) {
  function childHandler(child) {
    if(child) {
      parent.appendChild(goog.isString(child) ? doc.createTextNode(child) : child)
    }
  }
  for(var i = startIndex;i < args.length;i++) {
    var arg = args[i];
    if(goog.isArrayLike(arg) && !goog.dom.isNodeLike(arg)) {
      goog.array.forEach(goog.dom.isNodeList(arg) ? goog.array.clone(arg) : arg, childHandler)
    }else {
      childHandler(arg)
    }
  }
};
goog.dom.$dom = goog.dom.createDom;
goog.dom.createElement = function(name) {
  return document.createElement(name)
};
goog.dom.createTextNode = function(content) {
  return document.createTextNode(content)
};
goog.dom.createTable = function(rows, columns, opt_fillWithNbsp) {
  return goog.dom.createTable_(document, rows, columns, !!opt_fillWithNbsp)
};
goog.dom.createTable_ = function(doc, rows, columns, fillWithNbsp) {
  var rowHtml = ["<tr>"];
  for(var i = 0;i < columns;i++) {
    rowHtml.push(fillWithNbsp ? "<td>&nbsp;</td>" : "<td></td>")
  }
  rowHtml.push("</tr>");
  rowHtml = rowHtml.join("");
  var totalHtml = ["<table>"];
  for(i = 0;i < rows;i++) {
    totalHtml.push(rowHtml)
  }
  totalHtml.push("</table>");
  var elem = doc.createElement(goog.dom.TagName.DIV);
  elem.innerHTML = totalHtml.join("");
  return elem.removeChild(elem.firstChild)
};
goog.dom.htmlToDocumentFragment = function(htmlString) {
  return goog.dom.htmlToDocumentFragment_(document, htmlString)
};
goog.dom.htmlToDocumentFragment_ = function(doc, htmlString) {
  var tempDiv = doc.createElement("div");
  if(goog.dom.BrowserFeature.INNER_HTML_NEEDS_SCOPED_ELEMENT) {
    tempDiv.innerHTML = "<br>" + htmlString;
    tempDiv.removeChild(tempDiv.firstChild)
  }else {
    tempDiv.innerHTML = htmlString
  }
  if(tempDiv.childNodes.length == 1) {
    return tempDiv.removeChild(tempDiv.firstChild)
  }else {
    var fragment = doc.createDocumentFragment();
    while(tempDiv.firstChild) {
      fragment.appendChild(tempDiv.firstChild)
    }
    return fragment
  }
};
goog.dom.getCompatMode = function() {
  return goog.dom.isCss1CompatMode() ? "CSS1Compat" : "BackCompat"
};
goog.dom.isCss1CompatMode = function() {
  return goog.dom.isCss1CompatMode_(document)
};
goog.dom.isCss1CompatMode_ = function(doc) {
  if(goog.dom.COMPAT_MODE_KNOWN_) {
    return goog.dom.ASSUME_STANDARDS_MODE
  }
  return doc.compatMode == "CSS1Compat"
};
goog.dom.canHaveChildren = function(node) {
  if(node.nodeType != goog.dom.NodeType.ELEMENT) {
    return false
  }
  switch(node.tagName) {
    case goog.dom.TagName.APPLET:
    ;
    case goog.dom.TagName.AREA:
    ;
    case goog.dom.TagName.BASE:
    ;
    case goog.dom.TagName.BR:
    ;
    case goog.dom.TagName.COL:
    ;
    case goog.dom.TagName.FRAME:
    ;
    case goog.dom.TagName.HR:
    ;
    case goog.dom.TagName.IMG:
    ;
    case goog.dom.TagName.INPUT:
    ;
    case goog.dom.TagName.IFRAME:
    ;
    case goog.dom.TagName.ISINDEX:
    ;
    case goog.dom.TagName.LINK:
    ;
    case goog.dom.TagName.NOFRAMES:
    ;
    case goog.dom.TagName.NOSCRIPT:
    ;
    case goog.dom.TagName.META:
    ;
    case goog.dom.TagName.OBJECT:
    ;
    case goog.dom.TagName.PARAM:
    ;
    case goog.dom.TagName.SCRIPT:
    ;
    case goog.dom.TagName.STYLE:
      return false
  }
  return true
};
goog.dom.appendChild = function(parent, child) {
  parent.appendChild(child)
};
goog.dom.append = function(parent, var_args) {
  goog.dom.append_(goog.dom.getOwnerDocument(parent), parent, arguments, 1)
};
goog.dom.removeChildren = function(node) {
  var child;
  while(child = node.firstChild) {
    node.removeChild(child)
  }
};
goog.dom.insertSiblingBefore = function(newNode, refNode) {
  if(refNode.parentNode) {
    refNode.parentNode.insertBefore(newNode, refNode)
  }
};
goog.dom.insertSiblingAfter = function(newNode, refNode) {
  if(refNode.parentNode) {
    refNode.parentNode.insertBefore(newNode, refNode.nextSibling)
  }
};
goog.dom.insertChildAt = function(parent, child, index) {
  parent.insertBefore(child, parent.childNodes[index] || null)
};
goog.dom.removeNode = function(node) {
  return node && node.parentNode ? node.parentNode.removeChild(node) : null
};
goog.dom.replaceNode = function(newNode, oldNode) {
  var parent = oldNode.parentNode;
  if(parent) {
    parent.replaceChild(newNode, oldNode)
  }
};
goog.dom.flattenElement = function(element) {
  var child, parent = element.parentNode;
  if(parent && parent.nodeType != goog.dom.NodeType.DOCUMENT_FRAGMENT) {
    if(element.removeNode) {
      return element.removeNode(false)
    }else {
      while(child = element.firstChild) {
        parent.insertBefore(child, element)
      }
      return goog.dom.removeNode(element)
    }
  }
};
goog.dom.getChildren = function(element) {
  if(goog.dom.BrowserFeature.CAN_USE_CHILDREN_ATTRIBUTE && element.children != undefined) {
    return element.children
  }
  return goog.array.filter(element.childNodes, function(node) {
    return node.nodeType == goog.dom.NodeType.ELEMENT
  })
};
goog.dom.getFirstElementChild = function(node) {
  if(node.firstElementChild != undefined) {
    return node.firstElementChild
  }
  return goog.dom.getNextElementNode_(node.firstChild, true)
};
goog.dom.getLastElementChild = function(node) {
  if(node.lastElementChild != undefined) {
    return node.lastElementChild
  }
  return goog.dom.getNextElementNode_(node.lastChild, false)
};
goog.dom.getNextElementSibling = function(node) {
  if(node.nextElementSibling != undefined) {
    return node.nextElementSibling
  }
  return goog.dom.getNextElementNode_(node.nextSibling, true)
};
goog.dom.getPreviousElementSibling = function(node) {
  if(node.previousElementSibling != undefined) {
    return node.previousElementSibling
  }
  return goog.dom.getNextElementNode_(node.previousSibling, false)
};
goog.dom.getNextElementNode_ = function(node, forward) {
  while(node && node.nodeType != goog.dom.NodeType.ELEMENT) {
    node = forward ? node.nextSibling : node.previousSibling
  }
  return node
};
goog.dom.getNextNode = function(node) {
  if(!node) {
    return null
  }
  if(node.firstChild) {
    return node.firstChild
  }
  while(node && !node.nextSibling) {
    node = node.parentNode
  }
  return node ? node.nextSibling : null
};
goog.dom.getPreviousNode = function(node) {
  if(!node) {
    return null
  }
  if(!node.previousSibling) {
    return node.parentNode
  }
  node = node.previousSibling;
  while(node && node.lastChild) {
    node = node.lastChild
  }
  return node
};
goog.dom.isNodeLike = function(obj) {
  return goog.isObject(obj) && obj.nodeType > 0
};
goog.dom.isWindow = function(obj) {
  return goog.isObject(obj) && obj["window"] == obj
};
goog.dom.contains = function(parent, descendant) {
  if(parent.contains && descendant.nodeType == goog.dom.NodeType.ELEMENT) {
    return parent == descendant || parent.contains(descendant)
  }
  if(typeof parent.compareDocumentPosition != "undefined") {
    return parent == descendant || Boolean(parent.compareDocumentPosition(descendant) & 16)
  }
  while(descendant && parent != descendant) {
    descendant = descendant.parentNode
  }
  return descendant == parent
};
goog.dom.compareNodeOrder = function(node1, node2) {
  if(node1 == node2) {
    return 0
  }
  if(node1.compareDocumentPosition) {
    return node1.compareDocumentPosition(node2) & 2 ? 1 : -1
  }
  if("sourceIndex" in node1 || node1.parentNode && "sourceIndex" in node1.parentNode) {
    var isElement1 = node1.nodeType == goog.dom.NodeType.ELEMENT;
    var isElement2 = node2.nodeType == goog.dom.NodeType.ELEMENT;
    if(isElement1 && isElement2) {
      return node1.sourceIndex - node2.sourceIndex
    }else {
      var parent1 = node1.parentNode;
      var parent2 = node2.parentNode;
      if(parent1 == parent2) {
        return goog.dom.compareSiblingOrder_(node1, node2)
      }
      if(!isElement1 && goog.dom.contains(parent1, node2)) {
        return-1 * goog.dom.compareParentsDescendantNodeIe_(node1, node2)
      }
      if(!isElement2 && goog.dom.contains(parent2, node1)) {
        return goog.dom.compareParentsDescendantNodeIe_(node2, node1)
      }
      return(isElement1 ? node1.sourceIndex : parent1.sourceIndex) - (isElement2 ? node2.sourceIndex : parent2.sourceIndex)
    }
  }
  var doc = goog.dom.getOwnerDocument(node1);
  var range1, range2;
  range1 = doc.createRange();
  range1.selectNode(node1);
  range1.collapse(true);
  range2 = doc.createRange();
  range2.selectNode(node2);
  range2.collapse(true);
  return range1.compareBoundaryPoints(goog.global["Range"].START_TO_END, range2)
};
goog.dom.compareParentsDescendantNodeIe_ = function(textNode, node) {
  var parent = textNode.parentNode;
  if(parent == node) {
    return-1
  }
  var sibling = node;
  while(sibling.parentNode != parent) {
    sibling = sibling.parentNode
  }
  return goog.dom.compareSiblingOrder_(sibling, textNode)
};
goog.dom.compareSiblingOrder_ = function(node1, node2) {
  var s = node2;
  while(s = s.previousSibling) {
    if(s == node1) {
      return-1
    }
  }
  return 1
};
goog.dom.findCommonAncestor = function(var_args) {
  var i, count = arguments.length;
  if(!count) {
    return null
  }else {
    if(count == 1) {
      return arguments[0]
    }
  }
  var paths = [];
  var minLength = Infinity;
  for(i = 0;i < count;i++) {
    var ancestors = [];
    var node = arguments[i];
    while(node) {
      ancestors.unshift(node);
      node = node.parentNode
    }
    paths.push(ancestors);
    minLength = Math.min(minLength, ancestors.length)
  }
  var output = null;
  for(i = 0;i < minLength;i++) {
    var first = paths[0][i];
    for(var j = 1;j < count;j++) {
      if(first != paths[j][i]) {
        return output
      }
    }
    output = first
  }
  return output
};
goog.dom.getOwnerDocument = function(node) {
  return node.nodeType == goog.dom.NodeType.DOCUMENT ? node : node.ownerDocument || node.document
};
goog.dom.getFrameContentDocument = function(frame) {
  var doc;
  if(goog.userAgent.WEBKIT) {
    doc = frame.document || frame.contentWindow.document
  }else {
    doc = frame.contentDocument || frame.contentWindow.document
  }
  return doc
};
goog.dom.getFrameContentWindow = function(frame) {
  return frame.contentWindow || goog.dom.getWindow_(goog.dom.getFrameContentDocument(frame))
};
goog.dom.setTextContent = function(element, text) {
  if("textContent" in element) {
    element.textContent = text
  }else {
    if(element.firstChild && element.firstChild.nodeType == goog.dom.NodeType.TEXT) {
      while(element.lastChild != element.firstChild) {
        element.removeChild(element.lastChild)
      }
      element.firstChild.data = text
    }else {
      goog.dom.removeChildren(element);
      var doc = goog.dom.getOwnerDocument(element);
      element.appendChild(doc.createTextNode(text))
    }
  }
};
goog.dom.getOuterHtml = function(element) {
  if("outerHTML" in element) {
    return element.outerHTML
  }else {
    var doc = goog.dom.getOwnerDocument(element);
    var div = doc.createElement("div");
    div.appendChild(element.cloneNode(true));
    return div.innerHTML
  }
};
goog.dom.findNode = function(root, p) {
  var rv = [];
  var found = goog.dom.findNodes_(root, p, rv, true);
  return found ? rv[0] : undefined
};
goog.dom.findNodes = function(root, p) {
  var rv = [];
  goog.dom.findNodes_(root, p, rv, false);
  return rv
};
goog.dom.findNodes_ = function(root, p, rv, findOne) {
  if(root != null) {
    for(var i = 0, child;child = root.childNodes[i];i++) {
      if(p(child)) {
        rv.push(child);
        if(findOne) {
          return true
        }
      }
      if(goog.dom.findNodes_(child, p, rv, findOne)) {
        return true
      }
    }
  }
  return false
};
goog.dom.TAGS_TO_IGNORE_ = {"SCRIPT":1, "STYLE":1, "HEAD":1, "IFRAME":1, "OBJECT":1};
goog.dom.PREDEFINED_TAG_VALUES_ = {"IMG":" ", "BR":"\n"};
goog.dom.isFocusableTabIndex = function(element) {
  var attrNode = element.getAttributeNode("tabindex");
  if(attrNode && attrNode.specified) {
    var index = element.tabIndex;
    return goog.isNumber(index) && index >= 0
  }
  return false
};
goog.dom.setFocusableTabIndex = function(element, enable) {
  if(enable) {
    element.tabIndex = 0
  }else {
    element.removeAttribute("tabIndex")
  }
};
goog.dom.getTextContent = function(node) {
  var textContent;
  if(goog.dom.BrowserFeature.CAN_USE_INNER_TEXT && "innerText" in node) {
    textContent = goog.string.canonicalizeNewlines(node.innerText)
  }else {
    var buf = [];
    goog.dom.getTextContent_(node, buf, true);
    textContent = buf.join("")
  }
  textContent = textContent.replace(/ \xAD /g, " ").replace(/\xAD/g, "");
  textContent = textContent.replace(/\u200B/g, "");
  if(!goog.userAgent.IE) {
    textContent = textContent.replace(/ +/g, " ")
  }
  if(textContent != " ") {
    textContent = textContent.replace(/^\s*/, "")
  }
  return textContent
};
goog.dom.getRawTextContent = function(node) {
  var buf = [];
  goog.dom.getTextContent_(node, buf, false);
  return buf.join("")
};
goog.dom.getTextContent_ = function(node, buf, normalizeWhitespace) {
  if(node.nodeName in goog.dom.TAGS_TO_IGNORE_) {
  }else {
    if(node.nodeType == goog.dom.NodeType.TEXT) {
      if(normalizeWhitespace) {
        buf.push(String(node.nodeValue).replace(/(\r\n|\r|\n)/g, ""))
      }else {
        buf.push(node.nodeValue)
      }
    }else {
      if(node.nodeName in goog.dom.PREDEFINED_TAG_VALUES_) {
        buf.push(goog.dom.PREDEFINED_TAG_VALUES_[node.nodeName])
      }else {
        var child = node.firstChild;
        while(child) {
          goog.dom.getTextContent_(child, buf, normalizeWhitespace);
          child = child.nextSibling
        }
      }
    }
  }
};
goog.dom.getNodeTextLength = function(node) {
  return goog.dom.getTextContent(node).length
};
goog.dom.getNodeTextOffset = function(node, opt_offsetParent) {
  var root = opt_offsetParent || goog.dom.getOwnerDocument(node).body;
  var buf = [];
  while(node && node != root) {
    var cur = node;
    while(cur = cur.previousSibling) {
      buf.unshift(goog.dom.getTextContent(cur))
    }
    node = node.parentNode
  }
  return goog.string.trimLeft(buf.join("")).replace(/ +/g, " ").length
};
goog.dom.getNodeAtOffset = function(parent, offset, opt_result) {
  var stack = [parent], pos = 0, cur;
  while(stack.length > 0 && pos < offset) {
    cur = stack.pop();
    if(cur.nodeName in goog.dom.TAGS_TO_IGNORE_) {
    }else {
      if(cur.nodeType == goog.dom.NodeType.TEXT) {
        var text = cur.nodeValue.replace(/(\r\n|\r|\n)/g, "").replace(/ +/g, " ");
        pos += text.length
      }else {
        if(cur.nodeName in goog.dom.PREDEFINED_TAG_VALUES_) {
          pos += goog.dom.PREDEFINED_TAG_VALUES_[cur.nodeName].length
        }else {
          for(var i = cur.childNodes.length - 1;i >= 0;i--) {
            stack.push(cur.childNodes[i])
          }
        }
      }
    }
  }
  if(goog.isObject(opt_result)) {
    opt_result.remainder = cur ? cur.nodeValue.length + offset - pos - 1 : 0;
    opt_result.node = cur
  }
  return cur
};
goog.dom.isNodeList = function(val) {
  if(val && typeof val.length == "number") {
    if(goog.isObject(val)) {
      return typeof val.item == "function" || typeof val.item == "string"
    }else {
      if(goog.isFunction(val)) {
        return typeof val.item == "function"
      }
    }
  }
  return false
};
goog.dom.getAncestorByTagNameAndClass = function(element, opt_tag, opt_class) {
  var tagName = opt_tag ? opt_tag.toUpperCase() : null;
  return goog.dom.getAncestor(element, function(node) {
    return(!tagName || node.nodeName == tagName) && (!opt_class || goog.dom.classes.has(node, opt_class))
  }, true)
};
goog.dom.getAncestorByClass = function(element, opt_class) {
  return goog.dom.getAncestorByTagNameAndClass(element, null, opt_class)
};
goog.dom.getAncestor = function(element, matcher, opt_includeNode, opt_maxSearchSteps) {
  if(!opt_includeNode) {
    element = element.parentNode
  }
  var ignoreSearchSteps = opt_maxSearchSteps == null;
  var steps = 0;
  while(element && (ignoreSearchSteps || steps <= opt_maxSearchSteps)) {
    if(matcher(element)) {
      return element
    }
    element = element.parentNode;
    steps++
  }
  return null
};
goog.dom.DomHelper = function(opt_document) {
  this.document_ = opt_document || goog.global.document || document
};
goog.dom.DomHelper.prototype.getDomHelper = goog.dom.getDomHelper;
goog.dom.DomHelper.prototype.setDocument = function(document) {
  this.document_ = document
};
goog.dom.DomHelper.prototype.getDocument = function() {
  return this.document_
};
goog.dom.DomHelper.prototype.getElement = function(element) {
  if(goog.isString(element)) {
    return this.document_.getElementById(element)
  }else {
    return element
  }
};
goog.dom.DomHelper.prototype.$ = goog.dom.DomHelper.prototype.getElement;
goog.dom.DomHelper.prototype.getElementsByTagNameAndClass = function(opt_tag, opt_class, opt_el) {
  return goog.dom.getElementsByTagNameAndClass_(this.document_, opt_tag, opt_class, opt_el)
};
goog.dom.DomHelper.prototype.getElementsByClass = function(className, opt_el) {
  var doc = opt_el || this.document_;
  return goog.dom.getElementsByClass(className, doc)
};
goog.dom.DomHelper.prototype.getElementByClass = function(className, opt_el) {
  var doc = opt_el || this.document_;
  return goog.dom.getElementByClass(className, doc)
};
goog.dom.DomHelper.prototype.$$ = goog.dom.DomHelper.prototype.getElementsByTagNameAndClass;
goog.dom.DomHelper.prototype.setProperties = goog.dom.setProperties;
goog.dom.DomHelper.prototype.getViewportSize = function(opt_window) {
  return goog.dom.getViewportSize(opt_window || this.getWindow())
};
goog.dom.DomHelper.prototype.getDocumentHeight = function() {
  return goog.dom.getDocumentHeight_(this.getWindow())
};
goog.dom.Appendable;
goog.dom.DomHelper.prototype.createDom = function(tagName, opt_attributes, var_args) {
  return goog.dom.createDom_(this.document_, arguments)
};
goog.dom.DomHelper.prototype.$dom = goog.dom.DomHelper.prototype.createDom;
goog.dom.DomHelper.prototype.createElement = function(name) {
  return this.document_.createElement(name)
};
goog.dom.DomHelper.prototype.createTextNode = function(content) {
  return this.document_.createTextNode(content)
};
goog.dom.DomHelper.prototype.createTable = function(rows, columns, opt_fillWithNbsp) {
  return goog.dom.createTable_(this.document_, rows, columns, !!opt_fillWithNbsp)
};
goog.dom.DomHelper.prototype.htmlToDocumentFragment = function(htmlString) {
  return goog.dom.htmlToDocumentFragment_(this.document_, htmlString)
};
goog.dom.DomHelper.prototype.getCompatMode = function() {
  return this.isCss1CompatMode() ? "CSS1Compat" : "BackCompat"
};
goog.dom.DomHelper.prototype.isCss1CompatMode = function() {
  return goog.dom.isCss1CompatMode_(this.document_)
};
goog.dom.DomHelper.prototype.getWindow = function() {
  return goog.dom.getWindow_(this.document_)
};
goog.dom.DomHelper.prototype.getDocumentScrollElement = function() {
  return goog.dom.getDocumentScrollElement_(this.document_)
};
goog.dom.DomHelper.prototype.getDocumentScroll = function() {
  return goog.dom.getDocumentScroll_(this.document_)
};
goog.dom.DomHelper.prototype.appendChild = goog.dom.appendChild;
goog.dom.DomHelper.prototype.append = goog.dom.append;
goog.dom.DomHelper.prototype.removeChildren = goog.dom.removeChildren;
goog.dom.DomHelper.prototype.insertSiblingBefore = goog.dom.insertSiblingBefore;
goog.dom.DomHelper.prototype.insertSiblingAfter = goog.dom.insertSiblingAfter;
goog.dom.DomHelper.prototype.removeNode = goog.dom.removeNode;
goog.dom.DomHelper.prototype.replaceNode = goog.dom.replaceNode;
goog.dom.DomHelper.prototype.flattenElement = goog.dom.flattenElement;
goog.dom.DomHelper.prototype.getFirstElementChild = goog.dom.getFirstElementChild;
goog.dom.DomHelper.prototype.getLastElementChild = goog.dom.getLastElementChild;
goog.dom.DomHelper.prototype.getNextElementSibling = goog.dom.getNextElementSibling;
goog.dom.DomHelper.prototype.getPreviousElementSibling = goog.dom.getPreviousElementSibling;
goog.dom.DomHelper.prototype.getNextNode = goog.dom.getNextNode;
goog.dom.DomHelper.prototype.getPreviousNode = goog.dom.getPreviousNode;
goog.dom.DomHelper.prototype.isNodeLike = goog.dom.isNodeLike;
goog.dom.DomHelper.prototype.contains = goog.dom.contains;
goog.dom.DomHelper.prototype.getOwnerDocument = goog.dom.getOwnerDocument;
goog.dom.DomHelper.prototype.getFrameContentDocument = goog.dom.getFrameContentDocument;
goog.dom.DomHelper.prototype.getFrameContentWindow = goog.dom.getFrameContentWindow;
goog.dom.DomHelper.prototype.setTextContent = goog.dom.setTextContent;
goog.dom.DomHelper.prototype.findNode = goog.dom.findNode;
goog.dom.DomHelper.prototype.findNodes = goog.dom.findNodes;
goog.dom.DomHelper.prototype.getTextContent = goog.dom.getTextContent;
goog.dom.DomHelper.prototype.getNodeTextLength = goog.dom.getNodeTextLength;
goog.dom.DomHelper.prototype.getNodeTextOffset = goog.dom.getNodeTextOffset;
goog.dom.DomHelper.prototype.getAncestorByTagNameAndClass = goog.dom.getAncestorByTagNameAndClass;
goog.dom.DomHelper.prototype.getAncestor = goog.dom.getAncestor;
goog.provide("domina.support");
goog.require("cljs.core");
goog.require("goog.events");
goog.require("goog.dom");
var div__11609 = document.createElement("div");
var test_html__11610 = "   <link/><table></table><a href='/a' style='top:1px;float:left;opacity:.55;'>a</a><input type='checkbox'/>";
div__11609.innerHTML = test_html__11610;
domina.support.leading_whitespace_QMARK_ = cljs.core._EQ_.call(null, div__11609.firstChild.nodeType, 3);
domina.support.extraneous_tbody_QMARK_ = cljs.core._EQ_.call(null, div__11609.getElementsByTagName("tbody").length, 0);
domina.support.unscoped_html_elements_QMARK_ = cljs.core._EQ_.call(null, div__11609.getElementsByTagName("link").length, 0);
goog.provide("goog.dom.xml");
goog.require("goog.dom");
goog.require("goog.dom.NodeType");
goog.dom.xml.MAX_XML_SIZE_KB = 2 * 1024;
goog.dom.xml.MAX_ELEMENT_DEPTH = 256;
goog.dom.xml.createDocument = function(opt_rootTagName, opt_namespaceUri) {
  if(opt_namespaceUri && !opt_rootTagName) {
    throw Error("Can't create document with namespace and no root tag");
  }
  if(document.implementation && document.implementation.createDocument) {
    return document.implementation.createDocument(opt_namespaceUri || "", opt_rootTagName || "", null)
  }else {
    if(typeof ActiveXObject != "undefined") {
      var doc = goog.dom.xml.createMsXmlDocument_();
      if(doc) {
        if(opt_rootTagName) {
          doc.appendChild(doc.createNode(goog.dom.NodeType.ELEMENT, opt_rootTagName, opt_namespaceUri || ""))
        }
        return doc
      }
    }
  }
  throw Error("Your browser does not support creating new documents");
};
goog.dom.xml.loadXml = function(xml) {
  if(typeof DOMParser != "undefined") {
    return(new DOMParser).parseFromString(xml, "application/xml")
  }else {
    if(typeof ActiveXObject != "undefined") {
      var doc = goog.dom.xml.createMsXmlDocument_();
      doc.loadXML(xml);
      return doc
    }
  }
  throw Error("Your browser does not support loading xml documents");
};
goog.dom.xml.serialize = function(xml) {
  if(typeof XMLSerializer != "undefined") {
    return(new XMLSerializer).serializeToString(xml)
  }
  var text = xml.xml;
  if(text) {
    return text
  }
  throw Error("Your browser does not support serializing XML documents");
};
goog.dom.xml.selectSingleNode = function(node, path) {
  if(typeof node.selectSingleNode != "undefined") {
    var doc = goog.dom.getOwnerDocument(node);
    if(typeof doc.setProperty != "undefined") {
      doc.setProperty("SelectionLanguage", "XPath")
    }
    return node.selectSingleNode(path)
  }else {
    if(document.implementation.hasFeature("XPath", "3.0")) {
      var doc = goog.dom.getOwnerDocument(node);
      var resolver = doc.createNSResolver(doc.documentElement);
      var result = doc.evaluate(path, node, resolver, XPathResult.FIRST_ORDERED_NODE_TYPE, null);
      return result.singleNodeValue
    }
  }
  return null
};
goog.dom.xml.selectNodes = function(node, path) {
  if(typeof node.selectNodes != "undefined") {
    var doc = goog.dom.getOwnerDocument(node);
    if(typeof doc.setProperty != "undefined") {
      doc.setProperty("SelectionLanguage", "XPath")
    }
    return node.selectNodes(path)
  }else {
    if(document.implementation.hasFeature("XPath", "3.0")) {
      var doc = goog.dom.getOwnerDocument(node);
      var resolver = doc.createNSResolver(doc.documentElement);
      var nodes = doc.evaluate(path, node, resolver, XPathResult.ORDERED_NODE_SNAPSHOT_TYPE, null);
      var results = [];
      var count = nodes.snapshotLength;
      for(var i = 0;i < count;i++) {
        results.push(nodes.snapshotItem(i))
      }
      return results
    }else {
      return[]
    }
  }
};
goog.dom.xml.createMsXmlDocument_ = function() {
  var doc = new ActiveXObject("MSXML2.DOMDocument");
  if(doc) {
    doc.resolveExternals = false;
    doc.validateOnParse = false;
    try {
      doc.setProperty("ProhibitDTD", true);
      doc.setProperty("MaxXMLSize", goog.dom.xml.MAX_XML_SIZE_KB);
      doc.setProperty("MaxElementDepth", goog.dom.xml.MAX_ELEMENT_DEPTH)
    }catch(e) {
    }
  }
  return doc
};
goog.provide("goog.iter");
goog.provide("goog.iter.Iterator");
goog.provide("goog.iter.StopIteration");
goog.require("goog.array");
goog.require("goog.asserts");
goog.iter.Iterable;
if("StopIteration" in goog.global) {
  goog.iter.StopIteration = goog.global["StopIteration"]
}else {
  goog.iter.StopIteration = Error("StopIteration")
}
goog.iter.Iterator = function() {
};
goog.iter.Iterator.prototype.next = function() {
  throw goog.iter.StopIteration;
};
goog.iter.Iterator.prototype.__iterator__ = function(opt_keys) {
  return this
};
goog.iter.toIterator = function(iterable) {
  if(iterable instanceof goog.iter.Iterator) {
    return iterable
  }
  if(typeof iterable.__iterator__ == "function") {
    return iterable.__iterator__(false)
  }
  if(goog.isArrayLike(iterable)) {
    var i = 0;
    var newIter = new goog.iter.Iterator;
    newIter.next = function() {
      while(true) {
        if(i >= iterable.length) {
          throw goog.iter.StopIteration;
        }
        if(!(i in iterable)) {
          i++;
          continue
        }
        return iterable[i++]
      }
    };
    return newIter
  }
  throw Error("Not implemented");
};
goog.iter.forEach = function(iterable, f, opt_obj) {
  if(goog.isArrayLike(iterable)) {
    try {
      goog.array.forEach(iterable, f, opt_obj)
    }catch(ex) {
      if(ex !== goog.iter.StopIteration) {
        throw ex;
      }
    }
  }else {
    iterable = goog.iter.toIterator(iterable);
    try {
      while(true) {
        f.call(opt_obj, iterable.next(), undefined, iterable)
      }
    }catch(ex) {
      if(ex !== goog.iter.StopIteration) {
        throw ex;
      }
    }
  }
};
goog.iter.filter = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    while(true) {
      var val = iterable.next();
      if(f.call(opt_obj, val, undefined, iterable)) {
        return val
      }
    }
  };
  return newIter
};
goog.iter.range = function(startOrStop, opt_stop, opt_step) {
  var start = 0;
  var stop = startOrStop;
  var step = opt_step || 1;
  if(arguments.length > 1) {
    start = startOrStop;
    stop = opt_stop
  }
  if(step == 0) {
    throw Error("Range step argument must not be zero");
  }
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    if(step > 0 && start >= stop || step < 0 && start <= stop) {
      throw goog.iter.StopIteration;
    }
    var rv = start;
    start += step;
    return rv
  };
  return newIter
};
goog.iter.join = function(iterable, deliminator) {
  return goog.iter.toArray(iterable).join(deliminator)
};
goog.iter.map = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    while(true) {
      var val = iterable.next();
      return f.call(opt_obj, val, undefined, iterable)
    }
  };
  return newIter
};
goog.iter.reduce = function(iterable, f, val, opt_obj) {
  var rval = val;
  goog.iter.forEach(iterable, function(val) {
    rval = f.call(opt_obj, rval, val)
  });
  return rval
};
goog.iter.some = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  try {
    while(true) {
      if(f.call(opt_obj, iterable.next(), undefined, iterable)) {
        return true
      }
    }
  }catch(ex) {
    if(ex !== goog.iter.StopIteration) {
      throw ex;
    }
  }
  return false
};
goog.iter.every = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  try {
    while(true) {
      if(!f.call(opt_obj, iterable.next(), undefined, iterable)) {
        return false
      }
    }
  }catch(ex) {
    if(ex !== goog.iter.StopIteration) {
      throw ex;
    }
  }
  return true
};
goog.iter.chain = function(var_args) {
  var args = arguments;
  var length = args.length;
  var i = 0;
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    try {
      if(i >= length) {
        throw goog.iter.StopIteration;
      }
      var current = goog.iter.toIterator(args[i]);
      return current.next()
    }catch(ex) {
      if(ex !== goog.iter.StopIteration || i >= length) {
        throw ex;
      }else {
        i++;
        return this.next()
      }
    }
  };
  return newIter
};
goog.iter.dropWhile = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  var dropping = true;
  newIter.next = function() {
    while(true) {
      var val = iterable.next();
      if(dropping && f.call(opt_obj, val, undefined, iterable)) {
        continue
      }else {
        dropping = false
      }
      return val
    }
  };
  return newIter
};
goog.iter.takeWhile = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  var taking = true;
  newIter.next = function() {
    while(true) {
      if(taking) {
        var val = iterable.next();
        if(f.call(opt_obj, val, undefined, iterable)) {
          return val
        }else {
          taking = false
        }
      }else {
        throw goog.iter.StopIteration;
      }
    }
  };
  return newIter
};
goog.iter.toArray = function(iterable) {
  if(goog.isArrayLike(iterable)) {
    return goog.array.toArray(iterable)
  }
  iterable = goog.iter.toIterator(iterable);
  var array = [];
  goog.iter.forEach(iterable, function(val) {
    array.push(val)
  });
  return array
};
goog.iter.equals = function(iterable1, iterable2) {
  iterable1 = goog.iter.toIterator(iterable1);
  iterable2 = goog.iter.toIterator(iterable2);
  var b1, b2;
  try {
    while(true) {
      b1 = b2 = false;
      var val1 = iterable1.next();
      b1 = true;
      var val2 = iterable2.next();
      b2 = true;
      if(val1 != val2) {
        return false
      }
    }
  }catch(ex) {
    if(ex !== goog.iter.StopIteration) {
      throw ex;
    }else {
      if(b1 && !b2) {
        return false
      }
      if(!b2) {
        try {
          val2 = iterable2.next();
          return false
        }catch(ex1) {
          if(ex1 !== goog.iter.StopIteration) {
            throw ex1;
          }
          return true
        }
      }
    }
  }
  return false
};
goog.iter.nextOrValue = function(iterable, defaultValue) {
  try {
    return goog.iter.toIterator(iterable).next()
  }catch(e) {
    if(e != goog.iter.StopIteration) {
      throw e;
    }
    return defaultValue
  }
};
goog.iter.product = function(var_args) {
  var someArrayEmpty = goog.array.some(arguments, function(arr) {
    return!arr.length
  });
  if(someArrayEmpty || !arguments.length) {
    return new goog.iter.Iterator
  }
  var iter = new goog.iter.Iterator;
  var arrays = arguments;
  var indicies = goog.array.repeat(0, arrays.length);
  iter.next = function() {
    if(indicies) {
      var retVal = goog.array.map(indicies, function(valueIndex, arrayIndex) {
        return arrays[arrayIndex][valueIndex]
      });
      for(var i = indicies.length - 1;i >= 0;i--) {
        goog.asserts.assert(indicies);
        if(indicies[i] < arrays[i].length - 1) {
          indicies[i]++;
          break
        }
        if(i == 0) {
          indicies = null;
          break
        }
        indicies[i] = 0
      }
      return retVal
    }
    throw goog.iter.StopIteration;
  };
  return iter
};
goog.provide("goog.structs");
goog.require("goog.array");
goog.require("goog.object");
goog.structs.getCount = function(col) {
  if(typeof col.getCount == "function") {
    return col.getCount()
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return col.length
  }
  return goog.object.getCount(col)
};
goog.structs.getValues = function(col) {
  if(typeof col.getValues == "function") {
    return col.getValues()
  }
  if(goog.isString(col)) {
    return col.split("")
  }
  if(goog.isArrayLike(col)) {
    var rv = [];
    var l = col.length;
    for(var i = 0;i < l;i++) {
      rv.push(col[i])
    }
    return rv
  }
  return goog.object.getValues(col)
};
goog.structs.getKeys = function(col) {
  if(typeof col.getKeys == "function") {
    return col.getKeys()
  }
  if(typeof col.getValues == "function") {
    return undefined
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    var rv = [];
    var l = col.length;
    for(var i = 0;i < l;i++) {
      rv.push(i)
    }
    return rv
  }
  return goog.object.getKeys(col)
};
goog.structs.contains = function(col, val) {
  if(typeof col.contains == "function") {
    return col.contains(val)
  }
  if(typeof col.containsValue == "function") {
    return col.containsValue(val)
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.contains(col, val)
  }
  return goog.object.containsValue(col, val)
};
goog.structs.isEmpty = function(col) {
  if(typeof col.isEmpty == "function") {
    return col.isEmpty()
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.isEmpty(col)
  }
  return goog.object.isEmpty(col)
};
goog.structs.clear = function(col) {
  if(typeof col.clear == "function") {
    col.clear()
  }else {
    if(goog.isArrayLike(col)) {
      goog.array.clear(col)
    }else {
      goog.object.clear(col)
    }
  }
};
goog.structs.forEach = function(col, f, opt_obj) {
  if(typeof col.forEach == "function") {
    col.forEach(f, opt_obj)
  }else {
    if(goog.isArrayLike(col) || goog.isString(col)) {
      goog.array.forEach(col, f, opt_obj)
    }else {
      var keys = goog.structs.getKeys(col);
      var values = goog.structs.getValues(col);
      var l = values.length;
      for(var i = 0;i < l;i++) {
        f.call(opt_obj, values[i], keys && keys[i], col)
      }
    }
  }
};
goog.structs.filter = function(col, f, opt_obj) {
  if(typeof col.filter == "function") {
    return col.filter(f, opt_obj)
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.filter(col, f, opt_obj)
  }
  var rv;
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  if(keys) {
    rv = {};
    for(var i = 0;i < l;i++) {
      if(f.call(opt_obj, values[i], keys[i], col)) {
        rv[keys[i]] = values[i]
      }
    }
  }else {
    rv = [];
    for(var i = 0;i < l;i++) {
      if(f.call(opt_obj, values[i], undefined, col)) {
        rv.push(values[i])
      }
    }
  }
  return rv
};
goog.structs.map = function(col, f, opt_obj) {
  if(typeof col.map == "function") {
    return col.map(f, opt_obj)
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.map(col, f, opt_obj)
  }
  var rv;
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  if(keys) {
    rv = {};
    for(var i = 0;i < l;i++) {
      rv[keys[i]] = f.call(opt_obj, values[i], keys[i], col)
    }
  }else {
    rv = [];
    for(var i = 0;i < l;i++) {
      rv[i] = f.call(opt_obj, values[i], undefined, col)
    }
  }
  return rv
};
goog.structs.some = function(col, f, opt_obj) {
  if(typeof col.some == "function") {
    return col.some(f, opt_obj)
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.some(col, f, opt_obj)
  }
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  for(var i = 0;i < l;i++) {
    if(f.call(opt_obj, values[i], keys && keys[i], col)) {
      return true
    }
  }
  return false
};
goog.structs.every = function(col, f, opt_obj) {
  if(typeof col.every == "function") {
    return col.every(f, opt_obj)
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.every(col, f, opt_obj)
  }
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  for(var i = 0;i < l;i++) {
    if(!f.call(opt_obj, values[i], keys && keys[i], col)) {
      return false
    }
  }
  return true
};
goog.provide("goog.structs.Map");
goog.require("goog.iter.Iterator");
goog.require("goog.iter.StopIteration");
goog.require("goog.object");
goog.require("goog.structs");
goog.structs.Map = function(opt_map, var_args) {
  this.map_ = {};
  this.keys_ = [];
  var argLength = arguments.length;
  if(argLength > 1) {
    if(argLength % 2) {
      throw Error("Uneven number of arguments");
    }
    for(var i = 0;i < argLength;i += 2) {
      this.set(arguments[i], arguments[i + 1])
    }
  }else {
    if(opt_map) {
      this.addAll(opt_map)
    }
  }
};
goog.structs.Map.prototype.count_ = 0;
goog.structs.Map.prototype.version_ = 0;
goog.structs.Map.prototype.getCount = function() {
  return this.count_
};
goog.structs.Map.prototype.getValues = function() {
  this.cleanupKeysArray_();
  var rv = [];
  for(var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    rv.push(this.map_[key])
  }
  return rv
};
goog.structs.Map.prototype.getKeys = function() {
  this.cleanupKeysArray_();
  return this.keys_.concat()
};
goog.structs.Map.prototype.containsKey = function(key) {
  return goog.structs.Map.hasKey_(this.map_, key)
};
goog.structs.Map.prototype.containsValue = function(val) {
  for(var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    if(goog.structs.Map.hasKey_(this.map_, key) && this.map_[key] == val) {
      return true
    }
  }
  return false
};
goog.structs.Map.prototype.equals = function(otherMap, opt_equalityFn) {
  if(this === otherMap) {
    return true
  }
  if(this.count_ != otherMap.getCount()) {
    return false
  }
  var equalityFn = opt_equalityFn || goog.structs.Map.defaultEquals;
  this.cleanupKeysArray_();
  for(var key, i = 0;key = this.keys_[i];i++) {
    if(!equalityFn(this.get(key), otherMap.get(key))) {
      return false
    }
  }
  return true
};
goog.structs.Map.defaultEquals = function(a, b) {
  return a === b
};
goog.structs.Map.prototype.isEmpty = function() {
  return this.count_ == 0
};
goog.structs.Map.prototype.clear = function() {
  this.map_ = {};
  this.keys_.length = 0;
  this.count_ = 0;
  this.version_ = 0
};
goog.structs.Map.prototype.remove = function(key) {
  if(goog.structs.Map.hasKey_(this.map_, key)) {
    delete this.map_[key];
    this.count_--;
    this.version_++;
    if(this.keys_.length > 2 * this.count_) {
      this.cleanupKeysArray_()
    }
    return true
  }
  return false
};
goog.structs.Map.prototype.cleanupKeysArray_ = function() {
  if(this.count_ != this.keys_.length) {
    var srcIndex = 0;
    var destIndex = 0;
    while(srcIndex < this.keys_.length) {
      var key = this.keys_[srcIndex];
      if(goog.structs.Map.hasKey_(this.map_, key)) {
        this.keys_[destIndex++] = key
      }
      srcIndex++
    }
    this.keys_.length = destIndex
  }
  if(this.count_ != this.keys_.length) {
    var seen = {};
    var srcIndex = 0;
    var destIndex = 0;
    while(srcIndex < this.keys_.length) {
      var key = this.keys_[srcIndex];
      if(!goog.structs.Map.hasKey_(seen, key)) {
        this.keys_[destIndex++] = key;
        seen[key] = 1
      }
      srcIndex++
    }
    this.keys_.length = destIndex
  }
};
goog.structs.Map.prototype.get = function(key, opt_val) {
  if(goog.structs.Map.hasKey_(this.map_, key)) {
    return this.map_[key]
  }
  return opt_val
};
goog.structs.Map.prototype.set = function(key, value) {
  if(!goog.structs.Map.hasKey_(this.map_, key)) {
    this.count_++;
    this.keys_.push(key);
    this.version_++
  }
  this.map_[key] = value
};
goog.structs.Map.prototype.addAll = function(map) {
  var keys, values;
  if(map instanceof goog.structs.Map) {
    keys = map.getKeys();
    values = map.getValues()
  }else {
    keys = goog.object.getKeys(map);
    values = goog.object.getValues(map)
  }
  for(var i = 0;i < keys.length;i++) {
    this.set(keys[i], values[i])
  }
};
goog.structs.Map.prototype.clone = function() {
  return new goog.structs.Map(this)
};
goog.structs.Map.prototype.transpose = function() {
  var transposed = new goog.structs.Map;
  for(var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    var value = this.map_[key];
    transposed.set(value, key)
  }
  return transposed
};
goog.structs.Map.prototype.toObject = function() {
  this.cleanupKeysArray_();
  var obj = {};
  for(var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    obj[key] = this.map_[key]
  }
  return obj
};
goog.structs.Map.prototype.getKeyIterator = function() {
  return this.__iterator__(true)
};
goog.structs.Map.prototype.getValueIterator = function() {
  return this.__iterator__(false)
};
goog.structs.Map.prototype.__iterator__ = function(opt_keys) {
  this.cleanupKeysArray_();
  var i = 0;
  var keys = this.keys_;
  var map = this.map_;
  var version = this.version_;
  var selfObj = this;
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    while(true) {
      if(version != selfObj.version_) {
        throw Error("The map has changed since the iterator was created");
      }
      if(i >= keys.length) {
        throw goog.iter.StopIteration;
      }
      var key = keys[i++];
      return opt_keys ? key : map[key]
    }
  };
  return newIter
};
goog.structs.Map.hasKey_ = function(obj, key) {
  return Object.prototype.hasOwnProperty.call(obj, key)
};
goog.provide("goog.dom.forms");
goog.require("goog.structs.Map");
goog.dom.forms.getFormDataMap = function(form) {
  var map = new goog.structs.Map;
  goog.dom.forms.getFormDataHelper_(form, map, goog.dom.forms.addFormDataToMap_);
  return map
};
goog.dom.forms.getFormDataString = function(form) {
  var sb = [];
  goog.dom.forms.getFormDataHelper_(form, sb, goog.dom.forms.addFormDataToStringBuffer_);
  return sb.join("&")
};
goog.dom.forms.getFormDataHelper_ = function(form, result, fnAppend) {
  var els = form.elements;
  for(var el, i = 0;el = els[i];i++) {
    if(el.disabled || el.tagName.toLowerCase() == "fieldset") {
      continue
    }
    var name = el.name;
    var type = el.type.toLowerCase();
    switch(type) {
      case "file":
      ;
      case "submit":
      ;
      case "reset":
      ;
      case "button":
        break;
      case "select-multiple":
        var values = goog.dom.forms.getValue(el);
        if(values != null) {
          for(var value, j = 0;value = values[j];j++) {
            fnAppend(result, name, value)
          }
        }
        break;
      default:
        var value = goog.dom.forms.getValue(el);
        if(value != null) {
          fnAppend(result, name, value)
        }
    }
  }
  var inputs = form.getElementsByTagName("input");
  for(var input, i = 0;input = inputs[i];i++) {
    if(input.form == form && input.type.toLowerCase() == "image") {
      name = input.name;
      fnAppend(result, name, input.value);
      fnAppend(result, name + ".x", "0");
      fnAppend(result, name + ".y", "0")
    }
  }
};
goog.dom.forms.addFormDataToMap_ = function(map, name, value) {
  var array = map.get(name);
  if(!array) {
    array = [];
    map.set(name, array)
  }
  array.push(value)
};
goog.dom.forms.addFormDataToStringBuffer_ = function(sb, name, value) {
  sb.push(encodeURIComponent(name) + "=" + encodeURIComponent(value))
};
goog.dom.forms.hasFileInput = function(form) {
  var els = form.elements;
  for(var el, i = 0;el = els[i];i++) {
    if(!el.disabled && el.type && el.type.toLowerCase() == "file") {
      return true
    }
  }
  return false
};
goog.dom.forms.setDisabled = function(el, disabled) {
  if(el.tagName == "FORM") {
    var els = el.elements;
    for(var i = 0;el = els[i];i++) {
      goog.dom.forms.setDisabled(el, disabled)
    }
  }else {
    if(disabled == true) {
      el.blur()
    }
    el.disabled = disabled
  }
};
goog.dom.forms.focusAndSelect = function(el) {
  el.focus();
  if(el.select) {
    el.select()
  }
};
goog.dom.forms.hasValue = function(el) {
  var value = goog.dom.forms.getValue(el);
  return!!value
};
goog.dom.forms.hasValueByName = function(form, name) {
  var value = goog.dom.forms.getValueByName(form, name);
  return!!value
};
goog.dom.forms.getValue = function(el) {
  var type = el.type;
  if(!goog.isDef(type)) {
    return null
  }
  switch(type.toLowerCase()) {
    case "checkbox":
    ;
    case "radio":
      return goog.dom.forms.getInputChecked_(el);
    case "select-one":
      return goog.dom.forms.getSelectSingle_(el);
    case "select-multiple":
      return goog.dom.forms.getSelectMultiple_(el);
    default:
      return goog.isDef(el.value) ? el.value : null
  }
};
goog.dom.$F = goog.dom.forms.getValue;
goog.dom.forms.getValueByName = function(form, name) {
  var els = form.elements[name];
  if(els.type) {
    return goog.dom.forms.getValue(els)
  }else {
    for(var i = 0;i < els.length;i++) {
      var val = goog.dom.forms.getValue(els[i]);
      if(val) {
        return val
      }
    }
    return null
  }
};
goog.dom.forms.getInputChecked_ = function(el) {
  return el.checked ? el.value : null
};
goog.dom.forms.getSelectSingle_ = function(el) {
  var selectedIndex = el.selectedIndex;
  return selectedIndex >= 0 ? el.options[selectedIndex].value : null
};
goog.dom.forms.getSelectMultiple_ = function(el) {
  var values = [];
  for(var option, i = 0;option = el.options[i];i++) {
    if(option.selected) {
      values.push(option.value)
    }
  }
  return values.length ? values : null
};
goog.dom.forms.setValue = function(el, opt_value) {
  var type = el.type;
  if(goog.isDef(type)) {
    switch(type.toLowerCase()) {
      case "checkbox":
      ;
      case "radio":
        goog.dom.forms.setInputChecked_(el, opt_value);
        break;
      case "select-one":
        goog.dom.forms.setSelectSingle_(el, opt_value);
        break;
      case "select-multiple":
        goog.dom.forms.setSelectMultiple_(el, opt_value);
        break;
      default:
        el.value = goog.isDefAndNotNull(opt_value) ? opt_value : ""
    }
  }
};
goog.dom.forms.setInputChecked_ = function(el, opt_value) {
  el.checked = opt_value ? "checked" : null
};
goog.dom.forms.setSelectSingle_ = function(el, opt_value) {
  el.selectedIndex = -1;
  if(goog.isString(opt_value)) {
    for(var option, i = 0;option = el.options[i];i++) {
      if(option.value == opt_value) {
        option.selected = true;
        break
      }
    }
  }
};
goog.dom.forms.setSelectMultiple_ = function(el, opt_value) {
  if(goog.isString(opt_value)) {
    opt_value = [opt_value]
  }
  for(var option, i = 0;option = el.options[i];i++) {
    option.selected = false;
    if(opt_value) {
      for(var value, j = 0;value = opt_value[j];j++) {
        if(option.value == value) {
          option.selected = true
        }
      }
    }
  }
};
goog.provide("clojure.string");
goog.require("cljs.core");
goog.require("goog.string.StringBuffer");
goog.require("goog.string");
clojure.string.seq_reverse = function seq_reverse(coll) {
  return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, coll)
};
clojure.string.reverse = function reverse(s) {
  return s.split("").reverse().join("")
};
clojure.string.replace = function replace(s, match, replacement) {
  if(cljs.core.string_QMARK_.call(null, match)) {
    return s.replace(new RegExp(goog.string.regExpEscape(match), "g"), replacement)
  }else {
    if(cljs.core.truth_(match.hasOwnProperty("source"))) {
      return s.replace(new RegExp(match.source, "g"), replacement)
    }else {
      if("\ufdd0'else") {
        throw[cljs.core.str("Invalid match arg: "), cljs.core.str(match)].join("");
      }else {
        return null
      }
    }
  }
};
clojure.string.replace_first = function replace_first(s, match, replacement) {
  return s.replace(match, replacement)
};
clojure.string.join = function() {
  var join = null;
  var join__1 = function(coll) {
    return cljs.core.apply.call(null, cljs.core.str, coll)
  };
  var join__2 = function(separator, coll) {
    return cljs.core.apply.call(null, cljs.core.str, cljs.core.interpose.call(null, separator, coll))
  };
  join = function(separator, coll) {
    switch(arguments.length) {
      case 1:
        return join__1.call(this, separator);
      case 2:
        return join__2.call(this, separator, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  join.cljs$lang$arity$1 = join__1;
  join.cljs$lang$arity$2 = join__2;
  return join
}();
clojure.string.upper_case = function upper_case(s) {
  return s.toUpperCase()
};
clojure.string.lower_case = function lower_case(s) {
  return s.toLowerCase()
};
clojure.string.capitalize = function capitalize(s) {
  if(cljs.core.count.call(null, s) < 2) {
    return clojure.string.upper_case.call(null, s)
  }else {
    return[cljs.core.str(clojure.string.upper_case.call(null, cljs.core.subs.call(null, s, 0, 1))), cljs.core.str(clojure.string.lower_case.call(null, cljs.core.subs.call(null, s, 1)))].join("")
  }
};
clojure.string.split = function() {
  var split = null;
  var split__2 = function(s, re) {
    return cljs.core.vec.call(null, [cljs.core.str(s)].join("").split(re))
  };
  var split__3 = function(s, re, limit) {
    if(limit < 1) {
      return cljs.core.vec.call(null, [cljs.core.str(s)].join("").split(re))
    }else {
      var s__11167 = s;
      var limit__11168 = limit;
      var parts__11169 = cljs.core.PersistentVector.EMPTY;
      while(true) {
        if(cljs.core._EQ_.call(null, limit__11168, 1)) {
          return cljs.core.conj.call(null, parts__11169, s__11167)
        }else {
          var temp__4090__auto____11170 = cljs.core.re_find.call(null, re, s__11167);
          if(cljs.core.truth_(temp__4090__auto____11170)) {
            var m__11171 = temp__4090__auto____11170;
            var index__11172 = s__11167.indexOf(m__11171);
            var G__11173 = s__11167.substring(index__11172 + cljs.core.count.call(null, m__11171));
            var G__11174 = limit__11168 - 1;
            var G__11175 = cljs.core.conj.call(null, parts__11169, s__11167.substring(0, index__11172));
            s__11167 = G__11173;
            limit__11168 = G__11174;
            parts__11169 = G__11175;
            continue
          }else {
            return cljs.core.conj.call(null, parts__11169, s__11167)
          }
        }
        break
      }
    }
  };
  split = function(s, re, limit) {
    switch(arguments.length) {
      case 2:
        return split__2.call(this, s, re);
      case 3:
        return split__3.call(this, s, re, limit)
    }
    throw"Invalid arity: " + arguments.length;
  };
  split.cljs$lang$arity$2 = split__2;
  split.cljs$lang$arity$3 = split__3;
  return split
}();
clojure.string.split_lines = function split_lines(s) {
  return clojure.string.split.call(null, s, /\n|\r\n/)
};
clojure.string.trim = function trim(s) {
  return goog.string.trim(s)
};
clojure.string.triml = function triml(s) {
  return goog.string.trimLeft(s)
};
clojure.string.trimr = function trimr(s) {
  return goog.string.trimRight(s)
};
clojure.string.trim_newline = function trim_newline(s) {
  var index__11179 = s.length;
  while(true) {
    if(index__11179 === 0) {
      return""
    }else {
      var ch__11180 = cljs.core._lookup.call(null, s, index__11179 - 1, null);
      if(function() {
        var or__3943__auto____11181 = cljs.core._EQ_.call(null, ch__11180, "\n");
        if(or__3943__auto____11181) {
          return or__3943__auto____11181
        }else {
          return cljs.core._EQ_.call(null, ch__11180, "\r")
        }
      }()) {
        var G__11182 = index__11179 - 1;
        index__11179 = G__11182;
        continue
      }else {
        return s.substring(0, index__11179)
      }
    }
    break
  }
};
clojure.string.blank_QMARK_ = function blank_QMARK_(s) {
  var s__11186 = [cljs.core.str(s)].join("");
  if(cljs.core.truth_(function() {
    var or__3943__auto____11187 = cljs.core.not.call(null, s__11186);
    if(or__3943__auto____11187) {
      return or__3943__auto____11187
    }else {
      var or__3943__auto____11188 = cljs.core._EQ_.call(null, "", s__11186);
      if(or__3943__auto____11188) {
        return or__3943__auto____11188
      }else {
        return cljs.core.re_matches.call(null, /\s+/, s__11186)
      }
    }
  }())) {
    return true
  }else {
    return false
  }
};
clojure.string.escape = function escape(s, cmap) {
  var buffer__11195 = new goog.string.StringBuffer;
  var length__11196 = s.length;
  var index__11197 = 0;
  while(true) {
    if(cljs.core._EQ_.call(null, length__11196, index__11197)) {
      return buffer__11195.toString()
    }else {
      var ch__11198 = s.charAt(index__11197);
      var temp__4090__auto____11199 = cljs.core._lookup.call(null, cmap, ch__11198, null);
      if(cljs.core.truth_(temp__4090__auto____11199)) {
        var replacement__11200 = temp__4090__auto____11199;
        buffer__11195.append([cljs.core.str(replacement__11200)].join(""))
      }else {
        buffer__11195.append(ch__11198)
      }
      var G__11201 = index__11197 + 1;
      index__11197 = G__11201;
      continue
    }
    break
  }
};
goog.provide("goog.math.Box");
goog.require("goog.math.Coordinate");
goog.math.Box = function(top, right, bottom, left) {
  this.top = top;
  this.right = right;
  this.bottom = bottom;
  this.left = left
};
goog.math.Box.boundingBox = function(var_args) {
  var box = new goog.math.Box(arguments[0].y, arguments[0].x, arguments[0].y, arguments[0].x);
  for(var i = 1;i < arguments.length;i++) {
    var coord = arguments[i];
    box.top = Math.min(box.top, coord.y);
    box.right = Math.max(box.right, coord.x);
    box.bottom = Math.max(box.bottom, coord.y);
    box.left = Math.min(box.left, coord.x)
  }
  return box
};
goog.math.Box.prototype.clone = function() {
  return new goog.math.Box(this.top, this.right, this.bottom, this.left)
};
if(goog.DEBUG) {
  goog.math.Box.prototype.toString = function() {
    return"(" + this.top + "t, " + this.right + "r, " + this.bottom + "b, " + this.left + "l)"
  }
}
goog.math.Box.prototype.contains = function(other) {
  return goog.math.Box.contains(this, other)
};
goog.math.Box.prototype.expand = function(top, opt_right, opt_bottom, opt_left) {
  if(goog.isObject(top)) {
    this.top -= top.top;
    this.right += top.right;
    this.bottom += top.bottom;
    this.left -= top.left
  }else {
    this.top -= top;
    this.right += opt_right;
    this.bottom += opt_bottom;
    this.left -= opt_left
  }
  return this
};
goog.math.Box.prototype.expandToInclude = function(box) {
  this.left = Math.min(this.left, box.left);
  this.top = Math.min(this.top, box.top);
  this.right = Math.max(this.right, box.right);
  this.bottom = Math.max(this.bottom, box.bottom)
};
goog.math.Box.equals = function(a, b) {
  if(a == b) {
    return true
  }
  if(!a || !b) {
    return false
  }
  return a.top == b.top && a.right == b.right && a.bottom == b.bottom && a.left == b.left
};
goog.math.Box.contains = function(box, other) {
  if(!box || !other) {
    return false
  }
  if(other instanceof goog.math.Box) {
    return other.left >= box.left && other.right <= box.right && other.top >= box.top && other.bottom <= box.bottom
  }
  return other.x >= box.left && other.x <= box.right && other.y >= box.top && other.y <= box.bottom
};
goog.math.Box.distance = function(box, coord) {
  if(coord.x >= box.left && coord.x <= box.right) {
    if(coord.y >= box.top && coord.y <= box.bottom) {
      return 0
    }
    return coord.y < box.top ? box.top - coord.y : coord.y - box.bottom
  }
  if(coord.y >= box.top && coord.y <= box.bottom) {
    return coord.x < box.left ? box.left - coord.x : coord.x - box.right
  }
  return goog.math.Coordinate.distance(coord, new goog.math.Coordinate(coord.x < box.left ? box.left : box.right, coord.y < box.top ? box.top : box.bottom))
};
goog.math.Box.intersects = function(a, b) {
  return a.left <= b.right && b.left <= a.right && a.top <= b.bottom && b.top <= a.bottom
};
goog.math.Box.intersectsWithPadding = function(a, b, padding) {
  return a.left <= b.right + padding && b.left <= a.right + padding && a.top <= b.bottom + padding && b.top <= a.bottom + padding
};
goog.provide("goog.math.Rect");
goog.require("goog.math.Box");
goog.require("goog.math.Size");
goog.math.Rect = function(x, y, w, h) {
  this.left = x;
  this.top = y;
  this.width = w;
  this.height = h
};
goog.math.Rect.prototype.clone = function() {
  return new goog.math.Rect(this.left, this.top, this.width, this.height)
};
goog.math.Rect.prototype.toBox = function() {
  var right = this.left + this.width;
  var bottom = this.top + this.height;
  return new goog.math.Box(this.top, right, bottom, this.left)
};
goog.math.Rect.createFromBox = function(box) {
  return new goog.math.Rect(box.left, box.top, box.right - box.left, box.bottom - box.top)
};
if(goog.DEBUG) {
  goog.math.Rect.prototype.toString = function() {
    return"(" + this.left + ", " + this.top + " - " + this.width + "w x " + this.height + "h)"
  }
}
goog.math.Rect.equals = function(a, b) {
  if(a == b) {
    return true
  }
  if(!a || !b) {
    return false
  }
  return a.left == b.left && a.width == b.width && a.top == b.top && a.height == b.height
};
goog.math.Rect.prototype.intersection = function(rect) {
  var x0 = Math.max(this.left, rect.left);
  var x1 = Math.min(this.left + this.width, rect.left + rect.width);
  if(x0 <= x1) {
    var y0 = Math.max(this.top, rect.top);
    var y1 = Math.min(this.top + this.height, rect.top + rect.height);
    if(y0 <= y1) {
      this.left = x0;
      this.top = y0;
      this.width = x1 - x0;
      this.height = y1 - y0;
      return true
    }
  }
  return false
};
goog.math.Rect.intersection = function(a, b) {
  var x0 = Math.max(a.left, b.left);
  var x1 = Math.min(a.left + a.width, b.left + b.width);
  if(x0 <= x1) {
    var y0 = Math.max(a.top, b.top);
    var y1 = Math.min(a.top + a.height, b.top + b.height);
    if(y0 <= y1) {
      return new goog.math.Rect(x0, y0, x1 - x0, y1 - y0)
    }
  }
  return null
};
goog.math.Rect.intersects = function(a, b) {
  return a.left <= b.left + b.width && b.left <= a.left + a.width && a.top <= b.top + b.height && b.top <= a.top + a.height
};
goog.math.Rect.prototype.intersects = function(rect) {
  return goog.math.Rect.intersects(this, rect)
};
goog.math.Rect.difference = function(a, b) {
  var intersection = goog.math.Rect.intersection(a, b);
  if(!intersection || !intersection.height || !intersection.width) {
    return[a.clone()]
  }
  var result = [];
  var top = a.top;
  var height = a.height;
  var ar = a.left + a.width;
  var ab = a.top + a.height;
  var br = b.left + b.width;
  var bb = b.top + b.height;
  if(b.top > a.top) {
    result.push(new goog.math.Rect(a.left, a.top, a.width, b.top - a.top));
    top = b.top;
    height -= b.top - a.top
  }
  if(bb < ab) {
    result.push(new goog.math.Rect(a.left, bb, a.width, ab - bb));
    height = bb - top
  }
  if(b.left > a.left) {
    result.push(new goog.math.Rect(a.left, top, b.left - a.left, height))
  }
  if(br < ar) {
    result.push(new goog.math.Rect(br, top, ar - br, height))
  }
  return result
};
goog.math.Rect.prototype.difference = function(rect) {
  return goog.math.Rect.difference(this, rect)
};
goog.math.Rect.prototype.boundingRect = function(rect) {
  var right = Math.max(this.left + this.width, rect.left + rect.width);
  var bottom = Math.max(this.top + this.height, rect.top + rect.height);
  this.left = Math.min(this.left, rect.left);
  this.top = Math.min(this.top, rect.top);
  this.width = right - this.left;
  this.height = bottom - this.top
};
goog.math.Rect.boundingRect = function(a, b) {
  if(!a || !b) {
    return null
  }
  var clone = a.clone();
  clone.boundingRect(b);
  return clone
};
goog.math.Rect.prototype.contains = function(another) {
  if(another instanceof goog.math.Rect) {
    return this.left <= another.left && this.left + this.width >= another.left + another.width && this.top <= another.top && this.top + this.height >= another.top + another.height
  }else {
    return another.x >= this.left && another.x <= this.left + this.width && another.y >= this.top && another.y <= this.top + this.height
  }
};
goog.math.Rect.prototype.getSize = function() {
  return new goog.math.Size(this.width, this.height)
};
goog.provide("goog.style");
goog.require("goog.array");
goog.require("goog.dom");
goog.require("goog.math.Box");
goog.require("goog.math.Coordinate");
goog.require("goog.math.Rect");
goog.require("goog.math.Size");
goog.require("goog.object");
goog.require("goog.string");
goog.require("goog.userAgent");
goog.style.setStyle = function(element, style, opt_value) {
  if(goog.isString(style)) {
    goog.style.setStyle_(element, opt_value, style)
  }else {
    goog.object.forEach(style, goog.partial(goog.style.setStyle_, element))
  }
};
goog.style.setStyle_ = function(element, value, style) {
  element.style[goog.string.toCamelCase(style)] = value
};
goog.style.getStyle = function(element, property) {
  return element.style[goog.string.toCamelCase(property)] || ""
};
goog.style.getComputedStyle = function(element, property) {
  var doc = goog.dom.getOwnerDocument(element);
  if(doc.defaultView && doc.defaultView.getComputedStyle) {
    var styles = doc.defaultView.getComputedStyle(element, null);
    if(styles) {
      return styles[property] || styles.getPropertyValue(property)
    }
  }
  return""
};
goog.style.getCascadedStyle = function(element, style) {
  return element.currentStyle ? element.currentStyle[style] : null
};
goog.style.getStyle_ = function(element, style) {
  return goog.style.getComputedStyle(element, style) || goog.style.getCascadedStyle(element, style) || element.style[style]
};
goog.style.getComputedPosition = function(element) {
  return goog.style.getStyle_(element, "position")
};
goog.style.getBackgroundColor = function(element) {
  return goog.style.getStyle_(element, "backgroundColor")
};
goog.style.getComputedOverflowX = function(element) {
  return goog.style.getStyle_(element, "overflowX")
};
goog.style.getComputedOverflowY = function(element) {
  return goog.style.getStyle_(element, "overflowY")
};
goog.style.getComputedZIndex = function(element) {
  return goog.style.getStyle_(element, "zIndex")
};
goog.style.getComputedTextAlign = function(element) {
  return goog.style.getStyle_(element, "textAlign")
};
goog.style.getComputedCursor = function(element) {
  return goog.style.getStyle_(element, "cursor")
};
goog.style.setPosition = function(el, arg1, opt_arg2) {
  var x, y;
  var buggyGeckoSubPixelPos = goog.userAgent.GECKO && (goog.userAgent.MAC || goog.userAgent.X11) && goog.userAgent.isVersion("1.9");
  if(arg1 instanceof goog.math.Coordinate) {
    x = arg1.x;
    y = arg1.y
  }else {
    x = arg1;
    y = opt_arg2
  }
  el.style.left = goog.style.getPixelStyleValue_(x, buggyGeckoSubPixelPos);
  el.style.top = goog.style.getPixelStyleValue_(y, buggyGeckoSubPixelPos)
};
goog.style.getPosition = function(element) {
  return new goog.math.Coordinate(element.offsetLeft, element.offsetTop)
};
goog.style.getClientViewportElement = function(opt_node) {
  var doc;
  if(opt_node) {
    if(opt_node.nodeType == goog.dom.NodeType.DOCUMENT) {
      doc = opt_node
    }else {
      doc = goog.dom.getOwnerDocument(opt_node)
    }
  }else {
    doc = goog.dom.getDocument()
  }
  if(goog.userAgent.IE && !goog.userAgent.isVersion(9) && !goog.dom.getDomHelper(doc).isCss1CompatMode()) {
    return doc.body
  }
  return doc.documentElement
};
goog.style.getBoundingClientRect_ = function(el) {
  var rect = el.getBoundingClientRect();
  if(goog.userAgent.IE) {
    var doc = el.ownerDocument;
    rect.left -= doc.documentElement.clientLeft + doc.body.clientLeft;
    rect.top -= doc.documentElement.clientTop + doc.body.clientTop
  }
  return rect
};
goog.style.getOffsetParent = function(element) {
  if(goog.userAgent.IE) {
    return element.offsetParent
  }
  var doc = goog.dom.getOwnerDocument(element);
  var positionStyle = goog.style.getStyle_(element, "position");
  var skipStatic = positionStyle == "fixed" || positionStyle == "absolute";
  for(var parent = element.parentNode;parent && parent != doc;parent = parent.parentNode) {
    positionStyle = goog.style.getStyle_(parent, "position");
    skipStatic = skipStatic && positionStyle == "static" && parent != doc.documentElement && parent != doc.body;
    if(!skipStatic && (parent.scrollWidth > parent.clientWidth || parent.scrollHeight > parent.clientHeight || positionStyle == "fixed" || positionStyle == "absolute")) {
      return parent
    }
  }
  return null
};
goog.style.getVisibleRectForElement = function(element) {
  var visibleRect = new goog.math.Box(0, Infinity, Infinity, 0);
  var dom = goog.dom.getDomHelper(element);
  var body = dom.getDocument().body;
  var scrollEl = dom.getDocumentScrollElement();
  var inContainer;
  for(var el = element;el = goog.style.getOffsetParent(el);) {
    if((!goog.userAgent.IE || el.clientWidth != 0) && (!goog.userAgent.WEBKIT || el.clientHeight != 0 || el != body) && (el.scrollWidth != el.clientWidth || el.scrollHeight != el.clientHeight) && goog.style.getStyle_(el, "overflow") != "visible") {
      var pos = goog.style.getPageOffset(el);
      var client = goog.style.getClientLeftTop(el);
      pos.x += client.x;
      pos.y += client.y;
      visibleRect.top = Math.max(visibleRect.top, pos.y);
      visibleRect.right = Math.min(visibleRect.right, pos.x + el.clientWidth);
      visibleRect.bottom = Math.min(visibleRect.bottom, pos.y + el.clientHeight);
      visibleRect.left = Math.max(visibleRect.left, pos.x);
      inContainer = inContainer || el != scrollEl
    }
  }
  var scrollX = scrollEl.scrollLeft, scrollY = scrollEl.scrollTop;
  if(goog.userAgent.WEBKIT) {
    visibleRect.left += scrollX;
    visibleRect.top += scrollY
  }else {
    visibleRect.left = Math.max(visibleRect.left, scrollX);
    visibleRect.top = Math.max(visibleRect.top, scrollY)
  }
  if(!inContainer || goog.userAgent.WEBKIT) {
    visibleRect.right += scrollX;
    visibleRect.bottom += scrollY
  }
  var winSize = dom.getViewportSize();
  visibleRect.right = Math.min(visibleRect.right, scrollX + winSize.width);
  visibleRect.bottom = Math.min(visibleRect.bottom, scrollY + winSize.height);
  return visibleRect.top >= 0 && visibleRect.left >= 0 && visibleRect.bottom > visibleRect.top && visibleRect.right > visibleRect.left ? visibleRect : null
};
goog.style.scrollIntoContainerView = function(element, container, opt_center) {
  var elementPos = goog.style.getPageOffset(element);
  var containerPos = goog.style.getPageOffset(container);
  var containerBorder = goog.style.getBorderBox(container);
  var relX = elementPos.x - containerPos.x - containerBorder.left;
  var relY = elementPos.y - containerPos.y - containerBorder.top;
  var spaceX = container.clientWidth - element.offsetWidth;
  var spaceY = container.clientHeight - element.offsetHeight;
  if(opt_center) {
    container.scrollLeft += relX - spaceX / 2;
    container.scrollTop += relY - spaceY / 2
  }else {
    container.scrollLeft += Math.min(relX, Math.max(relX - spaceX, 0));
    container.scrollTop += Math.min(relY, Math.max(relY - spaceY, 0))
  }
};
goog.style.getClientLeftTop = function(el) {
  if(goog.userAgent.GECKO && !goog.userAgent.isVersion("1.9")) {
    var left = parseFloat(goog.style.getComputedStyle(el, "borderLeftWidth"));
    if(goog.style.isRightToLeft(el)) {
      var scrollbarWidth = el.offsetWidth - el.clientWidth - left - parseFloat(goog.style.getComputedStyle(el, "borderRightWidth"));
      left += scrollbarWidth
    }
    return new goog.math.Coordinate(left, parseFloat(goog.style.getComputedStyle(el, "borderTopWidth")))
  }
  return new goog.math.Coordinate(el.clientLeft, el.clientTop)
};
goog.style.getPageOffset = function(el) {
  var box, doc = goog.dom.getOwnerDocument(el);
  var positionStyle = goog.style.getStyle_(el, "position");
  var BUGGY_GECKO_BOX_OBJECT = goog.userAgent.GECKO && doc.getBoxObjectFor && !el.getBoundingClientRect && positionStyle == "absolute" && (box = doc.getBoxObjectFor(el)) && (box.screenX < 0 || box.screenY < 0);
  var pos = new goog.math.Coordinate(0, 0);
  var viewportElement = goog.style.getClientViewportElement(doc);
  if(el == viewportElement) {
    return pos
  }
  if(el.getBoundingClientRect) {
    box = goog.style.getBoundingClientRect_(el);
    var scrollCoord = goog.dom.getDomHelper(doc).getDocumentScroll();
    pos.x = box.left + scrollCoord.x;
    pos.y = box.top + scrollCoord.y
  }else {
    if(doc.getBoxObjectFor && !BUGGY_GECKO_BOX_OBJECT) {
      box = doc.getBoxObjectFor(el);
      var vpBox = doc.getBoxObjectFor(viewportElement);
      pos.x = box.screenX - vpBox.screenX;
      pos.y = box.screenY - vpBox.screenY
    }else {
      var parent = el;
      do {
        pos.x += parent.offsetLeft;
        pos.y += parent.offsetTop;
        if(parent != el) {
          pos.x += parent.clientLeft || 0;
          pos.y += parent.clientTop || 0
        }
        if(goog.userAgent.WEBKIT && goog.style.getComputedPosition(parent) == "fixed") {
          pos.x += doc.body.scrollLeft;
          pos.y += doc.body.scrollTop;
          break
        }
        parent = parent.offsetParent
      }while(parent && parent != el);
      if(goog.userAgent.OPERA || goog.userAgent.WEBKIT && positionStyle == "absolute") {
        pos.y -= doc.body.offsetTop
      }
      for(parent = el;(parent = goog.style.getOffsetParent(parent)) && parent != doc.body && parent != viewportElement;) {
        pos.x -= parent.scrollLeft;
        if(!goog.userAgent.OPERA || parent.tagName != "TR") {
          pos.y -= parent.scrollTop
        }
      }
    }
  }
  return pos
};
goog.style.getPageOffsetLeft = function(el) {
  return goog.style.getPageOffset(el).x
};
goog.style.getPageOffsetTop = function(el) {
  return goog.style.getPageOffset(el).y
};
goog.style.getFramedPageOffset = function(el, relativeWin) {
  var position = new goog.math.Coordinate(0, 0);
  var currentWin = goog.dom.getWindow(goog.dom.getOwnerDocument(el));
  var currentEl = el;
  do {
    var offset = currentWin == relativeWin ? goog.style.getPageOffset(currentEl) : goog.style.getClientPosition(currentEl);
    position.x += offset.x;
    position.y += offset.y
  }while(currentWin && currentWin != relativeWin && (currentEl = currentWin.frameElement) && (currentWin = currentWin.parent));
  return position
};
goog.style.translateRectForAnotherFrame = function(rect, origBase, newBase) {
  if(origBase.getDocument() != newBase.getDocument()) {
    var body = origBase.getDocument().body;
    var pos = goog.style.getFramedPageOffset(body, newBase.getWindow());
    pos = goog.math.Coordinate.difference(pos, goog.style.getPageOffset(body));
    if(goog.userAgent.IE && !origBase.isCss1CompatMode()) {
      pos = goog.math.Coordinate.difference(pos, origBase.getDocumentScroll())
    }
    rect.left += pos.x;
    rect.top += pos.y
  }
};
goog.style.getRelativePosition = function(a, b) {
  var ap = goog.style.getClientPosition(a);
  var bp = goog.style.getClientPosition(b);
  return new goog.math.Coordinate(ap.x - bp.x, ap.y - bp.y)
};
goog.style.getClientPosition = function(el) {
  var pos = new goog.math.Coordinate;
  if(el.nodeType == goog.dom.NodeType.ELEMENT) {
    if(el.getBoundingClientRect) {
      var box = goog.style.getBoundingClientRect_(el);
      pos.x = box.left;
      pos.y = box.top
    }else {
      var scrollCoord = goog.dom.getDomHelper(el).getDocumentScroll();
      var pageCoord = goog.style.getPageOffset(el);
      pos.x = pageCoord.x - scrollCoord.x;
      pos.y = pageCoord.y - scrollCoord.y
    }
  }else {
    var isAbstractedEvent = goog.isFunction(el.getBrowserEvent);
    var targetEvent = el;
    if(el.targetTouches) {
      targetEvent = el.targetTouches[0]
    }else {
      if(isAbstractedEvent && el.getBrowserEvent().targetTouches) {
        targetEvent = el.getBrowserEvent().targetTouches[0]
      }
    }
    pos.x = targetEvent.clientX;
    pos.y = targetEvent.clientY
  }
  return pos
};
goog.style.setPageOffset = function(el, x, opt_y) {
  var cur = goog.style.getPageOffset(el);
  if(x instanceof goog.math.Coordinate) {
    opt_y = x.y;
    x = x.x
  }
  var dx = x - cur.x;
  var dy = opt_y - cur.y;
  goog.style.setPosition(el, el.offsetLeft + dx, el.offsetTop + dy)
};
goog.style.setSize = function(element, w, opt_h) {
  var h;
  if(w instanceof goog.math.Size) {
    h = w.height;
    w = w.width
  }else {
    if(opt_h == undefined) {
      throw Error("missing height argument");
    }
    h = opt_h
  }
  goog.style.setWidth(element, w);
  goog.style.setHeight(element, h)
};
goog.style.getPixelStyleValue_ = function(value, round) {
  if(typeof value == "number") {
    value = (round ? Math.round(value) : value) + "px"
  }
  return value
};
goog.style.setHeight = function(element, height) {
  element.style.height = goog.style.getPixelStyleValue_(height, true)
};
goog.style.setWidth = function(element, width) {
  element.style.width = goog.style.getPixelStyleValue_(width, true)
};
goog.style.getSize = function(element) {
  if(goog.style.getStyle_(element, "display") != "none") {
    return new goog.math.Size(element.offsetWidth, element.offsetHeight)
  }
  var style = element.style;
  var originalDisplay = style.display;
  var originalVisibility = style.visibility;
  var originalPosition = style.position;
  style.visibility = "hidden";
  style.position = "absolute";
  style.display = "inline";
  var originalWidth = element.offsetWidth;
  var originalHeight = element.offsetHeight;
  style.display = originalDisplay;
  style.position = originalPosition;
  style.visibility = originalVisibility;
  return new goog.math.Size(originalWidth, originalHeight)
};
goog.style.getBounds = function(element) {
  var o = goog.style.getPageOffset(element);
  var s = goog.style.getSize(element);
  return new goog.math.Rect(o.x, o.y, s.width, s.height)
};
goog.style.toCamelCase = function(selector) {
  return goog.string.toCamelCase(String(selector))
};
goog.style.toSelectorCase = function(selector) {
  return goog.string.toSelectorCase(selector)
};
goog.style.getOpacity = function(el) {
  var style = el.style;
  var result = "";
  if("opacity" in style) {
    result = style.opacity
  }else {
    if("MozOpacity" in style) {
      result = style.MozOpacity
    }else {
      if("filter" in style) {
        var match = style.filter.match(/alpha\(opacity=([\d.]+)\)/);
        if(match) {
          result = String(match[1] / 100)
        }
      }
    }
  }
  return result == "" ? result : Number(result)
};
goog.style.setOpacity = function(el, alpha) {
  var style = el.style;
  if("opacity" in style) {
    style.opacity = alpha
  }else {
    if("MozOpacity" in style) {
      style.MozOpacity = alpha
    }else {
      if("filter" in style) {
        if(alpha === "") {
          style.filter = ""
        }else {
          style.filter = "alpha(opacity=" + alpha * 100 + ")"
        }
      }
    }
  }
};
goog.style.setTransparentBackgroundImage = function(el, src) {
  var style = el.style;
  if(goog.userAgent.IE && !goog.userAgent.isVersion("8")) {
    style.filter = "progid:DXImageTransform.Microsoft.AlphaImageLoader(" + 'src="' + src + '", sizingMethod="crop")'
  }else {
    style.backgroundImage = "url(" + src + ")";
    style.backgroundPosition = "top left";
    style.backgroundRepeat = "no-repeat"
  }
};
goog.style.clearTransparentBackgroundImage = function(el) {
  var style = el.style;
  if("filter" in style) {
    style.filter = ""
  }else {
    style.backgroundImage = "none"
  }
};
goog.style.showElement = function(el, display) {
  el.style.display = display ? "" : "none"
};
goog.style.isElementShown = function(el) {
  return el.style.display != "none"
};
goog.style.installStyles = function(stylesString, opt_node) {
  var dh = goog.dom.getDomHelper(opt_node);
  var styleSheet = null;
  if(goog.userAgent.IE) {
    styleSheet = dh.getDocument().createStyleSheet();
    goog.style.setStyles(styleSheet, stylesString)
  }else {
    var head = dh.getElementsByTagNameAndClass("head")[0];
    if(!head) {
      var body = dh.getElementsByTagNameAndClass("body")[0];
      head = dh.createDom("head");
      body.parentNode.insertBefore(head, body)
    }
    styleSheet = dh.createDom("style");
    goog.style.setStyles(styleSheet, stylesString);
    dh.appendChild(head, styleSheet)
  }
  return styleSheet
};
goog.style.uninstallStyles = function(styleSheet) {
  var node = styleSheet.ownerNode || styleSheet.owningElement || styleSheet;
  goog.dom.removeNode(node)
};
goog.style.setStyles = function(element, stylesString) {
  if(goog.userAgent.IE) {
    element.cssText = stylesString
  }else {
    var propToSet = goog.userAgent.WEBKIT ? "innerText" : "innerHTML";
    element[propToSet] = stylesString
  }
};
goog.style.setPreWrap = function(el) {
  var style = el.style;
  if(goog.userAgent.IE && !goog.userAgent.isVersion("8")) {
    style.whiteSpace = "pre";
    style.wordWrap = "break-word"
  }else {
    if(goog.userAgent.GECKO) {
      style.whiteSpace = "-moz-pre-wrap"
    }else {
      style.whiteSpace = "pre-wrap"
    }
  }
};
goog.style.setInlineBlock = function(el) {
  var style = el.style;
  style.position = "relative";
  if(goog.userAgent.IE && !goog.userAgent.isVersion("8")) {
    style.zoom = "1";
    style.display = "inline"
  }else {
    if(goog.userAgent.GECKO) {
      style.display = goog.userAgent.isVersion("1.9a") ? "inline-block" : "-moz-inline-box"
    }else {
      style.display = "inline-block"
    }
  }
};
goog.style.isRightToLeft = function(el) {
  return"rtl" == goog.style.getStyle_(el, "direction")
};
goog.style.unselectableStyle_ = goog.userAgent.GECKO ? "MozUserSelect" : goog.userAgent.WEBKIT ? "WebkitUserSelect" : null;
goog.style.isUnselectable = function(el) {
  if(goog.style.unselectableStyle_) {
    return el.style[goog.style.unselectableStyle_].toLowerCase() == "none"
  }else {
    if(goog.userAgent.IE || goog.userAgent.OPERA) {
      return el.getAttribute("unselectable") == "on"
    }
  }
  return false
};
goog.style.setUnselectable = function(el, unselectable, opt_noRecurse) {
  var descendants = !opt_noRecurse ? el.getElementsByTagName("*") : null;
  var name = goog.style.unselectableStyle_;
  if(name) {
    var value = unselectable ? "none" : "";
    el.style[name] = value;
    if(descendants) {
      for(var i = 0, descendant;descendant = descendants[i];i++) {
        descendant.style[name] = value
      }
    }
  }else {
    if(goog.userAgent.IE || goog.userAgent.OPERA) {
      var value = unselectable ? "on" : "";
      el.setAttribute("unselectable", value);
      if(descendants) {
        for(var i = 0, descendant;descendant = descendants[i];i++) {
          descendant.setAttribute("unselectable", value)
        }
      }
    }
  }
};
goog.style.getBorderBoxSize = function(element) {
  return new goog.math.Size(element.offsetWidth, element.offsetHeight)
};
goog.style.setBorderBoxSize = function(element, size) {
  var doc = goog.dom.getOwnerDocument(element);
  var isCss1CompatMode = goog.dom.getDomHelper(doc).isCss1CompatMode();
  if(goog.userAgent.IE && (!isCss1CompatMode || !goog.userAgent.isVersion("8"))) {
    var style = element.style;
    if(isCss1CompatMode) {
      var paddingBox = goog.style.getPaddingBox(element);
      var borderBox = goog.style.getBorderBox(element);
      style.pixelWidth = size.width - borderBox.left - paddingBox.left - paddingBox.right - borderBox.right;
      style.pixelHeight = size.height - borderBox.top - paddingBox.top - paddingBox.bottom - borderBox.bottom
    }else {
      style.pixelWidth = size.width;
      style.pixelHeight = size.height
    }
  }else {
    goog.style.setBoxSizingSize_(element, size, "border-box")
  }
};
goog.style.getContentBoxSize = function(element) {
  var doc = goog.dom.getOwnerDocument(element);
  var ieCurrentStyle = goog.userAgent.IE && element.currentStyle;
  if(ieCurrentStyle && goog.dom.getDomHelper(doc).isCss1CompatMode() && ieCurrentStyle.width != "auto" && ieCurrentStyle.height != "auto" && !ieCurrentStyle.boxSizing) {
    var width = goog.style.getIePixelValue_(element, ieCurrentStyle.width, "width", "pixelWidth");
    var height = goog.style.getIePixelValue_(element, ieCurrentStyle.height, "height", "pixelHeight");
    return new goog.math.Size(width, height)
  }else {
    var borderBoxSize = goog.style.getBorderBoxSize(element);
    var paddingBox = goog.style.getPaddingBox(element);
    var borderBox = goog.style.getBorderBox(element);
    return new goog.math.Size(borderBoxSize.width - borderBox.left - paddingBox.left - paddingBox.right - borderBox.right, borderBoxSize.height - borderBox.top - paddingBox.top - paddingBox.bottom - borderBox.bottom)
  }
};
goog.style.setContentBoxSize = function(element, size) {
  var doc = goog.dom.getOwnerDocument(element);
  var isCss1CompatMode = goog.dom.getDomHelper(doc).isCss1CompatMode();
  if(goog.userAgent.IE && (!isCss1CompatMode || !goog.userAgent.isVersion("8"))) {
    var style = element.style;
    if(isCss1CompatMode) {
      style.pixelWidth = size.width;
      style.pixelHeight = size.height
    }else {
      var paddingBox = goog.style.getPaddingBox(element);
      var borderBox = goog.style.getBorderBox(element);
      style.pixelWidth = size.width + borderBox.left + paddingBox.left + paddingBox.right + borderBox.right;
      style.pixelHeight = size.height + borderBox.top + paddingBox.top + paddingBox.bottom + borderBox.bottom
    }
  }else {
    goog.style.setBoxSizingSize_(element, size, "content-box")
  }
};
goog.style.setBoxSizingSize_ = function(element, size, boxSizing) {
  var style = element.style;
  if(goog.userAgent.GECKO) {
    style.MozBoxSizing = boxSizing
  }else {
    if(goog.userAgent.WEBKIT) {
      style.WebkitBoxSizing = boxSizing
    }else {
      style.boxSizing = boxSizing
    }
  }
  style.width = size.width + "px";
  style.height = size.height + "px"
};
goog.style.getIePixelValue_ = function(element, value, name, pixelName) {
  if(/^\d+px?$/.test(value)) {
    return parseInt(value, 10)
  }else {
    var oldStyleValue = element.style[name];
    var oldRuntimeValue = element.runtimeStyle[name];
    element.runtimeStyle[name] = element.currentStyle[name];
    element.style[name] = value;
    var pixelValue = element.style[pixelName];
    element.style[name] = oldStyleValue;
    element.runtimeStyle[name] = oldRuntimeValue;
    return pixelValue
  }
};
goog.style.getIePixelDistance_ = function(element, propName) {
  return goog.style.getIePixelValue_(element, goog.style.getCascadedStyle(element, propName), "left", "pixelLeft")
};
goog.style.getBox_ = function(element, stylePrefix) {
  if(goog.userAgent.IE) {
    var left = goog.style.getIePixelDistance_(element, stylePrefix + "Left");
    var right = goog.style.getIePixelDistance_(element, stylePrefix + "Right");
    var top = goog.style.getIePixelDistance_(element, stylePrefix + "Top");
    var bottom = goog.style.getIePixelDistance_(element, stylePrefix + "Bottom");
    return new goog.math.Box(top, right, bottom, left)
  }else {
    var left = goog.style.getComputedStyle(element, stylePrefix + "Left");
    var right = goog.style.getComputedStyle(element, stylePrefix + "Right");
    var top = goog.style.getComputedStyle(element, stylePrefix + "Top");
    var bottom = goog.style.getComputedStyle(element, stylePrefix + "Bottom");
    return new goog.math.Box(parseFloat(top), parseFloat(right), parseFloat(bottom), parseFloat(left))
  }
};
goog.style.getPaddingBox = function(element) {
  return goog.style.getBox_(element, "padding")
};
goog.style.getMarginBox = function(element) {
  return goog.style.getBox_(element, "margin")
};
goog.style.ieBorderWidthKeywords_ = {"thin":2, "medium":4, "thick":6};
goog.style.getIePixelBorder_ = function(element, prop) {
  if(goog.style.getCascadedStyle(element, prop + "Style") == "none") {
    return 0
  }
  var width = goog.style.getCascadedStyle(element, prop + "Width");
  if(width in goog.style.ieBorderWidthKeywords_) {
    return goog.style.ieBorderWidthKeywords_[width]
  }
  return goog.style.getIePixelValue_(element, width, "left", "pixelLeft")
};
goog.style.getBorderBox = function(element) {
  if(goog.userAgent.IE) {
    var left = goog.style.getIePixelBorder_(element, "borderLeft");
    var right = goog.style.getIePixelBorder_(element, "borderRight");
    var top = goog.style.getIePixelBorder_(element, "borderTop");
    var bottom = goog.style.getIePixelBorder_(element, "borderBottom");
    return new goog.math.Box(top, right, bottom, left)
  }else {
    var left = goog.style.getComputedStyle(element, "borderLeftWidth");
    var right = goog.style.getComputedStyle(element, "borderRightWidth");
    var top = goog.style.getComputedStyle(element, "borderTopWidth");
    var bottom = goog.style.getComputedStyle(element, "borderBottomWidth");
    return new goog.math.Box(parseFloat(top), parseFloat(right), parseFloat(bottom), parseFloat(left))
  }
};
goog.style.getFontFamily = function(el) {
  var doc = goog.dom.getOwnerDocument(el);
  var font = "";
  if(doc.body.createTextRange) {
    var range = doc.body.createTextRange();
    range.moveToElementText(el);
    try {
      font = range.queryCommandValue("FontName")
    }catch(e) {
      font = ""
    }
  }
  if(!font) {
    font = goog.style.getStyle_(el, "fontFamily")
  }
  var fontsArray = font.split(",");
  if(fontsArray.length > 1) {
    font = fontsArray[0]
  }
  return goog.string.stripQuotes(font, "\"'")
};
goog.style.lengthUnitRegex_ = /[^\d]+$/;
goog.style.getLengthUnits = function(value) {
  var units = value.match(goog.style.lengthUnitRegex_);
  return units && units[0] || null
};
goog.style.ABSOLUTE_CSS_LENGTH_UNITS_ = {"cm":1, "in":1, "mm":1, "pc":1, "pt":1};
goog.style.CONVERTIBLE_RELATIVE_CSS_UNITS_ = {"em":1, "ex":1};
goog.style.getFontSize = function(el) {
  var fontSize = goog.style.getStyle_(el, "fontSize");
  var sizeUnits = goog.style.getLengthUnits(fontSize);
  if(fontSize && "px" == sizeUnits) {
    return parseInt(fontSize, 10)
  }
  if(goog.userAgent.IE) {
    if(sizeUnits in goog.style.ABSOLUTE_CSS_LENGTH_UNITS_) {
      return goog.style.getIePixelValue_(el, fontSize, "left", "pixelLeft")
    }else {
      if(el.parentNode && el.parentNode.nodeType == goog.dom.NodeType.ELEMENT && sizeUnits in goog.style.CONVERTIBLE_RELATIVE_CSS_UNITS_) {
        var parentElement = el.parentNode;
        var parentSize = goog.style.getStyle_(parentElement, "fontSize");
        return goog.style.getIePixelValue_(parentElement, fontSize == parentSize ? "1em" : fontSize, "left", "pixelLeft")
      }
    }
  }
  var sizeElement = goog.dom.createDom("span", {"style":"visibility:hidden;position:absolute;" + "line-height:0;padding:0;margin:0;border:0;height:1em;"});
  goog.dom.appendChild(el, sizeElement);
  fontSize = sizeElement.offsetHeight;
  goog.dom.removeNode(sizeElement);
  return fontSize
};
goog.style.parseStyleAttribute = function(value) {
  var result = {};
  goog.array.forEach(value.split(/\s*;\s*/), function(pair) {
    var keyValue = pair.split(/\s*:\s*/);
    if(keyValue.length == 2) {
      result[goog.string.toCamelCase(keyValue[0].toLowerCase())] = keyValue[1]
    }
  });
  return result
};
goog.style.toStyleAttribute = function(obj) {
  var buffer = [];
  goog.object.forEach(obj, function(value, key) {
    buffer.push(goog.string.toSelectorCase(key), ":", value, ";")
  });
  return buffer.join("")
};
goog.style.setFloat = function(el, value) {
  el.style[goog.userAgent.IE ? "styleFloat" : "cssFloat"] = value
};
goog.style.getFloat = function(el) {
  return el.style[goog.userAgent.IE ? "styleFloat" : "cssFloat"] || ""
};
goog.style.getScrollbarWidth = function() {
  var mockElement = goog.dom.createElement("div");
  mockElement.style.cssText = "visibility:hidden;overflow:scroll;" + "position:absolute;top:0;width:100px;height:100px";
  goog.dom.appendChild(goog.dom.getDocument().body, mockElement);
  var width = mockElement.offsetWidth - mockElement.clientWidth;
  goog.dom.removeNode(mockElement);
  return width
};
goog.provide("domina");
goog.require("cljs.core");
goog.require("domina.support");
goog.require("goog.dom.classes");
goog.require("goog.events");
goog.require("goog.dom.xml");
goog.require("goog.dom.forms");
goog.require("goog.dom");
goog.require("goog.string");
goog.require("clojure.string");
goog.require("goog.style");
goog.require("cljs.core");
domina.re_html = /<|&#?\w+;/;
domina.re_leading_whitespace = /^\s+/;
domina.re_xhtml_tag = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:]+)[^>]*)\/>/i;
domina.re_tag_name = /<([\w:]+)/;
domina.re_no_inner_html = /<(?:script|style)/i;
domina.re_tbody = /<tbody/i;
var opt_wrapper__11202 = cljs.core.PersistentVector.fromArray([1, "<select multiple='multiple'>", "</select>"], true);
var table_section_wrapper__11203 = cljs.core.PersistentVector.fromArray([1, "<table>", "</table>"], true);
var cell_wrapper__11204 = cljs.core.PersistentVector.fromArray([3, "<table><tbody><tr>", "</tr></tbody></table>"], true);
domina.wrap_map = cljs.core.ObjMap.fromObject(["col", "\ufdd0'default", "tfoot", "caption", "optgroup", "legend", "area", "td", "thead", "th", "option", "tbody", "tr", "colgroup"], {"col":cljs.core.PersistentVector.fromArray([2, "<table><tbody></tbody><colgroup>", "</colgroup></table>"], true), "\ufdd0'default":cljs.core.PersistentVector.fromArray([0, "", ""], true), "tfoot":table_section_wrapper__11203, "caption":table_section_wrapper__11203, "optgroup":opt_wrapper__11202, "legend":cljs.core.PersistentVector.fromArray([1, 
"<fieldset>", "</fieldset>"], true), "area":cljs.core.PersistentVector.fromArray([1, "<map>", "</map>"], true), "td":cell_wrapper__11204, "thead":table_section_wrapper__11203, "th":cell_wrapper__11204, "option":opt_wrapper__11202, "tbody":table_section_wrapper__11203, "tr":cljs.core.PersistentVector.fromArray([2, "<table><tbody>", "</tbody></table>"], true), "colgroup":table_section_wrapper__11203});
domina.remove_extraneous_tbody_BANG_ = function remove_extraneous_tbody_BANG_(div, html) {
  var no_tbody_QMARK___11217 = cljs.core.not.call(null, cljs.core.re_find.call(null, domina.re_tbody, html));
  var tbody__11221 = function() {
    var and__3941__auto____11218 = cljs.core._EQ_.call(null, domina.tag_name, "table");
    if(and__3941__auto____11218) {
      return no_tbody_QMARK___11217
    }else {
      return and__3941__auto____11218
    }
  }() ? function() {
    var and__3941__auto____11219 = div.firstChild;
    if(cljs.core.truth_(and__3941__auto____11219)) {
      return div.firstChild.childNodes
    }else {
      return and__3941__auto____11219
    }
  }() : function() {
    var and__3941__auto____11220 = cljs.core._EQ_.call(null, domina.start_wrap, "<table>");
    if(and__3941__auto____11220) {
      return no_tbody_QMARK___11217
    }else {
      return and__3941__auto____11220
    }
  }() ? divchildNodes : cljs.core.PersistentVector.EMPTY;
  var G__11222__11223 = cljs.core.seq.call(null, tbody__11221);
  if(G__11222__11223) {
    var child__11224 = cljs.core.first.call(null, G__11222__11223);
    var G__11222__11225 = G__11222__11223;
    while(true) {
      if(function() {
        var and__3941__auto____11226 = cljs.core._EQ_.call(null, child__11224.nodeName, "tbody");
        if(and__3941__auto____11226) {
          return cljs.core._EQ_.call(null, child__11224.childNodes.length, 0)
        }else {
          return and__3941__auto____11226
        }
      }()) {
        child__11224.parentNode.removeChild(child__11224)
      }else {
      }
      var temp__4092__auto____11227 = cljs.core.next.call(null, G__11222__11225);
      if(temp__4092__auto____11227) {
        var G__11222__11228 = temp__4092__auto____11227;
        var G__11229 = cljs.core.first.call(null, G__11222__11228);
        var G__11230 = G__11222__11228;
        child__11224 = G__11229;
        G__11222__11225 = G__11230;
        continue
      }else {
        return null
      }
      break
    }
  }else {
    return null
  }
};
domina.restore_leading_whitespace_BANG_ = function restore_leading_whitespace_BANG_(div, html) {
  return div.insertBefore(document.createTextNode(cljs.core.first.call(null, cljs.core.re_find.call(null, domina.re_leading_whitespace, html))), div.firstChild)
};
domina.html_to_dom = function html_to_dom(html) {
  var html__11244 = clojure.string.replace.call(null, html, domina.re_xhtml_tag, "<$1></$2>");
  var tag_name__11245 = [cljs.core.str(cljs.core.second.call(null, cljs.core.re_find.call(null, domina.re_tag_name, html__11244)))].join("").toLowerCase();
  var vec__11243__11246 = cljs.core._lookup.call(null, domina.wrap_map, tag_name__11245, (new cljs.core.Keyword("\ufdd0'default")).call(null, domina.wrap_map));
  var depth__11247 = cljs.core.nth.call(null, vec__11243__11246, 0, null);
  var start_wrap__11248 = cljs.core.nth.call(null, vec__11243__11246, 1, null);
  var end_wrap__11249 = cljs.core.nth.call(null, vec__11243__11246, 2, null);
  var div__11253 = function() {
    var wrapper__11251 = function() {
      var div__11250 = document.createElement("div");
      div__11250.innerHTML = [cljs.core.str(start_wrap__11248), cljs.core.str(html__11244), cljs.core.str(end_wrap__11249)].join("");
      return div__11250
    }();
    var level__11252 = depth__11247;
    while(true) {
      if(level__11252 > 0) {
        var G__11255 = wrapper__11251.lastChild;
        var G__11256 = level__11252 - 1;
        wrapper__11251 = G__11255;
        level__11252 = G__11256;
        continue
      }else {
        return wrapper__11251
      }
      break
    }
  }();
  if(cljs.core.truth_(domina.support.extraneous_tbody_QMARK_)) {
    domina.remove_extraneous_tbody_BANG_.call(null, div__11253, html__11244)
  }else {
  }
  if(cljs.core.truth_(function() {
    var and__3941__auto____11254 = cljs.core.not.call(null, domina.support.leading_whitespace_QMARK_);
    if(and__3941__auto____11254) {
      return cljs.core.re_find.call(null, domina.re_leading_whitespace, html__11244)
    }else {
      return and__3941__auto____11254
    }
  }())) {
    domina.restore_leading_whitespace_BANG_.call(null, div__11253, html__11244)
  }else {
  }
  return div__11253.childNodes
};
domina.string_to_dom = function string_to_dom(s) {
  if(cljs.core.truth_(cljs.core.re_find.call(null, domina.re_html, s))) {
    return domina.html_to_dom.call(null, s)
  }else {
    return document.createTextNode(s)
  }
};
domina.DomContent = {};
domina.nodes = function nodes(content) {
  if(function() {
    var and__3941__auto____11261 = content;
    if(and__3941__auto____11261) {
      return content.domina$DomContent$nodes$arity$1
    }else {
      return and__3941__auto____11261
    }
  }()) {
    return content.domina$DomContent$nodes$arity$1(content)
  }else {
    var x__2314__auto____11262 = content == null ? null : content;
    return function() {
      var or__3943__auto____11263 = domina.nodes[goog.typeOf(x__2314__auto____11262)];
      if(or__3943__auto____11263) {
        return or__3943__auto____11263
      }else {
        var or__3943__auto____11264 = domina.nodes["_"];
        if(or__3943__auto____11264) {
          return or__3943__auto____11264
        }else {
          throw cljs.core.missing_protocol.call(null, "DomContent.nodes", content);
        }
      }
    }().call(null, content)
  }
};
domina.single_node = function single_node(nodeseq) {
  if(function() {
    var and__3941__auto____11269 = nodeseq;
    if(and__3941__auto____11269) {
      return nodeseq.domina$DomContent$single_node$arity$1
    }else {
      return and__3941__auto____11269
    }
  }()) {
    return nodeseq.domina$DomContent$single_node$arity$1(nodeseq)
  }else {
    var x__2314__auto____11270 = nodeseq == null ? null : nodeseq;
    return function() {
      var or__3943__auto____11271 = domina.single_node[goog.typeOf(x__2314__auto____11270)];
      if(or__3943__auto____11271) {
        return or__3943__auto____11271
      }else {
        var or__3943__auto____11272 = domina.single_node["_"];
        if(or__3943__auto____11272) {
          return or__3943__auto____11272
        }else {
          throw cljs.core.missing_protocol.call(null, "DomContent.single-node", nodeseq);
        }
      }
    }().call(null, nodeseq)
  }
};
domina._STAR_debug_STAR_ = true;
domina.log_debug = function() {
  var log_debug__delegate = function(mesg) {
    if(cljs.core.truth_(function() {
      var and__3941__auto____11274 = domina._STAR_debug_STAR_;
      if(cljs.core.truth_(and__3941__auto____11274)) {
        return!cljs.core._EQ_.call(null, window.console, undefined)
      }else {
        return and__3941__auto____11274
      }
    }())) {
      return console.log(cljs.core.apply.call(null, cljs.core.str, mesg))
    }else {
      return null
    }
  };
  var log_debug = function(var_args) {
    var mesg = null;
    if(goog.isDef(var_args)) {
      mesg = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return log_debug__delegate.call(this, mesg)
  };
  log_debug.cljs$lang$maxFixedArity = 0;
  log_debug.cljs$lang$applyTo = function(arglist__11275) {
    var mesg = cljs.core.seq(arglist__11275);
    return log_debug__delegate(mesg)
  };
  log_debug.cljs$lang$arity$variadic = log_debug__delegate;
  return log_debug
}();
domina.log = function() {
  var log__delegate = function(mesg) {
    if(cljs.core.truth_(window.console)) {
      return console.log(cljs.core.apply.call(null, cljs.core.str, mesg))
    }else {
      return null
    }
  };
  var log = function(var_args) {
    var mesg = null;
    if(goog.isDef(var_args)) {
      mesg = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return log__delegate.call(this, mesg)
  };
  log.cljs$lang$maxFixedArity = 0;
  log.cljs$lang$applyTo = function(arglist__11276) {
    var mesg = cljs.core.seq(arglist__11276);
    return log__delegate(mesg)
  };
  log.cljs$lang$arity$variadic = log__delegate;
  return log
}();
domina.by_id = function by_id(id) {
  return goog.dom.getElement(cljs.core.name.call(null, id))
};
domina.by_class = function by_class(class_name) {
  if(void 0 === domina.t11284) {
    domina.t11284 = function(class_name, by_class, meta11285) {
      this.class_name = class_name;
      this.by_class = by_class;
      this.meta11285 = meta11285;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216
    };
    domina.t11284.cljs$lang$type = true;
    domina.t11284.cljs$lang$ctorPrSeq = function(this__2260__auto__) {
      return cljs.core.list.call(null, "domina/t11284")
    };
    domina.t11284.prototype.domina$DomContent$ = true;
    domina.t11284.prototype.domina$DomContent$nodes$arity$1 = function(_) {
      var this__11287 = this;
      return domina.normalize_seq.call(null, goog.dom.getElementsByClass(cljs.core.name.call(null, this__11287.class_name)))
    };
    domina.t11284.prototype.domina$DomContent$single_node$arity$1 = function(_) {
      var this__11288 = this;
      return domina.normalize_seq.call(null, goog.dom.getElementByClass(cljs.core.name.call(null, this__11288.class_name)))
    };
    domina.t11284.prototype.cljs$core$IMeta$_meta$arity$1 = function(_11286) {
      var this__11289 = this;
      return this__11289.meta11285
    };
    domina.t11284.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_11286, meta11285) {
      var this__11290 = this;
      return new domina.t11284(this__11290.class_name, this__11290.by_class, meta11285)
    };
    domina.t11284
  }else {
  }
  return new domina.t11284(class_name, by_class, null)
};
domina.children = function children(content) {
  return cljs.core.doall.call(null, cljs.core.mapcat.call(null, goog.dom.getChildren, domina.nodes.call(null, content)))
};
domina.clone = function clone(content) {
  return cljs.core.map.call(null, function(p1__11291_SHARP_) {
    return p1__11291_SHARP_.cloneNode(true)
  }, domina.nodes.call(null, content))
};
domina.append_BANG_ = function append_BANG_(parent_content, child_content) {
  domina.apply_with_cloning.call(null, goog.dom.appendChild, parent_content, child_content);
  return parent_content
};
domina.insert_BANG_ = function insert_BANG_(parent_content, child_content, idx) {
  domina.apply_with_cloning.call(null, function(p1__11292_SHARP_, p2__11293_SHARP_) {
    return goog.dom.insertChildAt(p1__11292_SHARP_, p2__11293_SHARP_, idx)
  }, parent_content, child_content);
  return parent_content
};
domina.prepend_BANG_ = function prepend_BANG_(parent_content, child_content) {
  domina.insert_BANG_.call(null, parent_content, child_content, 0);
  return parent_content
};
domina.insert_before_BANG_ = function insert_before_BANG_(content, new_content) {
  domina.apply_with_cloning.call(null, function(p1__11295_SHARP_, p2__11294_SHARP_) {
    return goog.dom.insertSiblingBefore(p2__11294_SHARP_, p1__11295_SHARP_)
  }, content, new_content);
  return content
};
domina.insert_after_BANG_ = function insert_after_BANG_(content, new_content) {
  domina.apply_with_cloning.call(null, function(p1__11297_SHARP_, p2__11296_SHARP_) {
    return goog.dom.insertSiblingAfter(p2__11296_SHARP_, p1__11297_SHARP_)
  }, content, new_content);
  return content
};
domina.swap_content_BANG_ = function swap_content_BANG_(old_content, new_content) {
  domina.apply_with_cloning.call(null, function(p1__11299_SHARP_, p2__11298_SHARP_) {
    return goog.dom.replaceNode(p2__11298_SHARP_, p1__11299_SHARP_)
  }, old_content, new_content);
  return old_content
};
domina.detach_BANG_ = function detach_BANG_(content) {
  return cljs.core.doall.call(null, cljs.core.map.call(null, goog.dom.removeNode, domina.nodes.call(null, content)))
};
domina.destroy_BANG_ = function destroy_BANG_(content) {
  return cljs.core.dorun.call(null, cljs.core.map.call(null, goog.dom.removeNode, domina.nodes.call(null, content)))
};
domina.destroy_children_BANG_ = function destroy_children_BANG_(content) {
  cljs.core.dorun.call(null, cljs.core.map.call(null, goog.dom.removeChildren, domina.nodes.call(null, content)));
  return content
};
domina.style = function style(content, name) {
  var s__11301 = goog.style.getStyle(domina.single_node.call(null, content), cljs.core.name.call(null, name));
  if(cljs.core.truth_(clojure.string.blank_QMARK_.call(null, s__11301))) {
    return null
  }else {
    return s__11301
  }
};
domina.attr = function attr(content, name) {
  return domina.single_node.call(null, content).getAttribute(cljs.core.name.call(null, name))
};
domina.set_style_BANG_ = function() {
  var set_style_BANG___delegate = function(content, name, value) {
    var G__11308__11309 = cljs.core.seq.call(null, domina.nodes.call(null, content));
    if(G__11308__11309) {
      var n__11310 = cljs.core.first.call(null, G__11308__11309);
      var G__11308__11311 = G__11308__11309;
      while(true) {
        goog.style.setStyle(n__11310, cljs.core.name.call(null, name), cljs.core.apply.call(null, cljs.core.str, value));
        var temp__4092__auto____11312 = cljs.core.next.call(null, G__11308__11311);
        if(temp__4092__auto____11312) {
          var G__11308__11313 = temp__4092__auto____11312;
          var G__11314 = cljs.core.first.call(null, G__11308__11313);
          var G__11315 = G__11308__11313;
          n__11310 = G__11314;
          G__11308__11311 = G__11315;
          continue
        }else {
        }
        break
      }
    }else {
    }
    return content
  };
  var set_style_BANG_ = function(content, name, var_args) {
    var value = null;
    if(goog.isDef(var_args)) {
      value = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return set_style_BANG___delegate.call(this, content, name, value)
  };
  set_style_BANG_.cljs$lang$maxFixedArity = 2;
  set_style_BANG_.cljs$lang$applyTo = function(arglist__11316) {
    var content = cljs.core.first(arglist__11316);
    var name = cljs.core.first(cljs.core.next(arglist__11316));
    var value = cljs.core.rest(cljs.core.next(arglist__11316));
    return set_style_BANG___delegate(content, name, value)
  };
  set_style_BANG_.cljs$lang$arity$variadic = set_style_BANG___delegate;
  return set_style_BANG_
}();
domina.set_attr_BANG_ = function() {
  var set_attr_BANG___delegate = function(content, name, value) {
    var G__11323__11324 = cljs.core.seq.call(null, domina.nodes.call(null, content));
    if(G__11323__11324) {
      var n__11325 = cljs.core.first.call(null, G__11323__11324);
      var G__11323__11326 = G__11323__11324;
      while(true) {
        n__11325.setAttribute(cljs.core.name.call(null, name), cljs.core.apply.call(null, cljs.core.str, value));
        var temp__4092__auto____11327 = cljs.core.next.call(null, G__11323__11326);
        if(temp__4092__auto____11327) {
          var G__11323__11328 = temp__4092__auto____11327;
          var G__11329 = cljs.core.first.call(null, G__11323__11328);
          var G__11330 = G__11323__11328;
          n__11325 = G__11329;
          G__11323__11326 = G__11330;
          continue
        }else {
        }
        break
      }
    }else {
    }
    return content
  };
  var set_attr_BANG_ = function(content, name, var_args) {
    var value = null;
    if(goog.isDef(var_args)) {
      value = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return set_attr_BANG___delegate.call(this, content, name, value)
  };
  set_attr_BANG_.cljs$lang$maxFixedArity = 2;
  set_attr_BANG_.cljs$lang$applyTo = function(arglist__11331) {
    var content = cljs.core.first(arglist__11331);
    var name = cljs.core.first(cljs.core.next(arglist__11331));
    var value = cljs.core.rest(cljs.core.next(arglist__11331));
    return set_attr_BANG___delegate(content, name, value)
  };
  set_attr_BANG_.cljs$lang$arity$variadic = set_attr_BANG___delegate;
  return set_attr_BANG_
}();
domina.remove_attr_BANG_ = function remove_attr_BANG_(content, name) {
  var G__11338__11339 = cljs.core.seq.call(null, domina.nodes.call(null, content));
  if(G__11338__11339) {
    var n__11340 = cljs.core.first.call(null, G__11338__11339);
    var G__11338__11341 = G__11338__11339;
    while(true) {
      n__11340.removeAttribute(cljs.core.name.call(null, name));
      var temp__4092__auto____11342 = cljs.core.next.call(null, G__11338__11341);
      if(temp__4092__auto____11342) {
        var G__11338__11343 = temp__4092__auto____11342;
        var G__11344 = cljs.core.first.call(null, G__11338__11343);
        var G__11345 = G__11338__11343;
        n__11340 = G__11344;
        G__11338__11341 = G__11345;
        continue
      }else {
      }
      break
    }
  }else {
  }
  return content
};
domina.parse_style_attributes = function parse_style_attributes(style) {
  return cljs.core.reduce.call(null, function(acc, pair) {
    var vec__11351__11352 = pair.split(/\s*:\s*/);
    var k__11353 = cljs.core.nth.call(null, vec__11351__11352, 0, null);
    var v__11354 = cljs.core.nth.call(null, vec__11351__11352, 1, null);
    if(cljs.core.truth_(function() {
      var and__3941__auto____11355 = k__11353;
      if(cljs.core.truth_(and__3941__auto____11355)) {
        return v__11354
      }else {
        return and__3941__auto____11355
      }
    }())) {
      return cljs.core.assoc.call(null, acc, cljs.core.keyword.call(null, k__11353.toLowerCase()), v__11354)
    }else {
      return acc
    }
  }, cljs.core.ObjMap.EMPTY, style.split(/\s*;\s*/))
};
domina.styles = function styles(content) {
  var style__11358 = domina.attr.call(null, content, "style");
  if(cljs.core.string_QMARK_.call(null, style__11358)) {
    return domina.parse_style_attributes.call(null, style__11358)
  }else {
    if(cljs.core.truth_(style__11358.cssText)) {
      return domina.parse_style_attributes.call(null, style__11358.cssText)
    }else {
      return null
    }
  }
};
domina.attrs = function attrs(content) {
  var node__11364 = domina.single_node.call(null, content);
  var attrs__11365 = node__11364.attributes;
  return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.filter.call(null, cljs.core.complement.call(null, cljs.core.nil_QMARK_), cljs.core.map.call(null, function(p1__11356_SHARP_) {
    var attr__11366 = attrs__11365.item(p1__11356_SHARP_);
    var value__11367 = attr__11366.nodeValue;
    if(function() {
      var and__3941__auto____11368 = cljs.core.not_EQ_.call(null, null, value__11367);
      if(and__3941__auto____11368) {
        return cljs.core.not_EQ_.call(null, "", value__11367)
      }else {
        return and__3941__auto____11368
      }
    }()) {
      return cljs.core.PersistentArrayMap.fromArrays([cljs.core.keyword.call(null, attr__11366.nodeName.toLowerCase())], [attr__11366.nodeValue])
    }else {
      return null
    }
  }, cljs.core.range.call(null, attrs__11365.length))))
};
domina.set_styles_BANG_ = function set_styles_BANG_(content, styles) {
  var G__11388__11389 = cljs.core.seq.call(null, styles);
  if(G__11388__11389) {
    var G__11391__11393 = cljs.core.first.call(null, G__11388__11389);
    var vec__11392__11394 = G__11391__11393;
    var name__11395 = cljs.core.nth.call(null, vec__11392__11394, 0, null);
    var value__11396 = cljs.core.nth.call(null, vec__11392__11394, 1, null);
    var G__11388__11397 = G__11388__11389;
    var G__11391__11398 = G__11391__11393;
    var G__11388__11399 = G__11388__11397;
    while(true) {
      var vec__11400__11401 = G__11391__11398;
      var name__11402 = cljs.core.nth.call(null, vec__11400__11401, 0, null);
      var value__11403 = cljs.core.nth.call(null, vec__11400__11401, 1, null);
      var G__11388__11404 = G__11388__11399;
      domina.set_style_BANG_.call(null, content, name__11402, value__11403);
      var temp__4092__auto____11405 = cljs.core.next.call(null, G__11388__11404);
      if(temp__4092__auto____11405) {
        var G__11388__11406 = temp__4092__auto____11405;
        var G__11407 = cljs.core.first.call(null, G__11388__11406);
        var G__11408 = G__11388__11406;
        G__11391__11398 = G__11407;
        G__11388__11399 = G__11408;
        continue
      }else {
      }
      break
    }
  }else {
  }
  return content
};
domina.set_attrs_BANG_ = function set_attrs_BANG_(content, attrs) {
  var G__11428__11429 = cljs.core.seq.call(null, attrs);
  if(G__11428__11429) {
    var G__11431__11433 = cljs.core.first.call(null, G__11428__11429);
    var vec__11432__11434 = G__11431__11433;
    var name__11435 = cljs.core.nth.call(null, vec__11432__11434, 0, null);
    var value__11436 = cljs.core.nth.call(null, vec__11432__11434, 1, null);
    var G__11428__11437 = G__11428__11429;
    var G__11431__11438 = G__11431__11433;
    var G__11428__11439 = G__11428__11437;
    while(true) {
      var vec__11440__11441 = G__11431__11438;
      var name__11442 = cljs.core.nth.call(null, vec__11440__11441, 0, null);
      var value__11443 = cljs.core.nth.call(null, vec__11440__11441, 1, null);
      var G__11428__11444 = G__11428__11439;
      domina.set_attr_BANG_.call(null, content, name__11442, value__11443);
      var temp__4092__auto____11445 = cljs.core.next.call(null, G__11428__11444);
      if(temp__4092__auto____11445) {
        var G__11428__11446 = temp__4092__auto____11445;
        var G__11447 = cljs.core.first.call(null, G__11428__11446);
        var G__11448 = G__11428__11446;
        G__11431__11438 = G__11447;
        G__11428__11439 = G__11448;
        continue
      }else {
      }
      break
    }
  }else {
  }
  return content
};
domina.has_class_QMARK_ = function has_class_QMARK_(content, class$) {
  return goog.dom.classes.has(domina.single_node.call(null, content), class$)
};
domina.add_class_BANG_ = function add_class_BANG_(content, class$) {
  var G__11455__11456 = cljs.core.seq.call(null, domina.nodes.call(null, content));
  if(G__11455__11456) {
    var node__11457 = cljs.core.first.call(null, G__11455__11456);
    var G__11455__11458 = G__11455__11456;
    while(true) {
      goog.dom.classes.add(node__11457, class$);
      var temp__4092__auto____11459 = cljs.core.next.call(null, G__11455__11458);
      if(temp__4092__auto____11459) {
        var G__11455__11460 = temp__4092__auto____11459;
        var G__11461 = cljs.core.first.call(null, G__11455__11460);
        var G__11462 = G__11455__11460;
        node__11457 = G__11461;
        G__11455__11458 = G__11462;
        continue
      }else {
      }
      break
    }
  }else {
  }
  return content
};
domina.remove_class_BANG_ = function remove_class_BANG_(content, class$) {
  var G__11469__11470 = cljs.core.seq.call(null, domina.nodes.call(null, content));
  if(G__11469__11470) {
    var node__11471 = cljs.core.first.call(null, G__11469__11470);
    var G__11469__11472 = G__11469__11470;
    while(true) {
      goog.dom.classes.remove(node__11471, class$);
      var temp__4092__auto____11473 = cljs.core.next.call(null, G__11469__11472);
      if(temp__4092__auto____11473) {
        var G__11469__11474 = temp__4092__auto____11473;
        var G__11475 = cljs.core.first.call(null, G__11469__11474);
        var G__11476 = G__11469__11474;
        node__11471 = G__11475;
        G__11469__11472 = G__11476;
        continue
      }else {
      }
      break
    }
  }else {
  }
  return content
};
domina.classes = function classes(content) {
  return cljs.core.seq.call(null, goog.dom.classes.get(domina.single_node.call(null, content)))
};
domina.set_classes_BANG_ = function set_classes_BANG_(content, classes) {
  var classes__11484 = cljs.core.coll_QMARK_.call(null, classes) ? clojure.string.join.call(null, " ", classes) : classes;
  var G__11485__11486 = cljs.core.seq.call(null, domina.nodes.call(null, content));
  if(G__11485__11486) {
    var node__11487 = cljs.core.first.call(null, G__11485__11486);
    var G__11485__11488 = G__11485__11486;
    while(true) {
      goog.dom.classes.set(node__11487, classes__11484);
      var temp__4092__auto____11489 = cljs.core.next.call(null, G__11485__11488);
      if(temp__4092__auto____11489) {
        var G__11485__11490 = temp__4092__auto____11489;
        var G__11491 = cljs.core.first.call(null, G__11485__11490);
        var G__11492 = G__11485__11490;
        node__11487 = G__11491;
        G__11485__11488 = G__11492;
        continue
      }else {
      }
      break
    }
  }else {
  }
  return content
};
domina.text = function text(content) {
  return goog.string.trim(goog.dom.getTextContent(domina.single_node.call(null, content)))
};
domina.set_text_BANG_ = function set_text_BANG_(content, value) {
  var G__11499__11500 = cljs.core.seq.call(null, domina.nodes.call(null, content));
  if(G__11499__11500) {
    var node__11501 = cljs.core.first.call(null, G__11499__11500);
    var G__11499__11502 = G__11499__11500;
    while(true) {
      goog.dom.setTextContent(node__11501, value);
      var temp__4092__auto____11503 = cljs.core.next.call(null, G__11499__11502);
      if(temp__4092__auto____11503) {
        var G__11499__11504 = temp__4092__auto____11503;
        var G__11505 = cljs.core.first.call(null, G__11499__11504);
        var G__11506 = G__11499__11504;
        node__11501 = G__11505;
        G__11499__11502 = G__11506;
        continue
      }else {
      }
      break
    }
  }else {
  }
  return content
};
domina.value = function value(content) {
  return goog.dom.forms.getValue(domina.single_node.call(null, content))
};
domina.set_value_BANG_ = function set_value_BANG_(content, value) {
  var G__11513__11514 = cljs.core.seq.call(null, domina.nodes.call(null, content));
  if(G__11513__11514) {
    var node__11515 = cljs.core.first.call(null, G__11513__11514);
    var G__11513__11516 = G__11513__11514;
    while(true) {
      goog.dom.forms.setValue(node__11515, value);
      var temp__4092__auto____11517 = cljs.core.next.call(null, G__11513__11516);
      if(temp__4092__auto____11517) {
        var G__11513__11518 = temp__4092__auto____11517;
        var G__11519 = cljs.core.first.call(null, G__11513__11518);
        var G__11520 = G__11513__11518;
        node__11515 = G__11519;
        G__11513__11516 = G__11520;
        continue
      }else {
      }
      break
    }
  }else {
  }
  return content
};
domina.html = function html(content) {
  return domina.single_node.call(null, content).innerHTML
};
domina.replace_children_BANG_ = function replace_children_BANG_(content, inner_content) {
  return domina.append_BANG_.call(null, domina.destroy_children_BANG_.call(null, content), inner_content)
};
domina.set_inner_html_BANG_ = function set_inner_html_BANG_(content, html_string) {
  var allows_inner_html_QMARK___11537 = cljs.core.not.call(null, cljs.core.re_find.call(null, domina.re_no_inner_html, html_string));
  var leading_whitespace_QMARK___11538 = cljs.core.re_find.call(null, domina.re_leading_whitespace, html_string);
  var tag_name__11539 = [cljs.core.str(cljs.core.second.call(null, cljs.core.re_find.call(null, domina.re_tag_name, html_string)))].join("").toLowerCase();
  var special_tag_QMARK___11540 = cljs.core.contains_QMARK_.call(null, domina.wrap_map, tag_name__11539);
  if(cljs.core.truth_(function() {
    var and__3941__auto____11541 = allows_inner_html_QMARK___11537;
    if(and__3941__auto____11541) {
      var and__3941__auto____11543 = function() {
        var or__3943__auto____11542 = domina.support.leading_whitespace_QMARK_;
        if(cljs.core.truth_(or__3943__auto____11542)) {
          return or__3943__auto____11542
        }else {
          return cljs.core.not.call(null, leading_whitespace_QMARK___11538)
        }
      }();
      if(cljs.core.truth_(and__3941__auto____11543)) {
        return!special_tag_QMARK___11540
      }else {
        return and__3941__auto____11543
      }
    }else {
      return and__3941__auto____11541
    }
  }())) {
    var value__11544 = clojure.string.replace.call(null, html_string, domina.re_xhtml_tag, "<$1></$2>");
    try {
      var G__11547__11548 = cljs.core.seq.call(null, domina.nodes.call(null, content));
      if(G__11547__11548) {
        var node__11549 = cljs.core.first.call(null, G__11547__11548);
        var G__11547__11550 = G__11547__11548;
        while(true) {
          goog.events.removeAll(node__11549);
          node__11549.innerHTML = value__11544;
          var temp__4092__auto____11551 = cljs.core.next.call(null, G__11547__11550);
          if(temp__4092__auto____11551) {
            var G__11547__11552 = temp__4092__auto____11551;
            var G__11553 = cljs.core.first.call(null, G__11547__11552);
            var G__11554 = G__11547__11552;
            node__11549 = G__11553;
            G__11547__11550 = G__11554;
            continue
          }else {
          }
          break
        }
      }else {
      }
    }catch(e11545) {
      if(cljs.core.instance_QMARK_.call(null, domina.Exception, e11545)) {
        var e__11546 = e11545;
        domina.replace_children_BANG_.call(null, content, value__11544)
      }else {
        if("\ufdd0'else") {
          throw e11545;
        }else {
        }
      }
    }
  }else {
    domina.replace_children_BANG_.call(null, content, html_string)
  }
  return content
};
domina.set_html_BANG_ = function set_html_BANG_(content, inner_content) {
  if(cljs.core.string_QMARK_.call(null, inner_content)) {
    return domina.set_inner_html_BANG_.call(null, content, inner_content)
  }else {
    return domina.replace_children_BANG_.call(null, content, inner_content)
  }
};
domina.get_data = function() {
  var get_data = null;
  var get_data__2 = function(node, key) {
    return get_data.call(null, node, key, false)
  };
  var get_data__3 = function(node, key, bubble) {
    var m__11560 = domina.single_node.call(null, node).__domina_data;
    var value__11561 = cljs.core.truth_(m__11560) ? cljs.core._lookup.call(null, m__11560, key, null) : null;
    if(cljs.core.truth_(function() {
      var and__3941__auto____11562 = bubble;
      if(cljs.core.truth_(and__3941__auto____11562)) {
        return value__11561 == null
      }else {
        return and__3941__auto____11562
      }
    }())) {
      var temp__4092__auto____11563 = domina.single_node.call(null, node).parentNode;
      if(cljs.core.truth_(temp__4092__auto____11563)) {
        var parent__11564 = temp__4092__auto____11563;
        return get_data.call(null, parent__11564, key, true)
      }else {
        return null
      }
    }else {
      return value__11561
    }
  };
  get_data = function(node, key, bubble) {
    switch(arguments.length) {
      case 2:
        return get_data__2.call(this, node, key);
      case 3:
        return get_data__3.call(this, node, key, bubble)
    }
    throw"Invalid arity: " + arguments.length;
  };
  get_data.cljs$lang$arity$2 = get_data__2;
  get_data.cljs$lang$arity$3 = get_data__3;
  return get_data
}();
domina.set_data_BANG_ = function set_data_BANG_(node, key, value) {
  var m__11570 = function() {
    var or__3943__auto____11569 = domina.single_node.call(null, node).__domina_data;
    if(cljs.core.truth_(or__3943__auto____11569)) {
      return or__3943__auto____11569
    }else {
      return cljs.core.ObjMap.EMPTY
    }
  }();
  return domina.single_node.call(null, node).__domina_data = cljs.core.assoc.call(null, m__11570, key, value)
};
domina.apply_with_cloning = function apply_with_cloning(f, parent_content, child_content) {
  var parents__11582 = domina.nodes.call(null, parent_content);
  var children__11583 = domina.nodes.call(null, child_content);
  var first_child__11591 = function() {
    var frag__11584 = document.createDocumentFragment();
    var G__11585__11586 = cljs.core.seq.call(null, children__11583);
    if(G__11585__11586) {
      var child__11587 = cljs.core.first.call(null, G__11585__11586);
      var G__11585__11588 = G__11585__11586;
      while(true) {
        frag__11584.appendChild(child__11587);
        var temp__4092__auto____11589 = cljs.core.next.call(null, G__11585__11588);
        if(temp__4092__auto____11589) {
          var G__11585__11590 = temp__4092__auto____11589;
          var G__11593 = cljs.core.first.call(null, G__11585__11590);
          var G__11594 = G__11585__11590;
          child__11587 = G__11593;
          G__11585__11588 = G__11594;
          continue
        }else {
        }
        break
      }
    }else {
    }
    return frag__11584
  }();
  var other_children__11592 = cljs.core.doall.call(null, cljs.core.repeatedly.call(null, cljs.core.count.call(null, parents__11582) - 1, function() {
    return first_child__11591.cloneNode(true)
  }));
  if(cljs.core.seq.call(null, parents__11582)) {
    f.call(null, cljs.core.first.call(null, parents__11582), first_child__11591);
    return cljs.core.doall.call(null, cljs.core.map.call(null, function(p1__11565_SHARP_, p2__11566_SHARP_) {
      return f.call(null, p1__11565_SHARP_, p2__11566_SHARP_)
    }, cljs.core.rest.call(null, parents__11582), other_children__11592))
  }else {
    return null
  }
};
domina.lazy_nl_via_item = function() {
  var lazy_nl_via_item = null;
  var lazy_nl_via_item__1 = function(nl) {
    return lazy_nl_via_item.call(null, nl, 0)
  };
  var lazy_nl_via_item__2 = function(nl, n) {
    if(n < nl.length) {
      return new cljs.core.LazySeq(null, false, function() {
        return cljs.core.cons.call(null, nl.item(n), lazy_nl_via_item.call(null, nl, n + 1))
      }, null)
    }else {
      return null
    }
  };
  lazy_nl_via_item = function(nl, n) {
    switch(arguments.length) {
      case 1:
        return lazy_nl_via_item__1.call(this, nl);
      case 2:
        return lazy_nl_via_item__2.call(this, nl, n)
    }
    throw"Invalid arity: " + arguments.length;
  };
  lazy_nl_via_item.cljs$lang$arity$1 = lazy_nl_via_item__1;
  lazy_nl_via_item.cljs$lang$arity$2 = lazy_nl_via_item__2;
  return lazy_nl_via_item
}();
domina.lazy_nl_via_array_ref = function() {
  var lazy_nl_via_array_ref = null;
  var lazy_nl_via_array_ref__1 = function(nl) {
    return lazy_nl_via_array_ref.call(null, nl, 0)
  };
  var lazy_nl_via_array_ref__2 = function(nl, n) {
    if(n < nl.length) {
      return new cljs.core.LazySeq(null, false, function() {
        return cljs.core.cons.call(null, nl[n], lazy_nl_via_array_ref.call(null, nl, n + 1))
      }, null)
    }else {
      return null
    }
  };
  lazy_nl_via_array_ref = function(nl, n) {
    switch(arguments.length) {
      case 1:
        return lazy_nl_via_array_ref__1.call(this, nl);
      case 2:
        return lazy_nl_via_array_ref__2.call(this, nl, n)
    }
    throw"Invalid arity: " + arguments.length;
  };
  lazy_nl_via_array_ref.cljs$lang$arity$1 = lazy_nl_via_array_ref__1;
  lazy_nl_via_array_ref.cljs$lang$arity$2 = lazy_nl_via_array_ref__2;
  return lazy_nl_via_array_ref
}();
domina.lazy_nodelist = function lazy_nodelist(nl) {
  if(cljs.core.truth_(nl.item)) {
    return domina.lazy_nl_via_item.call(null, nl)
  }else {
    return domina.lazy_nl_via_array_ref.call(null, nl)
  }
};
domina.array_like_QMARK_ = function array_like_QMARK_(obj) {
  var and__3941__auto____11596 = obj;
  if(cljs.core.truth_(and__3941__auto____11596)) {
    return obj.length
  }else {
    return and__3941__auto____11596
  }
};
domina.normalize_seq = function normalize_seq(list_thing) {
  if(list_thing == null) {
    return cljs.core.List.EMPTY
  }else {
    if(function() {
      var G__11600__11601 = list_thing;
      if(G__11600__11601) {
        if(function() {
          var or__3943__auto____11602 = G__11600__11601.cljs$lang$protocol_mask$partition0$ & 8388608;
          if(or__3943__auto____11602) {
            return or__3943__auto____11602
          }else {
            return G__11600__11601.cljs$core$ISeqable$
          }
        }()) {
          return true
        }else {
          if(!G__11600__11601.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.ISeqable, G__11600__11601)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.ISeqable, G__11600__11601)
      }
    }()) {
      return cljs.core.seq.call(null, list_thing)
    }else {
      if(cljs.core.truth_(domina.array_like_QMARK_.call(null, list_thing))) {
        return domina.lazy_nodelist.call(null, list_thing)
      }else {
        if("\ufdd0'default") {
          return cljs.core.seq.call(null, cljs.core.PersistentVector.fromArray([list_thing], true))
        }else {
          return null
        }
      }
    }
  }
};
domina.DomContent["_"] = true;
domina.nodes["_"] = function(content) {
  if(content == null) {
    return cljs.core.List.EMPTY
  }else {
    if(function() {
      var G__11603__11604 = content;
      if(G__11603__11604) {
        if(function() {
          var or__3943__auto____11605 = G__11603__11604.cljs$lang$protocol_mask$partition0$ & 8388608;
          if(or__3943__auto____11605) {
            return or__3943__auto____11605
          }else {
            return G__11603__11604.cljs$core$ISeqable$
          }
        }()) {
          return true
        }else {
          if(!G__11603__11604.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.ISeqable, G__11603__11604)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.ISeqable, G__11603__11604)
      }
    }()) {
      return cljs.core.seq.call(null, content)
    }else {
      if(cljs.core.truth_(domina.array_like_QMARK_.call(null, content))) {
        return domina.lazy_nodelist.call(null, content)
      }else {
        if("\ufdd0'default") {
          return cljs.core.seq.call(null, cljs.core.PersistentVector.fromArray([content], true))
        }else {
          return null
        }
      }
    }
  }
};
domina.single_node["_"] = function(content) {
  if(content == null) {
    return null
  }else {
    if(function() {
      var G__11606__11607 = content;
      if(G__11606__11607) {
        if(function() {
          var or__3943__auto____11608 = G__11606__11607.cljs$lang$protocol_mask$partition0$ & 8388608;
          if(or__3943__auto____11608) {
            return or__3943__auto____11608
          }else {
            return G__11606__11607.cljs$core$ISeqable$
          }
        }()) {
          return true
        }else {
          if(!G__11606__11607.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.ISeqable, G__11606__11607)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.ISeqable, G__11606__11607)
      }
    }()) {
      return cljs.core.first.call(null, content)
    }else {
      if(cljs.core.truth_(domina.array_like_QMARK_.call(null, content))) {
        return content.item(0)
      }else {
        if("\ufdd0'default") {
          return content
        }else {
          return null
        }
      }
    }
  }
};
domina.DomContent["string"] = true;
domina.nodes["string"] = function(s) {
  return cljs.core.doall.call(null, domina.nodes.call(null, domina.string_to_dom.call(null, s)))
};
domina.single_node["string"] = function(s) {
  return domina.single_node.call(null, domina.string_to_dom.call(null, s))
};
if(cljs.core.truth_(typeof NodeList != "undefined")) {
  NodeList.prototype.cljs$core$ISeqable$ = true;
  NodeList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(nodelist) {
    return domina.lazy_nodelist.call(null, nodelist)
  };
  NodeList.prototype.cljs$core$IIndexed$ = true;
  NodeList.prototype.cljs$core$IIndexed$_nth$arity$2 = function(nodelist, n) {
    return nodelist.item(n)
  };
  NodeList.prototype.cljs$core$IIndexed$_nth$arity$3 = function(nodelist, n, not_found) {
    if(nodelist.length <= n) {
      return not_found
    }else {
      return cljs.core.nth.call(null, nodelist, n)
    }
  };
  NodeList.prototype.cljs$core$ICounted$ = true;
  NodeList.prototype.cljs$core$ICounted$_count$arity$1 = function(nodelist) {
    return nodelist.length
  }
}else {
}
if(cljs.core.truth_(typeof StaticNodeList != "undefined")) {
  StaticNodeList.prototype.cljs$core$ISeqable$ = true;
  StaticNodeList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(nodelist) {
    return domina.lazy_nodelist.call(null, nodelist)
  };
  StaticNodeList.prototype.cljs$core$IIndexed$ = true;
  StaticNodeList.prototype.cljs$core$IIndexed$_nth$arity$2 = function(nodelist, n) {
    return nodelist.item(n)
  };
  StaticNodeList.prototype.cljs$core$IIndexed$_nth$arity$3 = function(nodelist, n, not_found) {
    if(nodelist.length <= n) {
      return not_found
    }else {
      return cljs.core.nth.call(null, nodelist, n)
    }
  };
  StaticNodeList.prototype.cljs$core$ICounted$ = true;
  StaticNodeList.prototype.cljs$core$ICounted$_count$arity$1 = function(nodelist) {
    return nodelist.length
  }
}else {
}
if(cljs.core.truth_(typeof HTMLCollection != "undefined")) {
  HTMLCollection.prototype.cljs$core$ISeqable$ = true;
  HTMLCollection.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
    return domina.lazy_nodelist.call(null, coll)
  };
  HTMLCollection.prototype.cljs$core$IIndexed$ = true;
  HTMLCollection.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
    return coll.item(n)
  };
  HTMLCollection.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
    if(coll.length <= n) {
      return not_found
    }else {
      return cljs.core.nth.call(null, coll, n)
    }
  };
  HTMLCollection.prototype.cljs$core$ICounted$ = true;
  HTMLCollection.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
    return coll.length
  }
}else {
}
;goog.provide("domina.events");
goog.require("cljs.core");
goog.require("goog.events");
goog.require("goog.object");
goog.require("domina");
domina.events.Event = {};
domina.events.prevent_default = function prevent_default(evt) {
  if(function() {
    var and__3941__auto____10930 = evt;
    if(and__3941__auto____10930) {
      return evt.domina$events$Event$prevent_default$arity$1
    }else {
      return and__3941__auto____10930
    }
  }()) {
    return evt.domina$events$Event$prevent_default$arity$1(evt)
  }else {
    var x__2314__auto____10931 = evt == null ? null : evt;
    return function() {
      var or__3943__auto____10932 = domina.events.prevent_default[goog.typeOf(x__2314__auto____10931)];
      if(or__3943__auto____10932) {
        return or__3943__auto____10932
      }else {
        var or__3943__auto____10933 = domina.events.prevent_default["_"];
        if(or__3943__auto____10933) {
          return or__3943__auto____10933
        }else {
          throw cljs.core.missing_protocol.call(null, "Event.prevent-default", evt);
        }
      }
    }().call(null, evt)
  }
};
domina.events.stop_propagation = function stop_propagation(evt) {
  if(function() {
    var and__3941__auto____10938 = evt;
    if(and__3941__auto____10938) {
      return evt.domina$events$Event$stop_propagation$arity$1
    }else {
      return and__3941__auto____10938
    }
  }()) {
    return evt.domina$events$Event$stop_propagation$arity$1(evt)
  }else {
    var x__2314__auto____10939 = evt == null ? null : evt;
    return function() {
      var or__3943__auto____10940 = domina.events.stop_propagation[goog.typeOf(x__2314__auto____10939)];
      if(or__3943__auto____10940) {
        return or__3943__auto____10940
      }else {
        var or__3943__auto____10941 = domina.events.stop_propagation["_"];
        if(or__3943__auto____10941) {
          return or__3943__auto____10941
        }else {
          throw cljs.core.missing_protocol.call(null, "Event.stop-propagation", evt);
        }
      }
    }().call(null, evt)
  }
};
domina.events.target = function target(evt) {
  if(function() {
    var and__3941__auto____10946 = evt;
    if(and__3941__auto____10946) {
      return evt.domina$events$Event$target$arity$1
    }else {
      return and__3941__auto____10946
    }
  }()) {
    return evt.domina$events$Event$target$arity$1(evt)
  }else {
    var x__2314__auto____10947 = evt == null ? null : evt;
    return function() {
      var or__3943__auto____10948 = domina.events.target[goog.typeOf(x__2314__auto____10947)];
      if(or__3943__auto____10948) {
        return or__3943__auto____10948
      }else {
        var or__3943__auto____10949 = domina.events.target["_"];
        if(or__3943__auto____10949) {
          return or__3943__auto____10949
        }else {
          throw cljs.core.missing_protocol.call(null, "Event.target", evt);
        }
      }
    }().call(null, evt)
  }
};
domina.events.current_target = function current_target(evt) {
  if(function() {
    var and__3941__auto____10954 = evt;
    if(and__3941__auto____10954) {
      return evt.domina$events$Event$current_target$arity$1
    }else {
      return and__3941__auto____10954
    }
  }()) {
    return evt.domina$events$Event$current_target$arity$1(evt)
  }else {
    var x__2314__auto____10955 = evt == null ? null : evt;
    return function() {
      var or__3943__auto____10956 = domina.events.current_target[goog.typeOf(x__2314__auto____10955)];
      if(or__3943__auto____10956) {
        return or__3943__auto____10956
      }else {
        var or__3943__auto____10957 = domina.events.current_target["_"];
        if(or__3943__auto____10957) {
          return or__3943__auto____10957
        }else {
          throw cljs.core.missing_protocol.call(null, "Event.current-target", evt);
        }
      }
    }().call(null, evt)
  }
};
domina.events.event_type = function event_type(evt) {
  if(function() {
    var and__3941__auto____10962 = evt;
    if(and__3941__auto____10962) {
      return evt.domina$events$Event$event_type$arity$1
    }else {
      return and__3941__auto____10962
    }
  }()) {
    return evt.domina$events$Event$event_type$arity$1(evt)
  }else {
    var x__2314__auto____10963 = evt == null ? null : evt;
    return function() {
      var or__3943__auto____10964 = domina.events.event_type[goog.typeOf(x__2314__auto____10963)];
      if(or__3943__auto____10964) {
        return or__3943__auto____10964
      }else {
        var or__3943__auto____10965 = domina.events.event_type["_"];
        if(or__3943__auto____10965) {
          return or__3943__auto____10965
        }else {
          throw cljs.core.missing_protocol.call(null, "Event.event-type", evt);
        }
      }
    }().call(null, evt)
  }
};
domina.events.raw_event = function raw_event(evt) {
  if(function() {
    var and__3941__auto____10970 = evt;
    if(and__3941__auto____10970) {
      return evt.domina$events$Event$raw_event$arity$1
    }else {
      return and__3941__auto____10970
    }
  }()) {
    return evt.domina$events$Event$raw_event$arity$1(evt)
  }else {
    var x__2314__auto____10971 = evt == null ? null : evt;
    return function() {
      var or__3943__auto____10972 = domina.events.raw_event[goog.typeOf(x__2314__auto____10971)];
      if(or__3943__auto____10972) {
        return or__3943__auto____10972
      }else {
        var or__3943__auto____10973 = domina.events.raw_event["_"];
        if(or__3943__auto____10973) {
          return or__3943__auto____10973
        }else {
          throw cljs.core.missing_protocol.call(null, "Event.raw-event", evt);
        }
      }
    }().call(null, evt)
  }
};
domina.events.builtin_events = cljs.core.set.call(null, cljs.core.map.call(null, cljs.core.keyword, goog.object.getValues(goog.events.EventType)));
domina.events.root_element = window.document.documentElement;
domina.events.find_builtin_type = function find_builtin_type(evt_type) {
  if(cljs.core.contains_QMARK_.call(null, domina.events.builtin_events, evt_type)) {
    return cljs.core.name.call(null, evt_type)
  }else {
    return evt_type
  }
};
domina.events.create_listener_function = function create_listener_function(f) {
  return function(evt) {
    f.call(null, function() {
      if(void 0 === domina.events.t10990) {
        domina.events.t10990 = function(evt, f, create_listener_function, meta10991) {
          this.evt = evt;
          this.f = f;
          this.create_listener_function = create_listener_function;
          this.meta10991 = meta10991;
          this.cljs$lang$protocol_mask$partition1$ = 0;
          this.cljs$lang$protocol_mask$partition0$ = 393472
        };
        domina.events.t10990.cljs$lang$type = true;
        domina.events.t10990.cljs$lang$ctorPrSeq = function(this__2260__auto__) {
          return cljs.core.list.call(null, "domina.events/t10990")
        };
        domina.events.t10990.prototype.cljs$core$ILookup$_lookup$arity$2 = function(o, k) {
          var this__10993 = this;
          var temp__4090__auto____10994 = this__10993.evt[k];
          if(cljs.core.truth_(temp__4090__auto____10994)) {
            var val__10995 = temp__4090__auto____10994;
            return val__10995
          }else {
            return this__10993.evt[cljs.core.name.call(null, k)]
          }
        };
        domina.events.t10990.prototype.cljs$core$ILookup$_lookup$arity$3 = function(o, k, not_found) {
          var this__10996 = this;
          var or__3943__auto____10997 = o.cljs$core$ILookup$_lookup$arity$2(o, k);
          if(cljs.core.truth_(or__3943__auto____10997)) {
            return or__3943__auto____10997
          }else {
            return not_found
          }
        };
        domina.events.t10990.prototype.domina$events$Event$ = true;
        domina.events.t10990.prototype.domina$events$Event$prevent_default$arity$1 = function(_) {
          var this__10998 = this;
          return this__10998.evt.preventDefault()
        };
        domina.events.t10990.prototype.domina$events$Event$stop_propagation$arity$1 = function(_) {
          var this__10999 = this;
          return this__10999.evt.stopPropagation()
        };
        domina.events.t10990.prototype.domina$events$Event$target$arity$1 = function(_) {
          var this__11000 = this;
          return this__11000.evt.target
        };
        domina.events.t10990.prototype.domina$events$Event$current_target$arity$1 = function(_) {
          var this__11001 = this;
          return this__11001.evt.currentTarget
        };
        domina.events.t10990.prototype.domina$events$Event$event_type$arity$1 = function(_) {
          var this__11002 = this;
          return this__11002.evt.type
        };
        domina.events.t10990.prototype.domina$events$Event$raw_event$arity$1 = function(_) {
          var this__11003 = this;
          return this__11003.evt
        };
        domina.events.t10990.prototype.cljs$core$IMeta$_meta$arity$1 = function(_10992) {
          var this__11004 = this;
          return this__11004.meta10991
        };
        domina.events.t10990.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_10992, meta10991) {
          var this__11005 = this;
          return new domina.events.t10990(this__11005.evt, this__11005.f, this__11005.create_listener_function, meta10991)
        };
        domina.events.t10990
      }else {
      }
      return new domina.events.t10990(evt, f, create_listener_function, null)
    }());
    return true
  }
};
domina.events.listen_internal_BANG_ = function listen_internal_BANG_(content, type, listener, capture, once) {
  var f__11019 = domina.events.create_listener_function.call(null, listener);
  var t__11020 = domina.events.find_builtin_type.call(null, type);
  return cljs.core.doall.call(null, function() {
    var iter__2413__auto____11031 = function iter__11021(s__11022) {
      return new cljs.core.LazySeq(null, false, function() {
        var s__11022__11027 = s__11022;
        while(true) {
          var temp__4092__auto____11028 = cljs.core.seq.call(null, s__11022__11027);
          if(temp__4092__auto____11028) {
            var xs__4579__auto____11029 = temp__4092__auto____11028;
            var node__11030 = cljs.core.first.call(null, xs__4579__auto____11029);
            return cljs.core.cons.call(null, cljs.core.truth_(once) ? goog.events.listenOnce(node__11030, t__11020, f__11019, capture) : goog.events.listen(node__11030, t__11020, f__11019, capture), iter__11021.call(null, cljs.core.rest.call(null, s__11022__11027)))
          }else {
            return null
          }
          break
        }
      }, null)
    };
    return iter__2413__auto____11031.call(null, domina.nodes.call(null, content))
  }())
};
domina.events.listen_BANG_ = function() {
  var listen_BANG_ = null;
  var listen_BANG___2 = function(type, listener) {
    return listen_BANG_.call(null, domina.events.root_element, type, listener)
  };
  var listen_BANG___3 = function(content, type, listener) {
    return domina.events.listen_internal_BANG_.call(null, content, type, listener, false, false)
  };
  listen_BANG_ = function(content, type, listener) {
    switch(arguments.length) {
      case 2:
        return listen_BANG___2.call(this, content, type);
      case 3:
        return listen_BANG___3.call(this, content, type, listener)
    }
    throw"Invalid arity: " + arguments.length;
  };
  listen_BANG_.cljs$lang$arity$2 = listen_BANG___2;
  listen_BANG_.cljs$lang$arity$3 = listen_BANG___3;
  return listen_BANG_
}();
domina.events.capture_BANG_ = function() {
  var capture_BANG_ = null;
  var capture_BANG___2 = function(type, listener) {
    return capture_BANG_.call(null, domina.events.root_element, type, listener)
  };
  var capture_BANG___3 = function(content, type, listener) {
    return domina.events.listen_internal_BANG_.call(null, content, type, listener, true, false)
  };
  capture_BANG_ = function(content, type, listener) {
    switch(arguments.length) {
      case 2:
        return capture_BANG___2.call(this, content, type);
      case 3:
        return capture_BANG___3.call(this, content, type, listener)
    }
    throw"Invalid arity: " + arguments.length;
  };
  capture_BANG_.cljs$lang$arity$2 = capture_BANG___2;
  capture_BANG_.cljs$lang$arity$3 = capture_BANG___3;
  return capture_BANG_
}();
domina.events.listen_once_BANG_ = function() {
  var listen_once_BANG_ = null;
  var listen_once_BANG___2 = function(type, listener) {
    return listen_once_BANG_.call(null, domina.events.root_element, type, listener)
  };
  var listen_once_BANG___3 = function(content, type, listener) {
    return domina.events.listen_internal_BANG_.call(null, content, type, listener, false, true)
  };
  listen_once_BANG_ = function(content, type, listener) {
    switch(arguments.length) {
      case 2:
        return listen_once_BANG___2.call(this, content, type);
      case 3:
        return listen_once_BANG___3.call(this, content, type, listener)
    }
    throw"Invalid arity: " + arguments.length;
  };
  listen_once_BANG_.cljs$lang$arity$2 = listen_once_BANG___2;
  listen_once_BANG_.cljs$lang$arity$3 = listen_once_BANG___3;
  return listen_once_BANG_
}();
domina.events.capture_once_BANG_ = function() {
  var capture_once_BANG_ = null;
  var capture_once_BANG___2 = function(type, listener) {
    return capture_once_BANG_.call(null, domina.events.root_element, type, listener)
  };
  var capture_once_BANG___3 = function(content, type, listener) {
    return domina.events.listen_internal_BANG_.call(null, content, type, listener, true, true)
  };
  capture_once_BANG_ = function(content, type, listener) {
    switch(arguments.length) {
      case 2:
        return capture_once_BANG___2.call(this, content, type);
      case 3:
        return capture_once_BANG___3.call(this, content, type, listener)
    }
    throw"Invalid arity: " + arguments.length;
  };
  capture_once_BANG_.cljs$lang$arity$2 = capture_once_BANG___2;
  capture_once_BANG_.cljs$lang$arity$3 = capture_once_BANG___3;
  return capture_once_BANG_
}();
domina.events.unlisten_BANG_ = function() {
  var unlisten_BANG_ = null;
  var unlisten_BANG___0 = function() {
    return unlisten_BANG_.call(null, domina.events.root_element)
  };
  var unlisten_BANG___1 = function(content) {
    var G__11039__11040 = cljs.core.seq.call(null, domina.nodes.call(null, content));
    if(G__11039__11040) {
      var node__11041 = cljs.core.first.call(null, G__11039__11040);
      var G__11039__11042 = G__11039__11040;
      while(true) {
        goog.events.removeAll(node__11041);
        var temp__4092__auto____11043 = cljs.core.next.call(null, G__11039__11042);
        if(temp__4092__auto____11043) {
          var G__11039__11044 = temp__4092__auto____11043;
          var G__11046 = cljs.core.first.call(null, G__11039__11044);
          var G__11047 = G__11039__11044;
          node__11041 = G__11046;
          G__11039__11042 = G__11047;
          continue
        }else {
          return null
        }
        break
      }
    }else {
      return null
    }
  };
  var unlisten_BANG___2 = function(content, type) {
    var type__11045 = domina.events.find_builtin_type.call(null, type);
    return goog.events.removeAll(domina.events.node, type__11045)
  };
  unlisten_BANG_ = function(content, type) {
    switch(arguments.length) {
      case 0:
        return unlisten_BANG___0.call(this);
      case 1:
        return unlisten_BANG___1.call(this, content);
      case 2:
        return unlisten_BANG___2.call(this, content, type)
    }
    throw"Invalid arity: " + arguments.length;
  };
  unlisten_BANG_.cljs$lang$arity$0 = unlisten_BANG___0;
  unlisten_BANG_.cljs$lang$arity$1 = unlisten_BANG___1;
  unlisten_BANG_.cljs$lang$arity$2 = unlisten_BANG___2;
  return unlisten_BANG_
}();
domina.events.ancestor_nodes = function() {
  var ancestor_nodes = null;
  var ancestor_nodes__1 = function(n) {
    return ancestor_nodes.call(null, n, cljs.core.PersistentVector.fromArray([n], true))
  };
  var ancestor_nodes__2 = function(n, so_far) {
    while(true) {
      var temp__4090__auto____11050 = n.parentNode;
      if(cljs.core.truth_(temp__4090__auto____11050)) {
        var parent__11051 = temp__4090__auto____11050;
        var G__11052 = parent__11051;
        var G__11053 = cljs.core.cons.call(null, parent__11051, so_far);
        n = G__11052;
        so_far = G__11053;
        continue
      }else {
        return so_far
      }
      break
    }
  };
  ancestor_nodes = function(n, so_far) {
    switch(arguments.length) {
      case 1:
        return ancestor_nodes__1.call(this, n);
      case 2:
        return ancestor_nodes__2.call(this, n, so_far)
    }
    throw"Invalid arity: " + arguments.length;
  };
  ancestor_nodes.cljs$lang$arity$1 = ancestor_nodes__1;
  ancestor_nodes.cljs$lang$arity$2 = ancestor_nodes__2;
  return ancestor_nodes
}();
domina.events.dispatch_browser_BANG_ = function dispatch_browser_BANG_(source, evt) {
  var ancestors__11067 = domina.events.ancestor_nodes.call(null, domina.single_node.call(null, source));
  var G__11068__11069 = cljs.core.seq.call(null, ancestors__11067);
  if(G__11068__11069) {
    var n__11070 = cljs.core.first.call(null, G__11068__11069);
    var G__11068__11071 = G__11068__11069;
    while(true) {
      if(cljs.core.truth_(n__11070.propagationStopped)) {
      }else {
        evt.currentTarget = n__11070;
        goog.events.fireListeners(n__11070, evt.type, true, evt)
      }
      var temp__4092__auto____11072 = cljs.core.next.call(null, G__11068__11071);
      if(temp__4092__auto____11072) {
        var G__11068__11073 = temp__4092__auto____11072;
        var G__11080 = cljs.core.first.call(null, G__11068__11073);
        var G__11081 = G__11068__11073;
        n__11070 = G__11080;
        G__11068__11071 = G__11081;
        continue
      }else {
      }
      break
    }
  }else {
  }
  var G__11074__11075 = cljs.core.seq.call(null, cljs.core.reverse.call(null, ancestors__11067));
  if(G__11074__11075) {
    var n__11076 = cljs.core.first.call(null, G__11074__11075);
    var G__11074__11077 = G__11074__11075;
    while(true) {
      if(cljs.core.truth_(n__11076.propagationStopped)) {
      }else {
        evt.currentTarget = n__11076;
        goog.events.fireListeners(n__11076, evt.type, false, evt)
      }
      var temp__4092__auto____11078 = cljs.core.next.call(null, G__11074__11077);
      if(temp__4092__auto____11078) {
        var G__11074__11079 = temp__4092__auto____11078;
        var G__11082 = cljs.core.first.call(null, G__11074__11079);
        var G__11083 = G__11074__11079;
        n__11076 = G__11082;
        G__11074__11077 = G__11083;
        continue
      }else {
      }
      break
    }
  }else {
  }
  return evt.returnValue_
};
domina.events.dispatch_event_target_BANG_ = function dispatch_event_target_BANG_(source, evt) {
  return goog.events.dispatchEvent(source, evt)
};
domina.events.is_event_target_QMARK_ = function is_event_target_QMARK_(o) {
  var and__3941__auto____11085 = o.getParentEventTarget;
  if(cljs.core.truth_(and__3941__auto____11085)) {
    return o.dispatchEvent
  }else {
    return and__3941__auto____11085
  }
};
domina.events.dispatch_BANG_ = function() {
  var dispatch_BANG_ = null;
  var dispatch_BANG___2 = function(type, evt_map) {
    return dispatch_BANG_.call(null, domina.events.root_element, type, evt_map)
  };
  var dispatch_BANG___3 = function(source, type, evt_map) {
    var evt__11106 = new goog.events.Event(domina.events.find_builtin_type.call(null, type));
    var G__11107__11108 = cljs.core.seq.call(null, evt_map);
    if(G__11107__11108) {
      var G__11110__11112 = cljs.core.first.call(null, G__11107__11108);
      var vec__11111__11113 = G__11110__11112;
      var k__11114 = cljs.core.nth.call(null, vec__11111__11113, 0, null);
      var v__11115 = cljs.core.nth.call(null, vec__11111__11113, 1, null);
      var G__11107__11116 = G__11107__11108;
      var G__11110__11117 = G__11110__11112;
      var G__11107__11118 = G__11107__11116;
      while(true) {
        var vec__11119__11120 = G__11110__11117;
        var k__11121 = cljs.core.nth.call(null, vec__11119__11120, 0, null);
        var v__11122 = cljs.core.nth.call(null, vec__11119__11120, 1, null);
        var G__11107__11123 = G__11107__11118;
        evt__11106[k__11121] = v__11122;
        var temp__4092__auto____11124 = cljs.core.next.call(null, G__11107__11123);
        if(temp__4092__auto____11124) {
          var G__11107__11125 = temp__4092__auto____11124;
          var G__11126 = cljs.core.first.call(null, G__11107__11125);
          var G__11127 = G__11107__11125;
          G__11110__11117 = G__11126;
          G__11107__11118 = G__11127;
          continue
        }else {
        }
        break
      }
    }else {
    }
    if(cljs.core.truth_(domina.events.is_event_target_QMARK_.call(null, source))) {
      return domina.events.dispatch_event_target_BANG_.call(null, source, evt__11106)
    }else {
      return domina.events.dispatch_browser_BANG_.call(null, source, evt__11106)
    }
  };
  dispatch_BANG_ = function(source, type, evt_map) {
    switch(arguments.length) {
      case 2:
        return dispatch_BANG___2.call(this, source, type);
      case 3:
        return dispatch_BANG___3.call(this, source, type, evt_map)
    }
    throw"Invalid arity: " + arguments.length;
  };
  dispatch_BANG_.cljs$lang$arity$2 = dispatch_BANG___2;
  dispatch_BANG_.cljs$lang$arity$3 = dispatch_BANG___3;
  return dispatch_BANG_
}();
domina.events.unlisten_by_key_BANG_ = function unlisten_by_key_BANG_(key) {
  return goog.events.unlistenByKey(key)
};
domina.events.get_listeners = function get_listeners(content, type) {
  var type__11130 = domina.events.find_builtin_type.call(null, type);
  return cljs.core.mapcat.call(null, function(p1__11128_SHARP_) {
    return goog.events.getListeners(p1__11128_SHARP_, type__11130, false)
  }, domina.nodes.call(null, content))
};
goog.provide("hiccups.runtime");
goog.require("cljs.core");
goog.require("clojure.string");
hiccups.runtime.re_tag = /([^\s\.#]+)(?:#([^s\.#]+))?(?:\.([^\s#]+))?/;
hiccups.runtime.character_escapes = cljs.core.PersistentArrayMap.fromArrays(["&", "<", ">", '"'], ["&amp;", "&lt;", "&gt;", "&quot;"]);
hiccups.runtime.container_tags = cljs.core.PersistentHashSet.fromArray(["dd", "head", "a", "b", "body", "pre", "form", "iframe", "dl", "em", "fieldset", "i", "h1", "h2", "span", "h3", "script", "html", "h4", "h5", "h6", "table", "dt", "div", "style", "label", "option", "ul", "strong", "canvas", "textarea", "li", "ol"]);
hiccups.runtime.as_str = function as_str(x) {
  if(function() {
    var or__3943__auto____15423 = cljs.core.keyword_QMARK_.call(null, x);
    if(or__3943__auto____15423) {
      return or__3943__auto____15423
    }else {
      return cljs.core.symbol_QMARK_.call(null, x)
    }
  }()) {
    return cljs.core.name.call(null, x)
  }else {
    return[cljs.core.str(x)].join("")
  }
};
hiccups.runtime._STAR_html_mode_STAR_ = "\ufdd0'xml";
hiccups.runtime.xml_mode_QMARK_ = function xml_mode_QMARK_() {
  return cljs.core._EQ_.call(null, hiccups.runtime._STAR_html_mode_STAR_, "\ufdd0'xml")
};
hiccups.runtime.in_mode = function in_mode(mode, f) {
  var _STAR_html_mode_STAR_15427__15428 = hiccups.runtime._STAR_html_mode_STAR_;
  try {
    hiccups.runtime._STAR_html_mode_STAR_ = mode;
    return f.call(null)
  }finally {
    hiccups.runtime._STAR_html_mode_STAR_ = _STAR_html_mode_STAR_15427__15428
  }
};
hiccups.runtime.escape_html = function escape_html(text) {
  return clojure.string.escape.call(null, hiccups.runtime.as_str.call(null, text), hiccups.runtime.character_escapes)
};
hiccups.runtime.h = hiccups.runtime.escape_html;
hiccups.runtime.end_tag = function end_tag() {
  if(cljs.core.truth_(hiccups.runtime.xml_mode_QMARK_.call(null))) {
    return" />"
  }else {
    return">"
  }
};
hiccups.runtime.xml_attribute = function xml_attribute(name, value) {
  return[cljs.core.str(" "), cljs.core.str(hiccups.runtime.as_str.call(null, name)), cljs.core.str('="'), cljs.core.str(hiccups.runtime.escape_html.call(null, value)), cljs.core.str('"')].join("")
};
hiccups.runtime.render_attribute = function render_attribute(p__15430) {
  var vec__15435__15436 = p__15430;
  var name__15437 = cljs.core.nth.call(null, vec__15435__15436, 0, null);
  var value__15438 = cljs.core.nth.call(null, vec__15435__15436, 1, null);
  if(value__15438 === true) {
    if(cljs.core.truth_(hiccups.runtime.xml_mode_QMARK_.call(null))) {
      return hiccups.runtime.xml_attribute.call(null, name__15437, name__15437)
    }else {
      return[cljs.core.str(" "), cljs.core.str(hiccups.runtime.as_str.call(null, name__15437))].join("")
    }
  }else {
    if(cljs.core.not.call(null, value__15438)) {
      return""
    }else {
      if("\ufdd0'else") {
        return hiccups.runtime.xml_attribute.call(null, name__15437, value__15438)
      }else {
        return null
      }
    }
  }
};
hiccups.runtime.render_attr_map = function render_attr_map(attrs) {
  return cljs.core.apply.call(null, cljs.core.str, cljs.core.sort.call(null, cljs.core.map.call(null, hiccups.runtime.render_attribute, attrs)))
};
hiccups.runtime.normalize_element = function normalize_element(p__15439) {
  var vec__15454__15455 = p__15439;
  var tag__15456 = cljs.core.nth.call(null, vec__15454__15455, 0, null);
  var content__15457 = cljs.core.nthnext.call(null, vec__15454__15455, 1);
  if(!function() {
    var or__3943__auto____15458 = cljs.core.keyword_QMARK_.call(null, tag__15456);
    if(or__3943__auto____15458) {
      return or__3943__auto____15458
    }else {
      var or__3943__auto____15459 = cljs.core.symbol_QMARK_.call(null, tag__15456);
      if(or__3943__auto____15459) {
        return or__3943__auto____15459
      }else {
        return cljs.core.string_QMARK_.call(null, tag__15456)
      }
    }
  }()) {
    throw[cljs.core.str(tag__15456), cljs.core.str(" is not a valid tag name")].join("");
  }else {
  }
  var vec__15460__15461 = cljs.core.re_matches.call(null, hiccups.runtime.re_tag, hiccups.runtime.as_str.call(null, tag__15456));
  var ___15462 = cljs.core.nth.call(null, vec__15460__15461, 0, null);
  var tag__15463 = cljs.core.nth.call(null, vec__15460__15461, 1, null);
  var id__15464 = cljs.core.nth.call(null, vec__15460__15461, 2, null);
  var class__15465 = cljs.core.nth.call(null, vec__15460__15461, 3, null);
  var tag_attrs__15466 = cljs.core.ObjMap.fromObject(["\ufdd0'id", "\ufdd0'class"], {"\ufdd0'id":id__15464, "\ufdd0'class":cljs.core.truth_(class__15465) ? class__15465.replace(".", " ") : null});
  var map_attrs__15467 = cljs.core.first.call(null, content__15457);
  if(cljs.core.map_QMARK_.call(null, map_attrs__15467)) {
    return cljs.core.PersistentVector.fromArray([tag__15463, cljs.core.merge.call(null, tag_attrs__15466, map_attrs__15467), cljs.core.next.call(null, content__15457)], true)
  }else {
    return cljs.core.PersistentVector.fromArray([tag__15463, tag_attrs__15466, content__15457], true)
  }
};
hiccups.runtime.render_element = function render_element(element) {
  var vec__15474__15475 = hiccups.runtime.normalize_element.call(null, element);
  var tag__15476 = cljs.core.nth.call(null, vec__15474__15475, 0, null);
  var attrs__15477 = cljs.core.nth.call(null, vec__15474__15475, 1, null);
  var content__15478 = cljs.core.nth.call(null, vec__15474__15475, 2, null);
  if(cljs.core.truth_(function() {
    var or__3943__auto____15479 = content__15478;
    if(cljs.core.truth_(or__3943__auto____15479)) {
      return or__3943__auto____15479
    }else {
      return hiccups.runtime.container_tags.call(null, tag__15476)
    }
  }())) {
    return[cljs.core.str("<"), cljs.core.str(tag__15476), cljs.core.str(hiccups.runtime.render_attr_map.call(null, attrs__15477)), cljs.core.str(">"), cljs.core.str(hiccups.runtime.render_html.call(null, content__15478)), cljs.core.str("</"), cljs.core.str(tag__15476), cljs.core.str(">")].join("")
  }else {
    return[cljs.core.str("<"), cljs.core.str(tag__15476), cljs.core.str(hiccups.runtime.render_attr_map.call(null, attrs__15477)), cljs.core.str(hiccups.runtime.end_tag.call(null))].join("")
  }
};
hiccups.runtime.render_html = function render_html(x) {
  if(cljs.core.vector_QMARK_.call(null, x)) {
    return hiccups.runtime.render_element.call(null, x)
  }else {
    if(cljs.core.seq_QMARK_.call(null, x)) {
      return cljs.core.apply.call(null, cljs.core.str, cljs.core.map.call(null, render_html, x))
    }else {
      if("\ufdd0'else") {
        return hiccups.runtime.as_str.call(null, x)
      }else {
        return null
      }
    }
  }
};
goog.provide("domina.xpath");
goog.require("cljs.core");
goog.require("goog.dom");
goog.require("domina");
domina.xpath.select_node_STAR_ = function select_node_STAR_(path, node, technique_1, technique_2) {
  var doc__11133 = goog.dom.getOwnerDocument(node);
  if(cljs.core.truth_(function() {
    var and__3941__auto____11134 = node.selectSingleNode;
    if(cljs.core.truth_(and__3941__auto____11134)) {
      return doc__11133.setProperty
    }else {
      return and__3941__auto____11134
    }
  }())) {
    doc__11133.setProperty("SelectionLanguage", "XPath");
    return technique_1.call(null, node, path)
  }else {
    if(cljs.core.truth_(doc__11133.evaluate)) {
      return technique_2.call(null, null, doc__11133, node, path)
    }else {
      if("\ufdd0'else") {
        throw new Error("Could not find XPath support in this browser.");
      }else {
        return null
      }
    }
  }
};
domina.xpath.select_node = function select_node(expr, node) {
  return domina.xpath.select_node_STAR_.call(null, expr, node, function(node, expr) {
    return node.selectSingleNode(expr)
  }, function(resolver, doc, node, expr) {
    var result__11136 = doc.evaluate(expr, node, null, XPathResult.FIRST_ORDERED_NODE_TYPE, null);
    return result__11136.singleNodeValue
  })
};
domina.xpath.select_nodes = function select_nodes(expr, node) {
  return domina.xpath.select_node_STAR_.call(null, expr, node, function(node, expr) {
    return node.selectNodes(expr)
  }, function(resolver, doc, node, expr) {
    var result__11141 = doc.evaluate(expr, node, null, XPathResult.ORDERED_NODE_SNAPSHOT_TYPE, null);
    var num_results__11142 = result__11141.snapshotLength;
    var i__11143 = 0;
    var acc__11144 = null;
    while(true) {
      if(i__11143 < num_results__11142) {
        var G__11145 = i__11143 + 1;
        var G__11146 = cljs.core.cons.call(null, result__11141.snapshotItem(i__11143), acc__11144);
        i__11143 = G__11145;
        acc__11144 = G__11146;
        continue
      }else {
        return acc__11144
      }
      break
    }
  })
};
domina.xpath.root_element = function root_element() {
  return goog.dom.getElementsByTagNameAndClass("html")[0]
};
domina.xpath.xpath = function() {
  var xpath = null;
  var xpath__1 = function(expr) {
    return xpath.call(null, domina.xpath.root_element.call(null), expr)
  };
  var xpath__2 = function(base, expr) {
    if(void 0 === domina.xpath.t11154) {
      domina.xpath.t11154 = function(expr, base, xpath, meta11155) {
        this.expr = expr;
        this.base = base;
        this.xpath = xpath;
        this.meta11155 = meta11155;
        this.cljs$lang$protocol_mask$partition1$ = 0;
        this.cljs$lang$protocol_mask$partition0$ = 393216
      };
      domina.xpath.t11154.cljs$lang$type = true;
      domina.xpath.t11154.cljs$lang$ctorPrSeq = function(this__2260__auto__) {
        return cljs.core.list.call(null, "domina.xpath/t11154")
      };
      domina.xpath.t11154.prototype.domina$DomContent$ = true;
      domina.xpath.t11154.prototype.domina$DomContent$nodes$arity$1 = function(_) {
        var this__11157 = this;
        return cljs.core.mapcat.call(null, cljs.core.partial.call(null, domina.xpath.select_nodes, this__11157.expr), domina.nodes.call(null, this__11157.base))
      };
      domina.xpath.t11154.prototype.domina$DomContent$single_node$arity$1 = function(_) {
        var this__11158 = this;
        return cljs.core.first.call(null, cljs.core.filter.call(null, cljs.core.complement.call(null, cljs.core.nil_QMARK_), cljs.core.map.call(null, cljs.core.partial.call(null, domina.xpath.select_node, this__11158.expr), domina.nodes.call(null, this__11158.base))))
      };
      domina.xpath.t11154.prototype.cljs$core$IMeta$_meta$arity$1 = function(_11156) {
        var this__11159 = this;
        return this__11159.meta11155
      };
      domina.xpath.t11154.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_11156, meta11155) {
        var this__11160 = this;
        return new domina.xpath.t11154(this__11160.expr, this__11160.base, this__11160.xpath, meta11155)
      };
      domina.xpath.t11154
    }else {
    }
    return new domina.xpath.t11154(expr, base, xpath, null)
  };
  xpath = function(base, expr) {
    switch(arguments.length) {
      case 1:
        return xpath__1.call(this, base);
      case 2:
        return xpath__2.call(this, base, expr)
    }
    throw"Invalid arity: " + arguments.length;
  };
  xpath.cljs$lang$arity$1 = xpath__1;
  xpath.cljs$lang$arity$2 = xpath__2;
  return xpath
}();
goog.provide("goog.events.EventTarget");
goog.require("goog.Disposable");
goog.require("goog.events");
goog.events.EventTarget = function() {
  goog.Disposable.call(this)
};
goog.inherits(goog.events.EventTarget, goog.Disposable);
goog.events.EventTarget.prototype.customEvent_ = true;
goog.events.EventTarget.prototype.parentEventTarget_ = null;
goog.events.EventTarget.prototype.getParentEventTarget = function() {
  return this.parentEventTarget_
};
goog.events.EventTarget.prototype.setParentEventTarget = function(parent) {
  this.parentEventTarget_ = parent
};
goog.events.EventTarget.prototype.addEventListener = function(type, handler, opt_capture, opt_handlerScope) {
  goog.events.listen(this, type, handler, opt_capture, opt_handlerScope)
};
goog.events.EventTarget.prototype.removeEventListener = function(type, handler, opt_capture, opt_handlerScope) {
  goog.events.unlisten(this, type, handler, opt_capture, opt_handlerScope)
};
goog.events.EventTarget.prototype.dispatchEvent = function(e) {
  return goog.events.dispatchEvent(this, e)
};
goog.events.EventTarget.prototype.disposeInternal = function() {
  goog.events.EventTarget.superClass_.disposeInternal.call(this);
  goog.events.removeAll(this);
  this.parentEventTarget_ = null
};
goog.provide("goog.Timer");
goog.require("goog.events.EventTarget");
goog.Timer = function(opt_interval, opt_timerObject) {
  goog.events.EventTarget.call(this);
  this.interval_ = opt_interval || 1;
  this.timerObject_ = opt_timerObject || goog.Timer.defaultTimerObject;
  this.boundTick_ = goog.bind(this.tick_, this);
  this.last_ = goog.now()
};
goog.inherits(goog.Timer, goog.events.EventTarget);
goog.Timer.MAX_TIMEOUT_ = 2147483647;
goog.Timer.prototype.enabled = false;
goog.Timer.defaultTimerObject = goog.global["window"];
goog.Timer.intervalScale = 0.8;
goog.Timer.prototype.timer_ = null;
goog.Timer.prototype.getInterval = function() {
  return this.interval_
};
goog.Timer.prototype.setInterval = function(interval) {
  this.interval_ = interval;
  if(this.timer_ && this.enabled) {
    this.stop();
    this.start()
  }else {
    if(this.timer_) {
      this.stop()
    }
  }
};
goog.Timer.prototype.tick_ = function() {
  if(this.enabled) {
    var elapsed = goog.now() - this.last_;
    if(elapsed > 0 && elapsed < this.interval_ * goog.Timer.intervalScale) {
      this.timer_ = this.timerObject_.setTimeout(this.boundTick_, this.interval_ - elapsed);
      return
    }
    this.dispatchTick();
    if(this.enabled) {
      this.timer_ = this.timerObject_.setTimeout(this.boundTick_, this.interval_);
      this.last_ = goog.now()
    }
  }
};
goog.Timer.prototype.dispatchTick = function() {
  this.dispatchEvent(goog.Timer.TICK)
};
goog.Timer.prototype.start = function() {
  this.enabled = true;
  if(!this.timer_) {
    this.timer_ = this.timerObject_.setTimeout(this.boundTick_, this.interval_);
    this.last_ = goog.now()
  }
};
goog.Timer.prototype.stop = function() {
  this.enabled = false;
  if(this.timer_) {
    this.timerObject_.clearTimeout(this.timer_);
    this.timer_ = null
  }
};
goog.Timer.prototype.disposeInternal = function() {
  goog.Timer.superClass_.disposeInternal.call(this);
  this.stop();
  delete this.timerObject_
};
goog.Timer.TICK = "tick";
goog.Timer.callOnce = function(listener, opt_delay, opt_handler) {
  if(goog.isFunction(listener)) {
    if(opt_handler) {
      listener = goog.bind(listener, opt_handler)
    }
  }else {
    if(listener && typeof listener.handleEvent == "function") {
      listener = goog.bind(listener.handleEvent, listener)
    }else {
      throw Error("Invalid listener argument");
    }
  }
  if(opt_delay > goog.Timer.MAX_TIMEOUT_) {
    return-1
  }else {
    return goog.Timer.defaultTimerObject.setTimeout(listener, opt_delay || 0)
  }
};
goog.Timer.clear = function(timerId) {
  goog.Timer.defaultTimerObject.clearTimeout(timerId)
};
goog.provide("goog.structs.Set");
goog.require("goog.structs");
goog.require("goog.structs.Map");
goog.structs.Set = function(opt_values) {
  this.map_ = new goog.structs.Map;
  if(opt_values) {
    this.addAll(opt_values)
  }
};
goog.structs.Set.getKey_ = function(val) {
  var type = typeof val;
  if(type == "object" && val || type == "function") {
    return"o" + goog.getUid(val)
  }else {
    return type.substr(0, 1) + val
  }
};
goog.structs.Set.prototype.getCount = function() {
  return this.map_.getCount()
};
goog.structs.Set.prototype.add = function(element) {
  this.map_.set(goog.structs.Set.getKey_(element), element)
};
goog.structs.Set.prototype.addAll = function(col) {
  var values = goog.structs.getValues(col);
  var l = values.length;
  for(var i = 0;i < l;i++) {
    this.add(values[i])
  }
};
goog.structs.Set.prototype.removeAll = function(col) {
  var values = goog.structs.getValues(col);
  var l = values.length;
  for(var i = 0;i < l;i++) {
    this.remove(values[i])
  }
};
goog.structs.Set.prototype.remove = function(element) {
  return this.map_.remove(goog.structs.Set.getKey_(element))
};
goog.structs.Set.prototype.clear = function() {
  this.map_.clear()
};
goog.structs.Set.prototype.isEmpty = function() {
  return this.map_.isEmpty()
};
goog.structs.Set.prototype.contains = function(element) {
  return this.map_.containsKey(goog.structs.Set.getKey_(element))
};
goog.structs.Set.prototype.containsAll = function(col) {
  return goog.structs.every(col, this.contains, this)
};
goog.structs.Set.prototype.intersection = function(col) {
  var result = new goog.structs.Set;
  var values = goog.structs.getValues(col);
  for(var i = 0;i < values.length;i++) {
    var value = values[i];
    if(this.contains(value)) {
      result.add(value)
    }
  }
  return result
};
goog.structs.Set.prototype.getValues = function() {
  return this.map_.getValues()
};
goog.structs.Set.prototype.clone = function() {
  return new goog.structs.Set(this)
};
goog.structs.Set.prototype.equals = function(col) {
  return this.getCount() == goog.structs.getCount(col) && this.isSubsetOf(col)
};
goog.structs.Set.prototype.isSubsetOf = function(col) {
  var colCount = goog.structs.getCount(col);
  if(this.getCount() > colCount) {
    return false
  }
  if(!(col instanceof goog.structs.Set) && colCount > 5) {
    col = new goog.structs.Set(col)
  }
  return goog.structs.every(this, function(value) {
    return goog.structs.contains(col, value)
  })
};
goog.structs.Set.prototype.__iterator__ = function(opt_keys) {
  return this.map_.__iterator__(false)
};
goog.provide("goog.debug");
goog.require("goog.array");
goog.require("goog.string");
goog.require("goog.structs.Set");
goog.debug.catchErrors = function(logFunc, opt_cancel, opt_target) {
  var target = opt_target || goog.global;
  var oldErrorHandler = target.onerror;
  target.onerror = function(message, url, line) {
    if(oldErrorHandler) {
      oldErrorHandler(message, url, line)
    }
    logFunc({message:message, fileName:url, line:line});
    return Boolean(opt_cancel)
  }
};
goog.debug.expose = function(obj, opt_showFn) {
  if(typeof obj == "undefined") {
    return"undefined"
  }
  if(obj == null) {
    return"NULL"
  }
  var str = [];
  for(var x in obj) {
    if(!opt_showFn && goog.isFunction(obj[x])) {
      continue
    }
    var s = x + " = ";
    try {
      s += obj[x]
    }catch(e) {
      s += "*** " + e + " ***"
    }
    str.push(s)
  }
  return str.join("\n")
};
goog.debug.deepExpose = function(obj, opt_showFn) {
  var previous = new goog.structs.Set;
  var str = [];
  var helper = function(obj, space) {
    var nestspace = space + "  ";
    var indentMultiline = function(str) {
      return str.replace(/\n/g, "\n" + space)
    };
    try {
      if(!goog.isDef(obj)) {
        str.push("undefined")
      }else {
        if(goog.isNull(obj)) {
          str.push("NULL")
        }else {
          if(goog.isString(obj)) {
            str.push('"' + indentMultiline(obj) + '"')
          }else {
            if(goog.isFunction(obj)) {
              str.push(indentMultiline(String(obj)))
            }else {
              if(goog.isObject(obj)) {
                if(previous.contains(obj)) {
                  str.push("*** reference loop detected ***")
                }else {
                  previous.add(obj);
                  str.push("{");
                  for(var x in obj) {
                    if(!opt_showFn && goog.isFunction(obj[x])) {
                      continue
                    }
                    str.push("\n");
                    str.push(nestspace);
                    str.push(x + " = ");
                    helper(obj[x], nestspace)
                  }
                  str.push("\n" + space + "}")
                }
              }else {
                str.push(obj)
              }
            }
          }
        }
      }
    }catch(e) {
      str.push("*** " + e + " ***")
    }
  };
  helper(obj, "");
  return str.join("")
};
goog.debug.exposeArray = function(arr) {
  var str = [];
  for(var i = 0;i < arr.length;i++) {
    if(goog.isArray(arr[i])) {
      str.push(goog.debug.exposeArray(arr[i]))
    }else {
      str.push(arr[i])
    }
  }
  return"[ " + str.join(", ") + " ]"
};
goog.debug.exposeException = function(err, opt_fn) {
  try {
    var e = goog.debug.normalizeErrorObject(err);
    var error = "Message: " + goog.string.htmlEscape(e.message) + '\nUrl: <a href="view-source:' + e.fileName + '" target="_new">' + e.fileName + "</a>\nLine: " + e.lineNumber + "\n\nBrowser stack:\n" + goog.string.htmlEscape(e.stack + "-> ") + "[end]\n\nJS stack traversal:\n" + goog.string.htmlEscape(goog.debug.getStacktrace(opt_fn) + "-> ");
    return error
  }catch(e2) {
    return"Exception trying to expose exception! You win, we lose. " + e2
  }
};
goog.debug.normalizeErrorObject = function(err) {
  var href = goog.getObjectByName("window.location.href");
  if(goog.isString(err)) {
    return{"message":err, "name":"Unknown error", "lineNumber":"Not available", "fileName":href, "stack":"Not available"}
  }
  var lineNumber, fileName;
  var threwError = false;
  try {
    lineNumber = err.lineNumber || err.line || "Not available"
  }catch(e) {
    lineNumber = "Not available";
    threwError = true
  }
  try {
    fileName = err.fileName || err.filename || err.sourceURL || href
  }catch(e) {
    fileName = "Not available";
    threwError = true
  }
  if(threwError || !err.lineNumber || !err.fileName || !err.stack) {
    return{"message":err.message, "name":err.name, "lineNumber":lineNumber, "fileName":fileName, "stack":err.stack || "Not available"}
  }
  return err
};
goog.debug.enhanceError = function(err, opt_message) {
  var error = typeof err == "string" ? Error(err) : err;
  if(!error.stack) {
    error.stack = goog.debug.getStacktrace(arguments.callee.caller)
  }
  if(opt_message) {
    var x = 0;
    while(error["message" + x]) {
      ++x
    }
    error["message" + x] = String(opt_message)
  }
  return error
};
goog.debug.getStacktraceSimple = function(opt_depth) {
  var sb = [];
  var fn = arguments.callee.caller;
  var depth = 0;
  while(fn && (!opt_depth || depth < opt_depth)) {
    sb.push(goog.debug.getFunctionName(fn));
    sb.push("()\n");
    try {
      fn = fn.caller
    }catch(e) {
      sb.push("[exception trying to get caller]\n");
      break
    }
    depth++;
    if(depth >= goog.debug.MAX_STACK_DEPTH) {
      sb.push("[...long stack...]");
      break
    }
  }
  if(opt_depth && depth >= opt_depth) {
    sb.push("[...reached max depth limit...]")
  }else {
    sb.push("[end]")
  }
  return sb.join("")
};
goog.debug.MAX_STACK_DEPTH = 50;
goog.debug.getStacktrace = function(opt_fn) {
  return goog.debug.getStacktraceHelper_(opt_fn || arguments.callee.caller, [])
};
goog.debug.getStacktraceHelper_ = function(fn, visited) {
  var sb = [];
  if(goog.array.contains(visited, fn)) {
    sb.push("[...circular reference...]")
  }else {
    if(fn && visited.length < goog.debug.MAX_STACK_DEPTH) {
      sb.push(goog.debug.getFunctionName(fn) + "(");
      var args = fn.arguments;
      for(var i = 0;i < args.length;i++) {
        if(i > 0) {
          sb.push(", ")
        }
        var argDesc;
        var arg = args[i];
        switch(typeof arg) {
          case "object":
            argDesc = arg ? "object" : "null";
            break;
          case "string":
            argDesc = arg;
            break;
          case "number":
            argDesc = String(arg);
            break;
          case "boolean":
            argDesc = arg ? "true" : "false";
            break;
          case "function":
            argDesc = goog.debug.getFunctionName(arg);
            argDesc = argDesc ? argDesc : "[fn]";
            break;
          case "undefined":
          ;
          default:
            argDesc = typeof arg;
            break
        }
        if(argDesc.length > 40) {
          argDesc = argDesc.substr(0, 40) + "..."
        }
        sb.push(argDesc)
      }
      visited.push(fn);
      sb.push(")\n");
      try {
        sb.push(goog.debug.getStacktraceHelper_(fn.caller, visited))
      }catch(e) {
        sb.push("[exception trying to get caller]\n")
      }
    }else {
      if(fn) {
        sb.push("[...long stack...]")
      }else {
        sb.push("[end]")
      }
    }
  }
  return sb.join("")
};
goog.debug.getFunctionName = function(fn) {
  var functionSource = String(fn);
  if(!goog.debug.fnNameCache_[functionSource]) {
    var matches = /function ([^\(]+)/.exec(functionSource);
    if(matches) {
      var method = matches[1];
      goog.debug.fnNameCache_[functionSource] = method
    }else {
      goog.debug.fnNameCache_[functionSource] = "[Anonymous]"
    }
  }
  return goog.debug.fnNameCache_[functionSource]
};
goog.debug.makeWhitespaceVisible = function(string) {
  return string.replace(/ /g, "[_]").replace(/\f/g, "[f]").replace(/\n/g, "[n]\n").replace(/\r/g, "[r]").replace(/\t/g, "[t]")
};
goog.debug.fnNameCache_ = {};
goog.provide("goog.debug.LogRecord");
goog.debug.LogRecord = function(level, msg, loggerName, opt_time, opt_sequenceNumber) {
  this.reset(level, msg, loggerName, opt_time, opt_sequenceNumber)
};
goog.debug.LogRecord.prototype.time_;
goog.debug.LogRecord.prototype.level_;
goog.debug.LogRecord.prototype.msg_;
goog.debug.LogRecord.prototype.loggerName_;
goog.debug.LogRecord.prototype.sequenceNumber_ = 0;
goog.debug.LogRecord.prototype.exception_ = null;
goog.debug.LogRecord.prototype.exceptionText_ = null;
goog.debug.LogRecord.ENABLE_SEQUENCE_NUMBERS = true;
goog.debug.LogRecord.nextSequenceNumber_ = 0;
goog.debug.LogRecord.prototype.reset = function(level, msg, loggerName, opt_time, opt_sequenceNumber) {
  if(goog.debug.LogRecord.ENABLE_SEQUENCE_NUMBERS) {
    this.sequenceNumber_ = typeof opt_sequenceNumber == "number" ? opt_sequenceNumber : goog.debug.LogRecord.nextSequenceNumber_++
  }
  this.time_ = opt_time || goog.now();
  this.level_ = level;
  this.msg_ = msg;
  this.loggerName_ = loggerName;
  delete this.exception_;
  delete this.exceptionText_
};
goog.debug.LogRecord.prototype.getLoggerName = function() {
  return this.loggerName_
};
goog.debug.LogRecord.prototype.getException = function() {
  return this.exception_
};
goog.debug.LogRecord.prototype.setException = function(exception) {
  this.exception_ = exception
};
goog.debug.LogRecord.prototype.getExceptionText = function() {
  return this.exceptionText_
};
goog.debug.LogRecord.prototype.setExceptionText = function(text) {
  this.exceptionText_ = text
};
goog.debug.LogRecord.prototype.setLoggerName = function(loggerName) {
  this.loggerName_ = loggerName
};
goog.debug.LogRecord.prototype.getLevel = function() {
  return this.level_
};
goog.debug.LogRecord.prototype.setLevel = function(level) {
  this.level_ = level
};
goog.debug.LogRecord.prototype.getMessage = function() {
  return this.msg_
};
goog.debug.LogRecord.prototype.setMessage = function(msg) {
  this.msg_ = msg
};
goog.debug.LogRecord.prototype.getMillis = function() {
  return this.time_
};
goog.debug.LogRecord.prototype.setMillis = function(time) {
  this.time_ = time
};
goog.debug.LogRecord.prototype.getSequenceNumber = function() {
  return this.sequenceNumber_
};
goog.provide("goog.debug.LogBuffer");
goog.require("goog.asserts");
goog.require("goog.debug.LogRecord");
goog.debug.LogBuffer = function() {
  goog.asserts.assert(goog.debug.LogBuffer.isBufferingEnabled(), "Cannot use goog.debug.LogBuffer without defining " + "goog.debug.LogBuffer.CAPACITY.");
  this.clear()
};
goog.debug.LogBuffer.getInstance = function() {
  if(!goog.debug.LogBuffer.instance_) {
    goog.debug.LogBuffer.instance_ = new goog.debug.LogBuffer
  }
  return goog.debug.LogBuffer.instance_
};
goog.debug.LogBuffer.CAPACITY = 0;
goog.debug.LogBuffer.prototype.buffer_;
goog.debug.LogBuffer.prototype.curIndex_;
goog.debug.LogBuffer.prototype.isFull_;
goog.debug.LogBuffer.prototype.addRecord = function(level, msg, loggerName) {
  var curIndex = (this.curIndex_ + 1) % goog.debug.LogBuffer.CAPACITY;
  this.curIndex_ = curIndex;
  if(this.isFull_) {
    var ret = this.buffer_[curIndex];
    ret.reset(level, msg, loggerName);
    return ret
  }
  this.isFull_ = curIndex == goog.debug.LogBuffer.CAPACITY - 1;
  return this.buffer_[curIndex] = new goog.debug.LogRecord(level, msg, loggerName)
};
goog.debug.LogBuffer.isBufferingEnabled = function() {
  return goog.debug.LogBuffer.CAPACITY > 0
};
goog.debug.LogBuffer.prototype.clear = function() {
  this.buffer_ = new Array(goog.debug.LogBuffer.CAPACITY);
  this.curIndex_ = -1;
  this.isFull_ = false
};
goog.debug.LogBuffer.prototype.forEachRecord = function(func) {
  var buffer = this.buffer_;
  if(!buffer[0]) {
    return
  }
  var curIndex = this.curIndex_;
  var i = this.isFull_ ? curIndex : -1;
  do {
    i = (i + 1) % goog.debug.LogBuffer.CAPACITY;
    func(buffer[i])
  }while(i != curIndex)
};
goog.provide("goog.debug.LogManager");
goog.provide("goog.debug.Logger");
goog.provide("goog.debug.Logger.Level");
goog.require("goog.array");
goog.require("goog.asserts");
goog.require("goog.debug");
goog.require("goog.debug.LogBuffer");
goog.require("goog.debug.LogRecord");
goog.debug.Logger = function(name) {
  this.name_ = name
};
goog.debug.Logger.prototype.parent_ = null;
goog.debug.Logger.prototype.level_ = null;
goog.debug.Logger.prototype.children_ = null;
goog.debug.Logger.prototype.handlers_ = null;
goog.debug.Logger.ENABLE_HIERARCHY = true;
if(!goog.debug.Logger.ENABLE_HIERARCHY) {
  goog.debug.Logger.rootHandlers_ = [];
  goog.debug.Logger.rootLevel_
}
goog.debug.Logger.Level = function(name, value) {
  this.name = name;
  this.value = value
};
goog.debug.Logger.Level.prototype.toString = function() {
  return this.name
};
goog.debug.Logger.Level.OFF = new goog.debug.Logger.Level("OFF", Infinity);
goog.debug.Logger.Level.SHOUT = new goog.debug.Logger.Level("SHOUT", 1200);
goog.debug.Logger.Level.SEVERE = new goog.debug.Logger.Level("SEVERE", 1E3);
goog.debug.Logger.Level.WARNING = new goog.debug.Logger.Level("WARNING", 900);
goog.debug.Logger.Level.INFO = new goog.debug.Logger.Level("INFO", 800);
goog.debug.Logger.Level.CONFIG = new goog.debug.Logger.Level("CONFIG", 700);
goog.debug.Logger.Level.FINE = new goog.debug.Logger.Level("FINE", 500);
goog.debug.Logger.Level.FINER = new goog.debug.Logger.Level("FINER", 400);
goog.debug.Logger.Level.FINEST = new goog.debug.Logger.Level("FINEST", 300);
goog.debug.Logger.Level.ALL = new goog.debug.Logger.Level("ALL", 0);
goog.debug.Logger.Level.PREDEFINED_LEVELS = [goog.debug.Logger.Level.OFF, goog.debug.Logger.Level.SHOUT, goog.debug.Logger.Level.SEVERE, goog.debug.Logger.Level.WARNING, goog.debug.Logger.Level.INFO, goog.debug.Logger.Level.CONFIG, goog.debug.Logger.Level.FINE, goog.debug.Logger.Level.FINER, goog.debug.Logger.Level.FINEST, goog.debug.Logger.Level.ALL];
goog.debug.Logger.Level.predefinedLevelsCache_ = null;
goog.debug.Logger.Level.createPredefinedLevelsCache_ = function() {
  goog.debug.Logger.Level.predefinedLevelsCache_ = {};
  for(var i = 0, level;level = goog.debug.Logger.Level.PREDEFINED_LEVELS[i];i++) {
    goog.debug.Logger.Level.predefinedLevelsCache_[level.value] = level;
    goog.debug.Logger.Level.predefinedLevelsCache_[level.name] = level
  }
};
goog.debug.Logger.Level.getPredefinedLevel = function(name) {
  if(!goog.debug.Logger.Level.predefinedLevelsCache_) {
    goog.debug.Logger.Level.createPredefinedLevelsCache_()
  }
  return goog.debug.Logger.Level.predefinedLevelsCache_[name] || null
};
goog.debug.Logger.Level.getPredefinedLevelByValue = function(value) {
  if(!goog.debug.Logger.Level.predefinedLevelsCache_) {
    goog.debug.Logger.Level.createPredefinedLevelsCache_()
  }
  if(value in goog.debug.Logger.Level.predefinedLevelsCache_) {
    return goog.debug.Logger.Level.predefinedLevelsCache_[value]
  }
  for(var i = 0;i < goog.debug.Logger.Level.PREDEFINED_LEVELS.length;++i) {
    var level = goog.debug.Logger.Level.PREDEFINED_LEVELS[i];
    if(level.value <= value) {
      return level
    }
  }
  return null
};
goog.debug.Logger.getLogger = function(name) {
  return goog.debug.LogManager.getLogger(name)
};
goog.debug.Logger.prototype.getName = function() {
  return this.name_
};
goog.debug.Logger.prototype.addHandler = function(handler) {
  if(goog.debug.Logger.ENABLE_HIERARCHY) {
    if(!this.handlers_) {
      this.handlers_ = []
    }
    this.handlers_.push(handler)
  }else {
    goog.asserts.assert(!this.name_, "Cannot call addHandler on a non-root logger when " + "goog.debug.Logger.ENABLE_HIERARCHY is false.");
    goog.debug.Logger.rootHandlers_.push(handler)
  }
};
goog.debug.Logger.prototype.removeHandler = function(handler) {
  var handlers = goog.debug.Logger.ENABLE_HIERARCHY ? this.handlers_ : goog.debug.Logger.rootHandlers_;
  return!!handlers && goog.array.remove(handlers, handler)
};
goog.debug.Logger.prototype.getParent = function() {
  return this.parent_
};
goog.debug.Logger.prototype.getChildren = function() {
  if(!this.children_) {
    this.children_ = {}
  }
  return this.children_
};
goog.debug.Logger.prototype.setLevel = function(level) {
  if(goog.debug.Logger.ENABLE_HIERARCHY) {
    this.level_ = level
  }else {
    goog.asserts.assert(!this.name_, "Cannot call setLevel() on a non-root logger when " + "goog.debug.Logger.ENABLE_HIERARCHY is false.");
    goog.debug.Logger.rootLevel_ = level
  }
};
goog.debug.Logger.prototype.getLevel = function() {
  return this.level_
};
goog.debug.Logger.prototype.getEffectiveLevel = function() {
  if(!goog.debug.Logger.ENABLE_HIERARCHY) {
    return goog.debug.Logger.rootLevel_
  }
  if(this.level_) {
    return this.level_
  }
  if(this.parent_) {
    return this.parent_.getEffectiveLevel()
  }
  goog.asserts.fail("Root logger has no level set.");
  return null
};
goog.debug.Logger.prototype.isLoggable = function(level) {
  return level.value >= this.getEffectiveLevel().value
};
goog.debug.Logger.prototype.log = function(level, msg, opt_exception) {
  if(this.isLoggable(level)) {
    this.doLogRecord_(this.getLogRecord(level, msg, opt_exception))
  }
};
goog.debug.Logger.prototype.getLogRecord = function(level, msg, opt_exception) {
  if(goog.debug.LogBuffer.isBufferingEnabled()) {
    var logRecord = goog.debug.LogBuffer.getInstance().addRecord(level, msg, this.name_)
  }else {
    logRecord = new goog.debug.LogRecord(level, String(msg), this.name_)
  }
  if(opt_exception) {
    logRecord.setException(opt_exception);
    logRecord.setExceptionText(goog.debug.exposeException(opt_exception, arguments.callee.caller))
  }
  return logRecord
};
goog.debug.Logger.prototype.shout = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.SHOUT, msg, opt_exception)
};
goog.debug.Logger.prototype.severe = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.SEVERE, msg, opt_exception)
};
goog.debug.Logger.prototype.warning = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.WARNING, msg, opt_exception)
};
goog.debug.Logger.prototype.info = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.INFO, msg, opt_exception)
};
goog.debug.Logger.prototype.config = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.CONFIG, msg, opt_exception)
};
goog.debug.Logger.prototype.fine = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.FINE, msg, opt_exception)
};
goog.debug.Logger.prototype.finer = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.FINER, msg, opt_exception)
};
goog.debug.Logger.prototype.finest = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.FINEST, msg, opt_exception)
};
goog.debug.Logger.prototype.logRecord = function(logRecord) {
  if(this.isLoggable(logRecord.getLevel())) {
    this.doLogRecord_(logRecord)
  }
};
goog.debug.Logger.prototype.logToSpeedTracer_ = function(msg) {
  if(goog.global["console"] && goog.global["console"]["markTimeline"]) {
    goog.global["console"]["markTimeline"](msg)
  }
};
goog.debug.Logger.prototype.doLogRecord_ = function(logRecord) {
  this.logToSpeedTracer_("log:" + logRecord.getMessage());
  if(goog.debug.Logger.ENABLE_HIERARCHY) {
    var target = this;
    while(target) {
      target.callPublish_(logRecord);
      target = target.getParent()
    }
  }else {
    for(var i = 0, handler;handler = goog.debug.Logger.rootHandlers_[i++];) {
      handler(logRecord)
    }
  }
};
goog.debug.Logger.prototype.callPublish_ = function(logRecord) {
  if(this.handlers_) {
    for(var i = 0, handler;handler = this.handlers_[i];i++) {
      handler(logRecord)
    }
  }
};
goog.debug.Logger.prototype.setParent_ = function(parent) {
  this.parent_ = parent
};
goog.debug.Logger.prototype.addChild_ = function(name, logger) {
  this.getChildren()[name] = logger
};
goog.debug.LogManager = {};
goog.debug.LogManager.loggers_ = {};
goog.debug.LogManager.rootLogger_ = null;
goog.debug.LogManager.initialize = function() {
  if(!goog.debug.LogManager.rootLogger_) {
    goog.debug.LogManager.rootLogger_ = new goog.debug.Logger("");
    goog.debug.LogManager.loggers_[""] = goog.debug.LogManager.rootLogger_;
    goog.debug.LogManager.rootLogger_.setLevel(goog.debug.Logger.Level.CONFIG)
  }
};
goog.debug.LogManager.getLoggers = function() {
  return goog.debug.LogManager.loggers_
};
goog.debug.LogManager.getRoot = function() {
  goog.debug.LogManager.initialize();
  return goog.debug.LogManager.rootLogger_
};
goog.debug.LogManager.getLogger = function(name) {
  goog.debug.LogManager.initialize();
  var ret = goog.debug.LogManager.loggers_[name];
  return ret || goog.debug.LogManager.createLogger_(name)
};
goog.debug.LogManager.createFunctionForCatchErrors = function(opt_logger) {
  return function(info) {
    var logger = opt_logger || goog.debug.LogManager.getRoot();
    logger.severe("Error: " + info.message + " (" + info.fileName + " @ Line: " + info.line + ")")
  }
};
goog.debug.LogManager.createLogger_ = function(name) {
  var logger = new goog.debug.Logger(name);
  if(goog.debug.Logger.ENABLE_HIERARCHY) {
    var lastDotIndex = name.lastIndexOf(".");
    var parentName = name.substr(0, lastDotIndex);
    var leafName = name.substr(lastDotIndex + 1);
    var parentLogger = goog.debug.LogManager.getLogger(parentName);
    parentLogger.addChild_(leafName, logger);
    logger.setParent_(parentLogger)
  }
  goog.debug.LogManager.loggers_[name] = logger;
  return logger
};
goog.provide("goog.json");
goog.provide("goog.json.Serializer");
goog.json.isValid_ = function(s) {
  if(/^\s*$/.test(s)) {
    return false
  }
  var backslashesRe = /\\["\\\/bfnrtu]/g;
  var simpleValuesRe = /"[^"\\\n\r\u2028\u2029\x00-\x08\x10-\x1f\x80-\x9f]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g;
  var openBracketsRe = /(?:^|:|,)(?:[\s\u2028\u2029]*\[)+/g;
  var remainderRe = /^[\],:{}\s\u2028\u2029]*$/;
  return remainderRe.test(s.replace(backslashesRe, "@").replace(simpleValuesRe, "]").replace(openBracketsRe, ""))
};
goog.json.parse = function(s) {
  var o = String(s);
  if(goog.json.isValid_(o)) {
    try {
      return eval("(" + o + ")")
    }catch(ex) {
    }
  }
  throw Error("Invalid JSON string: " + o);
};
goog.json.unsafeParse = function(s) {
  return eval("(" + s + ")")
};
goog.json.serialize = function(object) {
  return(new goog.json.Serializer).serialize(object)
};
goog.json.Serializer = function() {
};
goog.json.Serializer.prototype.serialize = function(object) {
  var sb = [];
  this.serialize_(object, sb);
  return sb.join("")
};
goog.json.Serializer.prototype.serialize_ = function(object, sb) {
  switch(typeof object) {
    case "string":
      this.serializeString_(object, sb);
      break;
    case "number":
      this.serializeNumber_(object, sb);
      break;
    case "boolean":
      sb.push(object);
      break;
    case "undefined":
      sb.push("null");
      break;
    case "object":
      if(object == null) {
        sb.push("null");
        break
      }
      if(goog.isArray(object)) {
        this.serializeArray_(object, sb);
        break
      }
      this.serializeObject_(object, sb);
      break;
    case "function":
      break;
    default:
      throw Error("Unknown type: " + typeof object);
  }
};
goog.json.Serializer.charToJsonCharCache_ = {'"':'\\"', "\\":"\\\\", "/":"\\/", "\u0008":"\\b", "\u000c":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t", "\x0B":"\\u000b"};
goog.json.Serializer.charsToReplace_ = /\uffff/.test("\uffff") ? /[\\\"\x00-\x1f\x7f-\uffff]/g : /[\\\"\x00-\x1f\x7f-\xff]/g;
goog.json.Serializer.prototype.serializeString_ = function(s, sb) {
  sb.push('"', s.replace(goog.json.Serializer.charsToReplace_, function(c) {
    if(c in goog.json.Serializer.charToJsonCharCache_) {
      return goog.json.Serializer.charToJsonCharCache_[c]
    }
    var cc = c.charCodeAt(0);
    var rv = "\\u";
    if(cc < 16) {
      rv += "000"
    }else {
      if(cc < 256) {
        rv += "00"
      }else {
        if(cc < 4096) {
          rv += "0"
        }
      }
    }
    return goog.json.Serializer.charToJsonCharCache_[c] = rv + cc.toString(16)
  }), '"')
};
goog.json.Serializer.prototype.serializeNumber_ = function(n, sb) {
  sb.push(isFinite(n) && !isNaN(n) ? n : "null")
};
goog.json.Serializer.prototype.serializeArray_ = function(arr, sb) {
  var l = arr.length;
  sb.push("[");
  var sep = "";
  for(var i = 0;i < l;i++) {
    sb.push(sep);
    this.serialize_(arr[i], sb);
    sep = ","
  }
  sb.push("]")
};
goog.json.Serializer.prototype.serializeObject_ = function(obj, sb) {
  sb.push("{");
  var sep = "";
  for(var key in obj) {
    if(Object.prototype.hasOwnProperty.call(obj, key)) {
      var value = obj[key];
      if(typeof value != "function") {
        sb.push(sep);
        this.serializeString_(key, sb);
        sb.push(":");
        this.serialize_(value, sb);
        sep = ","
      }
    }
  }
  sb.push("}")
};
goog.provide("goog.net.ErrorCode");
goog.net.ErrorCode = {NO_ERROR:0, ACCESS_DENIED:1, FILE_NOT_FOUND:2, FF_SILENT_ERROR:3, CUSTOM_ERROR:4, EXCEPTION:5, HTTP_ERROR:6, ABORT:7, TIMEOUT:8, OFFLINE:9};
goog.net.ErrorCode.getDebugMessage = function(errorCode) {
  switch(errorCode) {
    case goog.net.ErrorCode.NO_ERROR:
      return"No Error";
    case goog.net.ErrorCode.ACCESS_DENIED:
      return"Access denied to content document";
    case goog.net.ErrorCode.FILE_NOT_FOUND:
      return"File not found";
    case goog.net.ErrorCode.FF_SILENT_ERROR:
      return"Firefox silently errored";
    case goog.net.ErrorCode.CUSTOM_ERROR:
      return"Application custom error";
    case goog.net.ErrorCode.EXCEPTION:
      return"An exception occurred";
    case goog.net.ErrorCode.HTTP_ERROR:
      return"Http response at 400 or 500 level";
    case goog.net.ErrorCode.ABORT:
      return"Request was aborted";
    case goog.net.ErrorCode.TIMEOUT:
      return"Request timed out";
    case goog.net.ErrorCode.OFFLINE:
      return"The resource is not available offline";
    default:
      return"Unrecognized error code"
  }
};
goog.provide("goog.net.EventType");
goog.net.EventType = {COMPLETE:"complete", SUCCESS:"success", ERROR:"error", ABORT:"abort", READY:"ready", READY_STATE_CHANGE:"readystatechange", TIMEOUT:"timeout", INCREMENTAL_DATA:"incrementaldata", PROGRESS:"progress"};
goog.provide("goog.net.HttpStatus");
goog.net.HttpStatus = {CONTINUE:100, SWITCHING_PROTOCOLS:101, OK:200, CREATED:201, ACCEPTED:202, NON_AUTHORITATIVE_INFORMATION:203, NO_CONTENT:204, RESET_CONTENT:205, PARTIAL_CONTENT:206, MULTIPLE_CHOICES:300, MOVED_PERMANENTLY:301, FOUND:302, SEE_OTHER:303, NOT_MODIFIED:304, USE_PROXY:305, TEMPORARY_REDIRECT:307, BAD_REQUEST:400, UNAUTHORIZED:401, PAYMENT_REQUIRED:402, FORBIDDEN:403, NOT_FOUND:404, METHOD_NOT_ALLOWED:405, NOT_ACCEPTABLE:406, PROXY_AUTHENTICATION_REQUIRED:407, REQUEST_TIMEOUT:408, 
CONFLICT:409, GONE:410, LENGTH_REQUIRED:411, PRECONDITION_FAILED:412, REQUEST_ENTITY_TOO_LARGE:413, REQUEST_URI_TOO_LONG:414, UNSUPPORTED_MEDIA_TYPE:415, REQUEST_RANGE_NOT_SATISFIABLE:416, EXPECTATION_FAILED:417, INTERNAL_SERVER_ERROR:500, NOT_IMPLEMENTED:501, BAD_GATEWAY:502, SERVICE_UNAVAILABLE:503, GATEWAY_TIMEOUT:504, HTTP_VERSION_NOT_SUPPORTED:505};
goog.provide("goog.net.XmlHttpFactory");
goog.net.XmlHttpFactory = function() {
};
goog.net.XmlHttpFactory.prototype.cachedOptions_ = null;
goog.net.XmlHttpFactory.prototype.createInstance = goog.abstractMethod;
goog.net.XmlHttpFactory.prototype.getOptions = function() {
  return this.cachedOptions_ || (this.cachedOptions_ = this.internalGetOptions())
};
goog.net.XmlHttpFactory.prototype.internalGetOptions = goog.abstractMethod;
goog.provide("goog.net.WrapperXmlHttpFactory");
goog.require("goog.net.XmlHttpFactory");
goog.net.WrapperXmlHttpFactory = function(xhrFactory, optionsFactory) {
  goog.net.XmlHttpFactory.call(this);
  this.xhrFactory_ = xhrFactory;
  this.optionsFactory_ = optionsFactory
};
goog.inherits(goog.net.WrapperXmlHttpFactory, goog.net.XmlHttpFactory);
goog.net.WrapperXmlHttpFactory.prototype.createInstance = function() {
  return this.xhrFactory_()
};
goog.net.WrapperXmlHttpFactory.prototype.getOptions = function() {
  return this.optionsFactory_()
};
goog.provide("goog.net.DefaultXmlHttpFactory");
goog.provide("goog.net.XmlHttp");
goog.provide("goog.net.XmlHttp.OptionType");
goog.provide("goog.net.XmlHttp.ReadyState");
goog.require("goog.net.WrapperXmlHttpFactory");
goog.require("goog.net.XmlHttpFactory");
goog.net.XmlHttp = function() {
  return goog.net.XmlHttp.factory_.createInstance()
};
goog.net.XmlHttp.getOptions = function() {
  return goog.net.XmlHttp.factory_.getOptions()
};
goog.net.XmlHttp.OptionType = {USE_NULL_FUNCTION:0, LOCAL_REQUEST_ERROR:1};
goog.net.XmlHttp.ReadyState = {UNINITIALIZED:0, LOADING:1, LOADED:2, INTERACTIVE:3, COMPLETE:4};
goog.net.XmlHttp.factory_;
goog.net.XmlHttp.setFactory = function(factory, optionsFactory) {
  goog.net.XmlHttp.setGlobalFactory(new goog.net.WrapperXmlHttpFactory(factory, optionsFactory))
};
goog.net.XmlHttp.setGlobalFactory = function(factory) {
  goog.net.XmlHttp.factory_ = factory
};
goog.net.DefaultXmlHttpFactory = function() {
  goog.net.XmlHttpFactory.call(this)
};
goog.inherits(goog.net.DefaultXmlHttpFactory, goog.net.XmlHttpFactory);
goog.net.DefaultXmlHttpFactory.prototype.createInstance = function() {
  var progId = this.getProgId_();
  if(progId) {
    return new ActiveXObject(progId)
  }else {
    return new XMLHttpRequest
  }
};
goog.net.DefaultXmlHttpFactory.prototype.internalGetOptions = function() {
  var progId = this.getProgId_();
  var options = {};
  if(progId) {
    options[goog.net.XmlHttp.OptionType.USE_NULL_FUNCTION] = true;
    options[goog.net.XmlHttp.OptionType.LOCAL_REQUEST_ERROR] = true
  }
  return options
};
goog.net.DefaultXmlHttpFactory.prototype.ieProgId_ = null;
goog.net.DefaultXmlHttpFactory.prototype.getProgId_ = function() {
  if(!this.ieProgId_ && typeof XMLHttpRequest == "undefined" && typeof ActiveXObject != "undefined") {
    var ACTIVE_X_IDENTS = ["MSXML2.XMLHTTP.6.0", "MSXML2.XMLHTTP.3.0", "MSXML2.XMLHTTP", "Microsoft.XMLHTTP"];
    for(var i = 0;i < ACTIVE_X_IDENTS.length;i++) {
      var candidate = ACTIVE_X_IDENTS[i];
      try {
        new ActiveXObject(candidate);
        this.ieProgId_ = candidate;
        return candidate
      }catch(e) {
      }
    }
    throw Error("Could not create ActiveXObject. ActiveX might be disabled," + " or MSXML might not be installed");
  }
  return this.ieProgId_
};
goog.net.XmlHttp.setGlobalFactory(new goog.net.DefaultXmlHttpFactory);
goog.provide("goog.net.xhrMonitor");
goog.require("goog.array");
goog.require("goog.debug.Logger");
goog.require("goog.userAgent");
goog.net.XhrMonitor_ = function() {
  if(!goog.userAgent.GECKO) {
    return
  }
  this.contextsToXhr_ = {};
  this.xhrToContexts_ = {};
  this.stack_ = []
};
goog.net.XhrMonitor_.getKey = function(obj) {
  return goog.isString(obj) ? obj : goog.isObject(obj) ? goog.getUid(obj) : ""
};
goog.net.XhrMonitor_.prototype.logger_ = goog.debug.Logger.getLogger("goog.net.xhrMonitor");
goog.net.XhrMonitor_.prototype.enabled_ = goog.userAgent.GECKO;
goog.net.XhrMonitor_.prototype.setEnabled = function(val) {
  this.enabled_ = goog.userAgent.GECKO && val
};
goog.net.XhrMonitor_.prototype.pushContext = function(context) {
  if(!this.enabled_) {
    return
  }
  var key = goog.net.XhrMonitor_.getKey(context);
  this.logger_.finest("Pushing context: " + context + " (" + key + ")");
  this.stack_.push(key)
};
goog.net.XhrMonitor_.prototype.popContext = function() {
  if(!this.enabled_) {
    return
  }
  var context = this.stack_.pop();
  this.logger_.finest("Popping context: " + context);
  this.updateDependentContexts_(context)
};
goog.net.XhrMonitor_.prototype.isContextSafe = function(context) {
  if(!this.enabled_) {
    return true
  }
  var deps = this.contextsToXhr_[goog.net.XhrMonitor_.getKey(context)];
  this.logger_.fine("Context is safe : " + context + " - " + deps);
  return!deps
};
goog.net.XhrMonitor_.prototype.markXhrOpen = function(xhr) {
  if(!this.enabled_) {
    return
  }
  var uid = goog.getUid(xhr);
  this.logger_.fine("Opening XHR : " + uid);
  for(var i = 0;i < this.stack_.length;i++) {
    var context = this.stack_[i];
    this.addToMap_(this.contextsToXhr_, context, uid);
    this.addToMap_(this.xhrToContexts_, uid, context)
  }
};
goog.net.XhrMonitor_.prototype.markXhrClosed = function(xhr) {
  if(!this.enabled_) {
    return
  }
  var uid = goog.getUid(xhr);
  this.logger_.fine("Closing XHR : " + uid);
  delete this.xhrToContexts_[uid];
  for(var context in this.contextsToXhr_) {
    goog.array.remove(this.contextsToXhr_[context], uid);
    if(this.contextsToXhr_[context].length == 0) {
      delete this.contextsToXhr_[context]
    }
  }
};
goog.net.XhrMonitor_.prototype.updateDependentContexts_ = function(xhrUid) {
  var contexts = this.xhrToContexts_[xhrUid];
  var xhrs = this.contextsToXhr_[xhrUid];
  if(contexts && xhrs) {
    this.logger_.finest("Updating dependent contexts");
    goog.array.forEach(contexts, function(context) {
      goog.array.forEach(xhrs, function(xhr) {
        this.addToMap_(this.contextsToXhr_, context, xhr);
        this.addToMap_(this.xhrToContexts_, xhr, context)
      }, this)
    }, this)
  }
};
goog.net.XhrMonitor_.prototype.addToMap_ = function(map, key, value) {
  if(!map[key]) {
    map[key] = []
  }
  if(!goog.array.contains(map[key], value)) {
    map[key].push(value)
  }
};
goog.net.xhrMonitor = new goog.net.XhrMonitor_;
goog.provide("goog.uri.utils");
goog.provide("goog.uri.utils.ComponentIndex");
goog.require("goog.asserts");
goog.require("goog.string");
goog.uri.utils.CharCode_ = {AMPERSAND:38, EQUAL:61, HASH:35, QUESTION:63};
goog.uri.utils.buildFromEncodedParts = function(opt_scheme, opt_userInfo, opt_domain, opt_port, opt_path, opt_queryData, opt_fragment) {
  var out = [];
  if(opt_scheme) {
    out.push(opt_scheme, ":")
  }
  if(opt_domain) {
    out.push("//");
    if(opt_userInfo) {
      out.push(opt_userInfo, "@")
    }
    out.push(opt_domain);
    if(opt_port) {
      out.push(":", opt_port)
    }
  }
  if(opt_path) {
    out.push(opt_path)
  }
  if(opt_queryData) {
    out.push("?", opt_queryData)
  }
  if(opt_fragment) {
    out.push("#", opt_fragment)
  }
  return out.join("")
};
goog.uri.utils.splitRe_ = new RegExp("^" + "(?:" + "([^:/?#.]+)" + ":)?" + "(?://" + "(?:([^/?#]*)@)?" + "([\\w\\d\\-\\u0100-\\uffff.%]*)" + "(?::([0-9]+))?" + ")?" + "([^?#]+)?" + "(?:\\?([^#]*))?" + "(?:#(.*))?" + "$");
goog.uri.utils.ComponentIndex = {SCHEME:1, USER_INFO:2, DOMAIN:3, PORT:4, PATH:5, QUERY_DATA:6, FRAGMENT:7};
goog.uri.utils.split = function(uri) {
  return uri.match(goog.uri.utils.splitRe_)
};
goog.uri.utils.decodeIfPossible_ = function(uri) {
  return uri && decodeURIComponent(uri)
};
goog.uri.utils.getComponentByIndex_ = function(componentIndex, uri) {
  return goog.uri.utils.split(uri)[componentIndex] || null
};
goog.uri.utils.getScheme = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.SCHEME, uri)
};
goog.uri.utils.getUserInfoEncoded = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.USER_INFO, uri)
};
goog.uri.utils.getUserInfo = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getUserInfoEncoded(uri))
};
goog.uri.utils.getDomainEncoded = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.DOMAIN, uri)
};
goog.uri.utils.getDomain = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getDomainEncoded(uri))
};
goog.uri.utils.getPort = function(uri) {
  return Number(goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.PORT, uri)) || null
};
goog.uri.utils.getPathEncoded = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.PATH, uri)
};
goog.uri.utils.getPath = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getPathEncoded(uri))
};
goog.uri.utils.getQueryData = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.QUERY_DATA, uri)
};
goog.uri.utils.getFragmentEncoded = function(uri) {
  var hashIndex = uri.indexOf("#");
  return hashIndex < 0 ? null : uri.substr(hashIndex + 1)
};
goog.uri.utils.setFragmentEncoded = function(uri, fragment) {
  return goog.uri.utils.removeFragment(uri) + (fragment ? "#" + fragment : "")
};
goog.uri.utils.getFragment = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getFragmentEncoded(uri))
};
goog.uri.utils.getHost = function(uri) {
  var pieces = goog.uri.utils.split(uri);
  return goog.uri.utils.buildFromEncodedParts(pieces[goog.uri.utils.ComponentIndex.SCHEME], pieces[goog.uri.utils.ComponentIndex.USER_INFO], pieces[goog.uri.utils.ComponentIndex.DOMAIN], pieces[goog.uri.utils.ComponentIndex.PORT])
};
goog.uri.utils.getPathAndAfter = function(uri) {
  var pieces = goog.uri.utils.split(uri);
  return goog.uri.utils.buildFromEncodedParts(null, null, null, null, pieces[goog.uri.utils.ComponentIndex.PATH], pieces[goog.uri.utils.ComponentIndex.QUERY_DATA], pieces[goog.uri.utils.ComponentIndex.FRAGMENT])
};
goog.uri.utils.removeFragment = function(uri) {
  var hashIndex = uri.indexOf("#");
  return hashIndex < 0 ? uri : uri.substr(0, hashIndex)
};
goog.uri.utils.haveSameDomain = function(uri1, uri2) {
  var pieces1 = goog.uri.utils.split(uri1);
  var pieces2 = goog.uri.utils.split(uri2);
  return pieces1[goog.uri.utils.ComponentIndex.DOMAIN] == pieces2[goog.uri.utils.ComponentIndex.DOMAIN] && pieces1[goog.uri.utils.ComponentIndex.SCHEME] == pieces2[goog.uri.utils.ComponentIndex.SCHEME] && pieces1[goog.uri.utils.ComponentIndex.PORT] == pieces2[goog.uri.utils.ComponentIndex.PORT]
};
goog.uri.utils.assertNoFragmentsOrQueries_ = function(uri) {
  if(goog.DEBUG && (uri.indexOf("#") >= 0 || uri.indexOf("?") >= 0)) {
    throw Error("goog.uri.utils: Fragment or query identifiers are not " + "supported: [" + uri + "]");
  }
};
goog.uri.utils.QueryValue;
goog.uri.utils.QueryArray;
goog.uri.utils.appendQueryData_ = function(buffer) {
  if(buffer[1]) {
    var baseUri = buffer[0];
    var hashIndex = baseUri.indexOf("#");
    if(hashIndex >= 0) {
      buffer.push(baseUri.substr(hashIndex));
      buffer[0] = baseUri = baseUri.substr(0, hashIndex)
    }
    var questionIndex = baseUri.indexOf("?");
    if(questionIndex < 0) {
      buffer[1] = "?"
    }else {
      if(questionIndex == baseUri.length - 1) {
        buffer[1] = undefined
      }
    }
  }
  return buffer.join("")
};
goog.uri.utils.appendKeyValuePairs_ = function(key, value, pairs) {
  if(goog.isArray(value)) {
    value = value;
    for(var j = 0;j < value.length;j++) {
      pairs.push("&", key);
      if(value[j] !== "") {
        pairs.push("=", goog.string.urlEncode(value[j]))
      }
    }
  }else {
    if(value != null) {
      pairs.push("&", key);
      if(value !== "") {
        pairs.push("=", goog.string.urlEncode(value))
      }
    }
  }
};
goog.uri.utils.buildQueryDataBuffer_ = function(buffer, keysAndValues, opt_startIndex) {
  goog.asserts.assert(Math.max(keysAndValues.length - (opt_startIndex || 0), 0) % 2 == 0, "goog.uri.utils: Key/value lists must be even in length.");
  for(var i = opt_startIndex || 0;i < keysAndValues.length;i += 2) {
    goog.uri.utils.appendKeyValuePairs_(keysAndValues[i], keysAndValues[i + 1], buffer)
  }
  return buffer
};
goog.uri.utils.buildQueryData = function(keysAndValues, opt_startIndex) {
  var buffer = goog.uri.utils.buildQueryDataBuffer_([], keysAndValues, opt_startIndex);
  buffer[0] = "";
  return buffer.join("")
};
goog.uri.utils.buildQueryDataBufferFromMap_ = function(buffer, map) {
  for(var key in map) {
    goog.uri.utils.appendKeyValuePairs_(key, map[key], buffer)
  }
  return buffer
};
goog.uri.utils.buildQueryDataFromMap = function(map) {
  var buffer = goog.uri.utils.buildQueryDataBufferFromMap_([], map);
  buffer[0] = "";
  return buffer.join("")
};
goog.uri.utils.appendParams = function(uri, var_args) {
  return goog.uri.utils.appendQueryData_(arguments.length == 2 ? goog.uri.utils.buildQueryDataBuffer_([uri], arguments[1], 0) : goog.uri.utils.buildQueryDataBuffer_([uri], arguments, 1))
};
goog.uri.utils.appendParamsFromMap = function(uri, map) {
  return goog.uri.utils.appendQueryData_(goog.uri.utils.buildQueryDataBufferFromMap_([uri], map))
};
goog.uri.utils.appendParam = function(uri, key, value) {
  return goog.uri.utils.appendQueryData_([uri, "&", key, "=", goog.string.urlEncode(value)])
};
goog.uri.utils.findParam_ = function(uri, startIndex, keyEncoded, hashOrEndIndex) {
  var index = startIndex;
  var keyLength = keyEncoded.length;
  while((index = uri.indexOf(keyEncoded, index)) >= 0 && index < hashOrEndIndex) {
    var precedingChar = uri.charCodeAt(index - 1);
    if(precedingChar == goog.uri.utils.CharCode_.AMPERSAND || precedingChar == goog.uri.utils.CharCode_.QUESTION) {
      var followingChar = uri.charCodeAt(index + keyLength);
      if(!followingChar || followingChar == goog.uri.utils.CharCode_.EQUAL || followingChar == goog.uri.utils.CharCode_.AMPERSAND || followingChar == goog.uri.utils.CharCode_.HASH) {
        return index
      }
    }
    index += keyLength + 1
  }
  return-1
};
goog.uri.utils.hashOrEndRe_ = /#|$/;
goog.uri.utils.hasParam = function(uri, keyEncoded) {
  return goog.uri.utils.findParam_(uri, 0, keyEncoded, uri.search(goog.uri.utils.hashOrEndRe_)) >= 0
};
goog.uri.utils.getParamValue = function(uri, keyEncoded) {
  var hashOrEndIndex = uri.search(goog.uri.utils.hashOrEndRe_);
  var foundIndex = goog.uri.utils.findParam_(uri, 0, keyEncoded, hashOrEndIndex);
  if(foundIndex < 0) {
    return null
  }else {
    var endPosition = uri.indexOf("&", foundIndex);
    if(endPosition < 0 || endPosition > hashOrEndIndex) {
      endPosition = hashOrEndIndex
    }
    foundIndex += keyEncoded.length + 1;
    return goog.string.urlDecode(uri.substr(foundIndex, endPosition - foundIndex))
  }
};
goog.uri.utils.getParamValues = function(uri, keyEncoded) {
  var hashOrEndIndex = uri.search(goog.uri.utils.hashOrEndRe_);
  var position = 0;
  var foundIndex;
  var result = [];
  while((foundIndex = goog.uri.utils.findParam_(uri, position, keyEncoded, hashOrEndIndex)) >= 0) {
    position = uri.indexOf("&", foundIndex);
    if(position < 0 || position > hashOrEndIndex) {
      position = hashOrEndIndex
    }
    foundIndex += keyEncoded.length + 1;
    result.push(goog.string.urlDecode(uri.substr(foundIndex, position - foundIndex)))
  }
  return result
};
goog.uri.utils.trailingQueryPunctuationRe_ = /[?&]($|#)/;
goog.uri.utils.removeParam = function(uri, keyEncoded) {
  var hashOrEndIndex = uri.search(goog.uri.utils.hashOrEndRe_);
  var position = 0;
  var foundIndex;
  var buffer = [];
  while((foundIndex = goog.uri.utils.findParam_(uri, position, keyEncoded, hashOrEndIndex)) >= 0) {
    buffer.push(uri.substring(position, foundIndex));
    position = Math.min(uri.indexOf("&", foundIndex) + 1 || hashOrEndIndex, hashOrEndIndex)
  }
  buffer.push(uri.substr(position));
  return buffer.join("").replace(goog.uri.utils.trailingQueryPunctuationRe_, "$1")
};
goog.uri.utils.setParam = function(uri, keyEncoded, value) {
  return goog.uri.utils.appendParam(goog.uri.utils.removeParam(uri, keyEncoded), keyEncoded, value)
};
goog.uri.utils.appendPath = function(baseUri, path) {
  goog.uri.utils.assertNoFragmentsOrQueries_(baseUri);
  if(goog.string.endsWith(baseUri, "/")) {
    baseUri = baseUri.substr(0, baseUri.length - 1)
  }
  if(goog.string.startsWith(path, "/")) {
    path = path.substr(1)
  }
  return goog.string.buildString(baseUri, "/", path)
};
goog.uri.utils.StandardQueryParam = {RANDOM:"zx"};
goog.uri.utils.makeUnique = function(uri) {
  return goog.uri.utils.setParam(uri, goog.uri.utils.StandardQueryParam.RANDOM, goog.string.getRandomString())
};
goog.provide("goog.net.XhrIo");
goog.provide("goog.net.XhrIo.ResponseType");
goog.require("goog.Timer");
goog.require("goog.debug.Logger");
goog.require("goog.debug.entryPointRegistry");
goog.require("goog.debug.errorHandlerWeakDep");
goog.require("goog.events.EventTarget");
goog.require("goog.json");
goog.require("goog.net.ErrorCode");
goog.require("goog.net.EventType");
goog.require("goog.net.HttpStatus");
goog.require("goog.net.XmlHttp");
goog.require("goog.net.xhrMonitor");
goog.require("goog.object");
goog.require("goog.structs");
goog.require("goog.structs.Map");
goog.require("goog.uri.utils");
goog.net.XhrIo = function(opt_xmlHttpFactory) {
  goog.events.EventTarget.call(this);
  this.headers = new goog.structs.Map;
  this.xmlHttpFactory_ = opt_xmlHttpFactory || null
};
goog.inherits(goog.net.XhrIo, goog.events.EventTarget);
goog.net.XhrIo.ResponseType = {DEFAULT:"", TEXT:"text", DOCUMENT:"document", BLOB:"blob", ARRAY_BUFFER:"arraybuffer"};
goog.net.XhrIo.prototype.logger_ = goog.debug.Logger.getLogger("goog.net.XhrIo");
goog.net.XhrIo.CONTENT_TYPE_HEADER = "Content-Type";
goog.net.XhrIo.HTTP_SCHEME_PATTERN = /^https?:?$/i;
goog.net.XhrIo.FORM_CONTENT_TYPE = "application/x-www-form-urlencoded;charset=utf-8";
goog.net.XhrIo.sendInstances_ = [];
goog.net.XhrIo.send = function(url, opt_callback, opt_method, opt_content, opt_headers, opt_timeoutInterval) {
  var x = new goog.net.XhrIo;
  goog.net.XhrIo.sendInstances_.push(x);
  if(opt_callback) {
    goog.events.listen(x, goog.net.EventType.COMPLETE, opt_callback)
  }
  goog.events.listen(x, goog.net.EventType.READY, goog.partial(goog.net.XhrIo.cleanupSend_, x));
  if(opt_timeoutInterval) {
    x.setTimeoutInterval(opt_timeoutInterval)
  }
  x.send(url, opt_method, opt_content, opt_headers)
};
goog.net.XhrIo.cleanup = function() {
  var instances = goog.net.XhrIo.sendInstances_;
  while(instances.length) {
    instances.pop().dispose()
  }
};
goog.net.XhrIo.protectEntryPoints = function(errorHandler) {
  goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_ = errorHandler.protectEntryPoint(goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_)
};
goog.net.XhrIo.cleanupSend_ = function(XhrIo) {
  XhrIo.dispose();
  goog.array.remove(goog.net.XhrIo.sendInstances_, XhrIo)
};
goog.net.XhrIo.prototype.active_ = false;
goog.net.XhrIo.prototype.xhr_ = null;
goog.net.XhrIo.prototype.xhrOptions_ = null;
goog.net.XhrIo.prototype.lastUri_ = "";
goog.net.XhrIo.prototype.lastMethod_ = "";
goog.net.XhrIo.prototype.lastErrorCode_ = goog.net.ErrorCode.NO_ERROR;
goog.net.XhrIo.prototype.lastError_ = "";
goog.net.XhrIo.prototype.errorDispatched_ = false;
goog.net.XhrIo.prototype.inSend_ = false;
goog.net.XhrIo.prototype.inOpen_ = false;
goog.net.XhrIo.prototype.inAbort_ = false;
goog.net.XhrIo.prototype.timeoutInterval_ = 0;
goog.net.XhrIo.prototype.timeoutId_ = null;
goog.net.XhrIo.prototype.responseType_ = goog.net.XhrIo.ResponseType.DEFAULT;
goog.net.XhrIo.prototype.withCredentials_ = false;
goog.net.XhrIo.prototype.getTimeoutInterval = function() {
  return this.timeoutInterval_
};
goog.net.XhrIo.prototype.setTimeoutInterval = function(ms) {
  this.timeoutInterval_ = Math.max(0, ms)
};
goog.net.XhrIo.prototype.setResponseType = function(type) {
  this.responseType_ = type
};
goog.net.XhrIo.prototype.getResponseType = function() {
  return this.responseType_
};
goog.net.XhrIo.prototype.setWithCredentials = function(withCredentials) {
  this.withCredentials_ = withCredentials
};
goog.net.XhrIo.prototype.getWithCredentials = function() {
  return this.withCredentials_
};
goog.net.XhrIo.prototype.send = function(url, opt_method, opt_content, opt_headers) {
  if(this.xhr_) {
    throw Error("[goog.net.XhrIo] Object is active with another request");
  }
  var method = opt_method || "GET";
  this.lastUri_ = url;
  this.lastError_ = "";
  this.lastErrorCode_ = goog.net.ErrorCode.NO_ERROR;
  this.lastMethod_ = method;
  this.errorDispatched_ = false;
  this.active_ = true;
  this.xhr_ = this.createXhr();
  this.xhrOptions_ = this.xmlHttpFactory_ ? this.xmlHttpFactory_.getOptions() : goog.net.XmlHttp.getOptions();
  goog.net.xhrMonitor.markXhrOpen(this.xhr_);
  this.xhr_.onreadystatechange = goog.bind(this.onReadyStateChange_, this);
  try {
    this.logger_.fine(this.formatMsg_("Opening Xhr"));
    this.inOpen_ = true;
    this.xhr_.open(method, url, true);
    this.inOpen_ = false
  }catch(err) {
    this.logger_.fine(this.formatMsg_("Error opening Xhr: " + err.message));
    this.error_(goog.net.ErrorCode.EXCEPTION, err);
    return
  }
  var content = opt_content || "";
  var headers = this.headers.clone();
  if(opt_headers) {
    goog.structs.forEach(opt_headers, function(value, key) {
      headers.set(key, value)
    })
  }
  if(method == "POST" && !headers.containsKey(goog.net.XhrIo.CONTENT_TYPE_HEADER)) {
    headers.set(goog.net.XhrIo.CONTENT_TYPE_HEADER, goog.net.XhrIo.FORM_CONTENT_TYPE)
  }
  goog.structs.forEach(headers, function(value, key) {
    this.xhr_.setRequestHeader(key, value)
  }, this);
  if(this.responseType_) {
    this.xhr_.responseType = this.responseType_
  }
  if(goog.object.containsKey(this.xhr_, "withCredentials")) {
    this.xhr_.withCredentials = this.withCredentials_
  }
  try {
    if(this.timeoutId_) {
      goog.Timer.defaultTimerObject.clearTimeout(this.timeoutId_);
      this.timeoutId_ = null
    }
    if(this.timeoutInterval_ > 0) {
      this.logger_.fine(this.formatMsg_("Will abort after " + this.timeoutInterval_ + "ms if incomplete"));
      this.timeoutId_ = goog.Timer.defaultTimerObject.setTimeout(goog.bind(this.timeout_, this), this.timeoutInterval_)
    }
    this.logger_.fine(this.formatMsg_("Sending request"));
    this.inSend_ = true;
    this.xhr_.send(content);
    this.inSend_ = false
  }catch(err) {
    this.logger_.fine(this.formatMsg_("Send error: " + err.message));
    this.error_(goog.net.ErrorCode.EXCEPTION, err)
  }
};
goog.net.XhrIo.prototype.createXhr = function() {
  return this.xmlHttpFactory_ ? this.xmlHttpFactory_.createInstance() : new goog.net.XmlHttp
};
goog.net.XhrIo.prototype.dispatchEvent = function(e) {
  if(this.xhr_) {
    goog.net.xhrMonitor.pushContext(this.xhr_);
    try {
      return goog.net.XhrIo.superClass_.dispatchEvent.call(this, e)
    }finally {
      goog.net.xhrMonitor.popContext()
    }
  }else {
    return goog.net.XhrIo.superClass_.dispatchEvent.call(this, e)
  }
};
goog.net.XhrIo.prototype.timeout_ = function() {
  if(typeof goog == "undefined") {
  }else {
    if(this.xhr_) {
      this.lastError_ = "Timed out after " + this.timeoutInterval_ + "ms, aborting";
      this.lastErrorCode_ = goog.net.ErrorCode.TIMEOUT;
      this.logger_.fine(this.formatMsg_(this.lastError_));
      this.dispatchEvent(goog.net.EventType.TIMEOUT);
      this.abort(goog.net.ErrorCode.TIMEOUT)
    }
  }
};
goog.net.XhrIo.prototype.error_ = function(errorCode, err) {
  this.active_ = false;
  if(this.xhr_) {
    this.inAbort_ = true;
    this.xhr_.abort();
    this.inAbort_ = false
  }
  this.lastError_ = err;
  this.lastErrorCode_ = errorCode;
  this.dispatchErrors_();
  this.cleanUpXhr_()
};
goog.net.XhrIo.prototype.dispatchErrors_ = function() {
  if(!this.errorDispatched_) {
    this.errorDispatched_ = true;
    this.dispatchEvent(goog.net.EventType.COMPLETE);
    this.dispatchEvent(goog.net.EventType.ERROR)
  }
};
goog.net.XhrIo.prototype.abort = function(opt_failureCode) {
  if(this.xhr_ && this.active_) {
    this.logger_.fine(this.formatMsg_("Aborting"));
    this.active_ = false;
    this.inAbort_ = true;
    this.xhr_.abort();
    this.inAbort_ = false;
    this.lastErrorCode_ = opt_failureCode || goog.net.ErrorCode.ABORT;
    this.dispatchEvent(goog.net.EventType.COMPLETE);
    this.dispatchEvent(goog.net.EventType.ABORT);
    this.cleanUpXhr_()
  }
};
goog.net.XhrIo.prototype.disposeInternal = function() {
  if(this.xhr_) {
    if(this.active_) {
      this.active_ = false;
      this.inAbort_ = true;
      this.xhr_.abort();
      this.inAbort_ = false
    }
    this.cleanUpXhr_(true)
  }
  goog.net.XhrIo.superClass_.disposeInternal.call(this)
};
goog.net.XhrIo.prototype.onReadyStateChange_ = function() {
  if(!this.inOpen_ && !this.inSend_ && !this.inAbort_) {
    this.onReadyStateChangeEntryPoint_()
  }else {
    this.onReadyStateChangeHelper_()
  }
};
goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_ = function() {
  this.onReadyStateChangeHelper_()
};
goog.net.XhrIo.prototype.onReadyStateChangeHelper_ = function() {
  if(!this.active_) {
    return
  }
  if(typeof goog == "undefined") {
  }else {
    if(this.xhrOptions_[goog.net.XmlHttp.OptionType.LOCAL_REQUEST_ERROR] && this.getReadyState() == goog.net.XmlHttp.ReadyState.COMPLETE && this.getStatus() == 2) {
      this.logger_.fine(this.formatMsg_("Local request error detected and ignored"))
    }else {
      if(this.inSend_ && this.getReadyState() == goog.net.XmlHttp.ReadyState.COMPLETE) {
        goog.Timer.defaultTimerObject.setTimeout(goog.bind(this.onReadyStateChange_, this), 0);
        return
      }
      this.dispatchEvent(goog.net.EventType.READY_STATE_CHANGE);
      if(this.isComplete()) {
        this.logger_.fine(this.formatMsg_("Request complete"));
        this.active_ = false;
        if(this.isSuccess()) {
          this.dispatchEvent(goog.net.EventType.COMPLETE);
          this.dispatchEvent(goog.net.EventType.SUCCESS)
        }else {
          this.lastErrorCode_ = goog.net.ErrorCode.HTTP_ERROR;
          this.lastError_ = this.getStatusText() + " [" + this.getStatus() + "]";
          this.dispatchErrors_()
        }
        this.cleanUpXhr_()
      }
    }
  }
};
goog.net.XhrIo.prototype.cleanUpXhr_ = function(opt_fromDispose) {
  if(this.xhr_) {
    var xhr = this.xhr_;
    var clearedOnReadyStateChange = this.xhrOptions_[goog.net.XmlHttp.OptionType.USE_NULL_FUNCTION] ? goog.nullFunction : null;
    this.xhr_ = null;
    this.xhrOptions_ = null;
    if(this.timeoutId_) {
      goog.Timer.defaultTimerObject.clearTimeout(this.timeoutId_);
      this.timeoutId_ = null
    }
    if(!opt_fromDispose) {
      goog.net.xhrMonitor.pushContext(xhr);
      this.dispatchEvent(goog.net.EventType.READY);
      goog.net.xhrMonitor.popContext()
    }
    goog.net.xhrMonitor.markXhrClosed(xhr);
    try {
      xhr.onreadystatechange = clearedOnReadyStateChange
    }catch(e) {
      this.logger_.severe("Problem encountered resetting onreadystatechange: " + e.message)
    }
  }
};
goog.net.XhrIo.prototype.isActive = function() {
  return!!this.xhr_
};
goog.net.XhrIo.prototype.isComplete = function() {
  return this.getReadyState() == goog.net.XmlHttp.ReadyState.COMPLETE
};
goog.net.XhrIo.prototype.isSuccess = function() {
  switch(this.getStatus()) {
    case 0:
      return!this.isLastUriEffectiveSchemeHttp_();
    case goog.net.HttpStatus.OK:
    ;
    case goog.net.HttpStatus.NO_CONTENT:
    ;
    case goog.net.HttpStatus.NOT_MODIFIED:
      return true;
    default:
      return false
  }
};
goog.net.XhrIo.prototype.isLastUriEffectiveSchemeHttp_ = function() {
  var lastUriScheme = goog.isString(this.lastUri_) ? goog.uri.utils.getScheme(this.lastUri_) : this.lastUri_.getScheme();
  if(lastUriScheme) {
    return goog.net.XhrIo.HTTP_SCHEME_PATTERN.test(lastUriScheme)
  }
  if(self.location) {
    return goog.net.XhrIo.HTTP_SCHEME_PATTERN.test(self.location.protocol)
  }else {
    return true
  }
};
goog.net.XhrIo.prototype.getReadyState = function() {
  return this.xhr_ ? this.xhr_.readyState : goog.net.XmlHttp.ReadyState.UNINITIALIZED
};
goog.net.XhrIo.prototype.getStatus = function() {
  try {
    return this.getReadyState() > goog.net.XmlHttp.ReadyState.LOADED ? this.xhr_.status : -1
  }catch(e) {
    this.logger_.warning("Can not get status: " + e.message);
    return-1
  }
};
goog.net.XhrIo.prototype.getStatusText = function() {
  try {
    return this.getReadyState() > goog.net.XmlHttp.ReadyState.LOADED ? this.xhr_.statusText : ""
  }catch(e) {
    this.logger_.fine("Can not get status: " + e.message);
    return""
  }
};
goog.net.XhrIo.prototype.getLastUri = function() {
  return String(this.lastUri_)
};
goog.net.XhrIo.prototype.getResponseText = function() {
  try {
    return this.xhr_ ? this.xhr_.responseText : ""
  }catch(e) {
    this.logger_.fine("Can not get responseText: " + e.message);
    return""
  }
};
goog.net.XhrIo.prototype.getResponseXml = function() {
  try {
    return this.xhr_ ? this.xhr_.responseXML : null
  }catch(e) {
    this.logger_.fine("Can not get responseXML: " + e.message);
    return null
  }
};
goog.net.XhrIo.prototype.getResponseJson = function(opt_xssiPrefix) {
  if(!this.xhr_) {
    return undefined
  }
  var responseText = this.xhr_.responseText;
  if(opt_xssiPrefix && responseText.indexOf(opt_xssiPrefix) == 0) {
    responseText = responseText.substring(opt_xssiPrefix.length)
  }
  return goog.json.parse(responseText)
};
goog.net.XhrIo.prototype.getResponse = function() {
  try {
    return this.xhr_ && this.xhr_.response
  }catch(e) {
    this.logger_.fine("Can not get response: " + e.message);
    return null
  }
};
goog.net.XhrIo.prototype.getResponseHeader = function(key) {
  return this.xhr_ && this.isComplete() ? this.xhr_.getResponseHeader(key) : undefined
};
goog.net.XhrIo.prototype.getAllResponseHeaders = function() {
  return this.xhr_ && this.isComplete() ? this.xhr_.getAllResponseHeaders() : ""
};
goog.net.XhrIo.prototype.getLastErrorCode = function() {
  return this.lastErrorCode_
};
goog.net.XhrIo.prototype.getLastError = function() {
  return goog.isString(this.lastError_) ? this.lastError_ : String(this.lastError_)
};
goog.net.XhrIo.prototype.formatMsg_ = function(msg) {
  return msg + " [" + this.lastMethod_ + " " + this.lastUri_ + " " + this.getStatus() + "]"
};
goog.debug.entryPointRegistry.register(function(transformer) {
  goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_ = transformer(goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_)
});
goog.provide("strava.client");
goog.require("cljs.core");
goog.require("clojure.string");
goog.require("domina.events");
goog.require("goog.net.XhrIo");
goog.require("domina.xpath");
goog.require("domina");
goog.require("hiccups.runtime");
strava.client.segment_row = function segment_row(p__71096, segment) {
  var map__71115__71116 = p__71096;
  var map__71115__71117 = cljs.core.seq_QMARK_.call(null, map__71115__71116) ? cljs.core.apply.call(null, cljs.core.hash_map, map__71115__71116) : map__71115__71116;
  var data__71118 = map__71115__71117;
  var id__71119 = cljs.core._lookup.call(null, map__71115__71117, "\ufdd0'id", null);
  var end_latlng__71120 = cljs.core._lookup.call(null, map__71115__71117, "\ufdd0'end_latlng", null);
  var start_latlng__71121 = cljs.core._lookup.call(null, map__71115__71117, "\ufdd0'start_latlng", null);
  var name__71122 = cljs.core._lookup.call(null, map__71115__71117, "\ufdd0'name", null);
  return[cljs.core.str("<tr"), cljs.core.str(""), cljs.core.str(">"), cljs.core.str("<td"), cljs.core.str(hiccups.runtime.render_attr_map.call(null, cljs.core.ObjMap.fromObject(["\ufdd0'role", "\ufdd0'id", "\ufdd0'class"], {"\ufdd0'role":"whatever", "\ufdd0'id":[cljs.core.str("#"), cljs.core.str(id__71119)].join(""), "\ufdd0'class":null}))), cljs.core.str(">"), cljs.core.str(hiccups.runtime.render_html.call(null, id__71119)), cljs.core.str("</td>"), cljs.core.str(function() {
    var attrs71123__71128 = name__71122;
    if(cljs.core.map_QMARK_.call(null, attrs71123__71128)) {
      return[cljs.core.str("<td"), cljs.core.str(hiccups.runtime.render_attr_map.call(null, cljs.core.merge.call(null, cljs.core.ObjMap.fromObject(["\ufdd0'id", "\ufdd0'class"], {"\ufdd0'id":null, "\ufdd0'class":null}), attrs71123__71128))), cljs.core.str(" />")].join("")
    }else {
      return[cljs.core.str("<td>"), cljs.core.str(hiccups.runtime.render_html.call(null, attrs71123__71128)), cljs.core.str("</td>")].join("")
    }
  }()), cljs.core.str(function() {
    var attrs71124__71129 = cljs.core.first.call(null, start_latlng__71121);
    if(cljs.core.map_QMARK_.call(null, attrs71124__71129)) {
      return[cljs.core.str("<td"), cljs.core.str(hiccups.runtime.render_attr_map.call(null, cljs.core.merge.call(null, cljs.core.ObjMap.fromObject(["\ufdd0'id", "\ufdd0'class"], {"\ufdd0'id":null, "\ufdd0'class":null}), attrs71124__71129))), cljs.core.str(" />")].join("")
    }else {
      return[cljs.core.str("<td>"), cljs.core.str(hiccups.runtime.render_html.call(null, attrs71124__71129)), cljs.core.str("</td>")].join("")
    }
  }()), cljs.core.str(function() {
    var attrs71125__71130 = cljs.core.second.call(null, start_latlng__71121);
    if(cljs.core.map_QMARK_.call(null, attrs71125__71130)) {
      return[cljs.core.str("<td"), cljs.core.str(hiccups.runtime.render_attr_map.call(null, cljs.core.merge.call(null, cljs.core.ObjMap.fromObject(["\ufdd0'id", "\ufdd0'class"], {"\ufdd0'id":null, "\ufdd0'class":null}), attrs71125__71130))), cljs.core.str(" />")].join("")
    }else {
      return[cljs.core.str("<td>"), cljs.core.str(hiccups.runtime.render_html.call(null, attrs71125__71130)), cljs.core.str("</td>")].join("")
    }
  }()), cljs.core.str(function() {
    var attrs71126__71131 = cljs.core.first.call(null, end_latlng__71120);
    if(cljs.core.map_QMARK_.call(null, attrs71126__71131)) {
      return[cljs.core.str("<td"), cljs.core.str(hiccups.runtime.render_attr_map.call(null, cljs.core.merge.call(null, cljs.core.ObjMap.fromObject(["\ufdd0'id", "\ufdd0'class"], {"\ufdd0'id":null, "\ufdd0'class":null}), attrs71126__71131))), cljs.core.str(" />")].join("")
    }else {
      return[cljs.core.str("<td>"), cljs.core.str(hiccups.runtime.render_html.call(null, attrs71126__71131)), cljs.core.str("</td>")].join("")
    }
  }()), cljs.core.str(function() {
    var attrs71127__71132 = cljs.core.second.call(null, end_latlng__71120);
    if(cljs.core.map_QMARK_.call(null, attrs71127__71132)) {
      return[cljs.core.str("<td"), cljs.core.str(hiccups.runtime.render_attr_map.call(null, cljs.core.merge.call(null, cljs.core.ObjMap.fromObject(["\ufdd0'id", "\ufdd0'class"], {"\ufdd0'id":null, "\ufdd0'class":null}), attrs71127__71132))), cljs.core.str(" />")].join("")
    }else {
      return[cljs.core.str("<td>"), cljs.core.str(hiccups.runtime.render_html.call(null, attrs71127__71132)), cljs.core.str("</td>")].join("")
    }
  }()), cljs.core.str("</tr>")].join("")
};
strava.client.main = function main() {
  goog.net.XhrIo.send([cljs.core.str("user")].join(""), function(json) {
    var data__71136 = cljs.core.js__GT_clj.call(null, json.target.getResponseJson(), "\ufdd0'keywordize-keys", true);
    console.log("user", [cljs.core.str(data__71136)].join(""));
    domina.set_text_BANG_.call(null, domina.by_id.call(null, "user"), [cljs.core.str((new cljs.core.Keyword("\ufdd0'firstname")).call(null, data__71136)), cljs.core.str(" "), cljs.core.str((new cljs.core.Keyword("\ufdd0'lastname")).call(null, data__71136))].join(""));
    return domina.set_attr_BANG_.call(null, domina.by_id.call(null, "image"), "src", (new cljs.core.Keyword("\ufdd0'profile_medium")).call(null, data__71136))
  });
  return goog.net.XhrIo.send([cljs.core.str("segments")].join(""), function(json) {
    var data__71137 = cljs.core.js__GT_clj.call(null, json.target.getResponseJson(), "\ufdd0'keywordize-keys", true);
    var sel_div__71138 = domina.xpath.xpath.call(null, "//tbody[@id='data']");
    domina.destroy_children_BANG_.call(null, sel_div__71138);
    return domina.append_BANG_.call(null, sel_div__71138, [cljs.core.str(cljs.core.map.call(null, strava.client.segment_row, data__71137))].join(""))
  })
};
goog.exportSymbol("strava.client.main", strava.client.main);
